-- current screens --
23328.pts-0.power8    db
                      mysql-client
13154.pts-0.power8    dask-sched
 7481.pts-0.power8    redis
                      redis-client
18936.pts-0.power8    power8     (xserver :1001)
 808.pts-17.power8    console
13541.pts-8.power8    console
-----------------------------------------------------



-------------------------------------------------------------------------------------------------------
2019

January

--07--
>>> Backup mysql
~/anaconda2N/bin/mysqldump --databases rnafold -h compute-0-93 -P 14404 -u rnafold -p | bzip2 >rnafold_dump.sql.bz2


--02--

>>> Refreshing "taxon robustness" plots:

python2 plot_tree_effects_anaylsis_results_on_tree.py --regressions-file tree_traits_effects_analysis_with_taxgroups.out.dLFE.length.300.GenomicGC.csv
python2 plot_tree_effects_anaylsis_results_on_tree.py --regressions-file tree_traits_effects_analysis_with_taxgroups.out.dLFE.length.300.GenomicENc.prime.csv
python2 plot_tree_effects_anaylsis_results_on_tree.py --regressions-file tree_traits_effects_analysis_with_taxgroups.out.dLFE.length.300.OptimumTemp.csv


-------------------------------------------------------------------------------------------------------
2018

December

--27--
>>> Environment report:
python environment_report.py

pandoc -f rst -t markdown environment_report.rst >environment_report.rst.md

>>> Fungi families:
blue fungi (aspergilus, sporothrix)
Pezizomycotina

red fungi (candida, eremothecium)
Saccharomycotina


--22--
>>> Trying (and failing) to get exact p-values for correlations between features. Even with exact=TRUE, p-values are:

   Var1 Var2         Cor DirectionsIndicator       Pval
1     1    1  1.00000000                   + 1.00000000
2     1    2 -0.47120306                <NA> 0.00000000
3     1    3 -0.53550033                <NA> 0.00000000
4     1    4  0.51512262                <NA> 0.00000000
5     2    2  1.00000000                   + 1.00000000
6     2    3  0.83622593                <NA> 0.00000000
7     2    4  0.08310694                <NA> 0.05998947
8     3    3  1.00000000                   + 1.00000000
9     3    4  0.02510997                <NA> 0.57030121
10    4    4  1.00000000                   + 1.00000000



--11--

> Gammaproteobacteria
python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249   --profile-scale=1.0 --limit-taxonomy=1236

> Euryarchaeota
python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249   --profile-scale=1.0 --limit-taxonomy=28890

python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.35   --profile-scale=1.8 --font-size=10 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=2.0 --PCA-legend-x-pos=-2.1 --zoom=1.2 --symbol-scale=24.0 --trait-to-plot=Temp --limit-taxonomy=28890

>
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.80  --profile-scale=1.0 --font-size=6.3 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.7 --PCA-legend-x-pos=-2.8 --zoom=1.8 --symbol-scale=12.0 --trait-to-plot=Temp

python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.80  --profile-scale=1.0 --font-size=6.3 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.7 --PCA-legend-x-pos=-5.0 --zoom=1.1 --symbol-scale=6.0 --trait-to-plot=Temp

> Gammaproteo
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.40   --profile-scale=1.2 --font-size=11 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-3.0 --zoom=1.2 --limit-taxonomy=1236 --trait-to-plot=Endosymbiont --symbol-scale=20

--05--

>>> Re-calculating profiles to include correlations with codon profiles
(partially done - 256 species done)
python2 sample_new_species.py --size 10 --exclude-species 107806,1618775,224308,235909,443254,511145,1429439,263358,214684,1529318,365046,946362,1033802,491915,469615,1182568,555779,203124,1343739,1198449,691883,795359,762948,552811,1177928,243365,596323,608538,402612,314260,744533,10228,251221,575540,1072681,358681,190650,196627,156889,391623,224324,983544,866499,1408204,572478,46234,309799,300852,1287680,703613,556484,266940,1046627,322098,945553,1618673,937777,1123384,910314,553190,272633,1185651,797210,272623,694429,388396,2769,505682,391009,469371,861299,379066,1429438,862908,243090,391603,262768,1514904,314225,1047168,946077,412133,432331,272844,1198115,554373,649638,407035,1266844,70601,633147,353154,272557,561896,1273541,1619005,83332,593117,1618742,64091,526218,290633,398720,635003,196164,373903,926550,486041,641526,589924,498848,284812,312017,481448,414004,931890,36329,272567,1208320,1574623,335284,5061,517417,431947,273121,402881,1056495,564608,336722,381306,507754,1737403,521011,309801,123214,765952,926562,331104,595528,1189619,255470,515635,476282,457570,926571,400667,1618331,313596,1069680,1618369,997884,1432061,1165094,289377,670487,420890,578462,1116230,153151,1148,500635,695850,469599,3067,272631,237561,258594,195065,203123,1619051,418459,747,240015,504728,633149,226185,645134,644295,295405,1189621,353152,298386,585394,319795,979,330214,267608,1223560,242507,190192,280463,263820,59374,221109,1121915,314278,911008,104782,412030,508771,398767,233412,164328,1142394,667014,1347342,1432562,521045,85962,1618595,100226,945713,259536,29656,1229908,1237085,1125630,547144,190485,882,391165,648996,289376,1121088,176280,203267,436907,1469144,484019,1618840,1618671,272635,184922,525909,439292,1439331,743299,383372,521674,1298851,885318,160492,525903,903503,436017,525904,452637,1618841,196600,479433,410358,203907,655815,446470,1266370,167546



November

--30--

>>> Lost files (reverted due to git error):
mfe_plots.py
taxonomy.py
compose_figures.py
plot_xy.py

--25--

>>> Text TODOs:

> [DONE] Explain that window methodology is based on the assumption that the mRNA is linear and long-range interactions can't form (Katz 2003)

> [DONE] Discuss conclusions from each part. specifically, weak dLFE model

> [DONE] Faure, Katz found indications that it is not the mean that is important but the peaks (save for next paper?)

> [DONE] Taxonomy based on NCBI

> [DONE] Selection disclaimer

> [DONE] emp - discuss our interpretation vs. Gu

> [DONE] Define profile - how a trait change, on average, along the CDS

> [20%] Update table S1 for species in completion runs

- Explain that the 0-crossing data only considers species in which 0 is crossed.

> Supp. Table S3 (Env vars, endosymbiont, tree yes/no, genome source)

> [DONE] New supp. figure S4: ENc' vs. dLFE scale

> [DONE] New supp. figure S10: dLFE profile vs. CUB profile

> [DONE] Cite ete3

> Add description of diversity numbers

> Explain scheme

> Endosymbiont annotation is not complete

> Edit figure captions; rely more on details described in methods section to improve concision and clarity

> Change "R^2" to "R^2*sign" everywhere

> Temp: 7A,B, 8B

> Endosymbionts: 7C,D

> Eukaryotes:

>>> Fig TODOs

> 1
- B - improve graphically
> 2
> 3
A - Stretch transition peak
C - Reference format
> 4
- Fix layout
> 5
- A - highlight fungi better
- Mark Egos everywhere
- B - same size for left/right
- Fix clipping density graph
> 6
- Add C for end
- replace E<->F
> 7
D - Make endosymbionts

Table S3
Figure S1 - Update (after runs)



--18--

>>> Update stats-reports (after completion runs)

> pt1
time python2 stats_reports.py --taxid=866499,635003,556484,555500,158189,456481,272632,1307761,505682,400682,6669,436017,412133,104782,412030,211586,190485,1313172

> pt2
python2 stats_reports.py --taxid=1618405,521097,3055,543302,196162,696747,1273541,526218,283166,1189621,754035,212717,555778,1236689,469371,449447,1618609,273063,1125630,1618380,224308,641309,204536,403833,1172194,407035,432331,1454006,469615,319795,263820,1619079,926571,517418,46234,335284,522772,1618841,1619051,391603,1229908,1209989,93061,526224,525909,228908,703613,227377,258594,1737403; python2 notify_pushover.py




>>> Updated model and 0-crossing stats

python2 plot_xy.py "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"

   0-CrossingCount  0-CrossingMean  0-CrossingMedian  Count  \
0              500       23.500000              20.0    513
1              371       24.797844              20.0    371
2               65       21.692308              10.0     64
3               64       17.812500              20.0     78

   End-0-CrossingCount  End-0-CrossingMean  End-0-CrossingMedian      Group  \
0                  503          -18.011928                 -10.0        All
1                  370          -11.486486                 -10.0   Bacteria
2                   69          -59.420290                 -40.0  Eukaryota
3                   64          -11.093750                   0.0    Archaea

   TransitionPeakCount  TransitionPeakMean  TransitionPeakMedian
0                  231           37.056277                  30.0
1                  160           40.437500                  40.0
2                   57           26.140351                  30.0
3                   14           42.857143                  30.0

      AllStrongModel  AllWeakModel  ModelStruct  NegativeMid  PositiveEnd  \
all         0.097466      0.074074     0.261209     0.805068     0.370370
bact        0.056604      0.013477     0.320755     0.913747     0.334232
arch        0.234375      0.046875     0.125000     0.734375     0.203125
euk         0.179487      0.384615     0.089744     0.346154     0.679487

      PositiveMid  PositiveStart  SingleSidedModel  TransitionPeak  count  \
all      0.021442       0.797271          0.171540        0.450292  513.0
bact     0.002695       0.878706          0.070081        0.431267  371.0
arch     0.000000       0.609375          0.281250        0.218750   64.0
euk      0.128205       0.564103          0.564103        0.730769   78.0

      RelPositiveStart  RelModelStruct  RelPositiveEnd
all           0.937622        0.686160        0.830409
bact          0.994609        0.811321        0.857143
arch          0.890625        0.515625        0.671875
euk           0.705128        0.230769        0.833333

--17--

>>> completion runs done - still left: recreate start/end profiles for 6669 (throws error)

time python2 profile_plots.py --taxid 6669 --profile=310:10:begin:0 --shuffle-types 11 --computation-tag 102  ; python2 notify_pushover.py
time python2 profile_plots.py --taxid 6669 --profile=310:10:end:0 --shuffle-types 11 --computation-tag 102  ; python2 notify_pushover.py

>>> completion runs: add missing edge-wilcoxon data

> Find species still missing the data (start-referenced profiles)
python2 check_h5_content.py --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"

python2 sample_new_species.py --size 100 --exclude-species 1208320,765952,446470,645134,196627,755732,190485,.........

time python2 profile_plots.py --taxid=326427,184922,156889,1343739,243274,521097,195065,548479,410358,213585,272557,316407,1121088,1429439,1618821,284812,1618643,352472,63737,743718,703613,859192,641309,452652,1618380,905079,1618840,1236703,469382,944289,641526,593117,255470,554373,145458,751945,886377,574566,3218,1469144,1454006,176299,2898,1429438,29656,696747,187420,633147,362976,264462,280699,1618777,1236689,930946,661478,1237085 --distributed --profile=310:10:begin:0 --shuffle-type=11 --computation-tag=102

Total results: 56
Succeeded: 56
Failed: 0 ([])

rm gcdata_v2_taxid_195065_profile_310_10_begin_0_t11.h5  # excluded
rm gcdata_v2_taxid_641309_profile_310_10_begin_0_t11.h5  # excluded

python2 check_h5_content.py --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"

Total files: 513
Files with edge-wilcoxon data: 513

------------------------------------------------------

> Find species still missing the data (end-referenced profiles)

python2 check_h5_content.py --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"

time python2 profile_plots.py --taxid= --distributed --profile=310:10:end:0 --shuffle-type=11 --computation-tag=102

time python2 profile_plots.py --taxid=930946,255470,284812,1429439,469382,362976,156889,886377,548479,243274,703613,63737,751945,195065,593117,1469144,352472,184922,554373,452652,280699,1237085,574566,316407,264462,944289,213585,145458,641526,661478,1121088,633147,521097,196627,1618643,1618777,326427,1236689,1618821,1343739,29656,272557,743718,410358,859192,1618380,1618840,526224,1429438,641309,1454006,3218,176299,1321371,905079,187420,696747,1236703,226185,2898,436308 --distributed --profile=310:10:end:0 --shuffle-type=11 --computation-tag=102
Total results: 61
Succeeded: 61
Failed: 0 ([])

rm gcdata_v2_taxid_195065_profile_310_10_end_0_t11.h5  # excluded
rm gcdata_v2_taxid_641309_profile_310_10_end_0_t11.h5  # excluded

python2 check_h5_content.py --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"

Total files: 513
Files with edge-wilcoxon data: 513

>>> Update 1000nt taxonomic tree

python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_1000_10_begin_0.h5,gcdata_v2_taxid_*_profile_1000_10_end_0_t11.h5" --use-Y-range 2.84362499 --font-size=8

>>> Create phylogenetic tree for eukaryotes
python2 taxonomy.py --use-tree=hug --limit-taxonomy=2759 --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5" --use-Y-range 2.84362499 --font-size=8


------------------------------------------------------
--09--

> Define profile - how a trait change, on average, along the CDS

> [95%] Finalize species list

> [20%] Update table S1 for species in completion runs

>> Elements table / counts

> [DONE] Finish edge-wilcoxon numbers

> [DONE] 0-crossing numbers for end-profiles

- Explain that the 0-crossing data only considers species in which 0 is crossed.

> [DONE] Relax model 1

> [95%] Update scheme (fig. 1)

>> PCA

> [DONE] Fix PCA loading-axes code

> [70%] Add PCA to Fig. 2 (?)

> [70%] New outliers figure and section

* Categories:
A) Blue species with transition peak (including whith species with transition peak)
B) Species with no weakening around edges (Terrabacteria, FCB)
C) Species with mid-CDS gradient (red/blue)
D) Species with low dLFE that don't fit the model
E) Species with mid-CDS waves
F) Bacteria with postive mid-CDS

> [DELAYED] Supp. Table S3 (Env vars, endosymbiont, tree yes/no, genome source)

> [DONE] Make GC low/high table into a panel (where? - Fig. 2)

> [DELAYED] New supp. figure: ENc' vs. dLFE scale

> [DONE] Add upper bound to MIC p-values
Explain method in methods.

> Find ref for dLFE vs. growth temp

> [DELAYED] New supp. figure: dLFE profile vs. CUB profile

> [DONE] New figure: environmental effects summary

> Cite ete3

> Add description of diversity numbers

----------------------------------------------------------------------------------------------------


>>> Prioritized list of completion runs:

(run first)
species                 begin   end
866499,635003,556484    +       +
555500,158189,456481    +       +
272632,1307761,505682   +       +
400682,6669,436017      %       +
412133,104782,412030    %       +
211586,190485           +       +
(run last)

> Running distributed calculation (begin-referenced runs):
python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference begin --max-num-windows 32 --species 866499,635003,556484,555500,158189,456481,272632,1307761,505682,400682,6669,436017,412133,104782,412030,211586,190485 --series-source 102 --completion-notification True


>>> Workaround for systemd-udevd taking 100% cpu
sudo systemctl stop systemd-udevd
(repeat until working)
sudo systemctl start systemd-udevd


--05--

>>> Completion runs for edge-referenced wilcoxon tests
> Start
python2 profile_plots.py --taxid=593117,1618643,1236689,213585,145458,326427,412133,1618821,469382,264462,1236703,1237085,272557,284812,1469144,1429439,255470,574566,2898,661478,930946,156889,1618380,905079,243274,886377,1343739,859192,633147,280699,29656,743718,176299,63737,1454006,362976,696747,554373,703613,452652,3218,944289,521097,6669,352472,410358,751945,1618840,184922,187420,548479,641526,1429438,1121088,316407,1618777 --profile=310:10:begin:0 --shuffle-type=11 --computation-tag=102 --distributed

> End
time python2 profile_plots.py --taxid=526224,29656,859192,187420,1429438,593117,521097,1237085,944289,226185,1618643,362976,284812,469382,6669,436308,326427,574566,352472,930946,886377,905079,176299,1343739,213585,316407,412133,1469144,264462,280699,1236689,1618821,548479,1236703,2898,255470,1121088,661478,1429439,452652,751945,696747,703613,243274,1454006,641526,3218,633147,184922,1618777,743718,196627,145458,410358,1618840,156889,1618380,63737,1321371,272557,554373 --distributed --profile=310:10:end:0 --shuffle-type=11 --computation-tag=102


>>> Upsert ..............
[0,
 333114,
 666228,
 999342,
 1332456,
 1665570,
 1998684,
 2331798,
 2664912,
 2998026,
 3331140]


qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id       0   --stop-at-id  333114   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  333114   --stop-at-id  666228   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  666228   --stop-at-id  999342   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  999342   --stop-at-id 1332456   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 1332456   --stop-at-id 1665570   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 1665570   --stop-at-id 1998684   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 1998684   --stop-at-id 2331798   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 2331798   --stop-at-id 2664912   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 2664912   --stop-at-id 2998026   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 2998026   --stop-at-id 3331141   --perform-delete --auto-confirm


>>> Upsert for next batch (ext_index=47)

update sequence_series2_updates set ext_index=47 where source=102 and ext_index=0;
Query OK, 2551626 rows affected (57.24 sec)

select source, ext_index, min(dummy_id), max(dummy_id), count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+---------------+---------------+----------+
| source | ext_index | min(dummy_id) | max(dummy_id) | count(*) |
+--------+-----------+---------------+---------------+----------+
|    102 |        47 |             1 |       3331140 |  2551626 |
+--------+-----------+---------------+---------------+----------+
1 row in set (15.82 sec)

> Perform the upsert (only 1st group shown)

insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=47
and sequence_series2_updates.dummy_id between    0   and   330000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=47 and dummy_id between      0 and    3340000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
x+--------+-----------+----------+
x| source | ext_index | count(*) |
x+--------+-----------+----------+
x|    102 |         0 |    12484 |
x|    102 |        44 |  1665242 |
x|    102 |        45 |  2763737 |
x|    102 |        46 |  1404231 |
x+--------+-----------+----------+
x32 rows in set (47 min 11.15 sec)

select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 60226344 |
|    110 |  4005393 |
|    801 |    26418 |
|    802 |    26418 |
+--------+----------+
4 rows in set (35 min 35.41 sec)

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39934057 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (6 min 44.10 sec)

> Hurray - all done!

-------------------------------------------------------------------------------------

qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id        0  --stop-at-id   384721  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id   384721  --stop-at-id   769442  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id   769442  --stop-at-id  1154163  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  1154163  --stop-at-id  1538884  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  1538884  --stop-at-id  1923605  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  1923605  --stop-at-id  2308326  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  2308326  --stop-at-id  2693047  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  2693047  --stop-at-id  3077768  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  3077768  --stop-at-id  3462489  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  3462489  --stop-at-id  3847210  --perform-delete --auto-confirm


>>> Upsert for next batch (ext_index=48)

update sequence_series2_updates set ext_index=48 where source=102 and ext_index=0;
Query OK, 3847211 rows affected (1 min 35.03 sec)

select source, ext_index, min(dummy_id), max(dummy_id), count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+---------------+---------------+----------+
| source | ext_index | min(dummy_id) | max(dummy_id) | count(*) |
+--------+-----------+---------------+---------------+----------+
|    102 |        48 |             1 |       3847211 |  3847211 |
+--------+-----------+---------------+---------------+----------+
1 row in set (30.92 sec)

> Perform the upsert (only 1st group shown)

insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=48
and sequence_series2_updates.dummy_id between    0   and   3847211
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=48 and dummy_id between      0 and    3900000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
x+--------+-----------+----------+
x| source | ext_index | count(*) |
x+--------+-----------+----------+
x|    102 |         0 |    12484 |
x|    102 |        44 |  1665242 |
x|    102 |        45 |  2763737 |
x|    102 |        46 |  1404231 |
x+--------+-----------+----------+
x32 rows in set (47 min 11.15 sec)

select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 60226345 |
|    110 |  4005393 |
|    801 |    26418 |
|    802 |    26418 |
+--------+----------+
4 rows in set (1 hour 28 min 50.32 sec)

select source, count(*) from sequences2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|      1 |  2406489 |
x|     10 | 18533026 |
x|     11 | 39934057 |
x|     12 |  2531182 |
x+--------+----------+
x4 rows in set (6 min 44.10 sec)

> Hurray - all done!

-------------------------------------------------------------------------------------

>>> Upsert for next batch (ext_index=49)

update sequence_series2_updates set ext_index=49 where source=102 and ext_index=0;
Query OK, 352898 rows affected (9.94 sec)

select source, ext_index, min(dummy_id), max(dummy_id), count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+---------------+---------------+----------+
| source | ext_index | min(dummy_id) | max(dummy_id) | count(*) |
+--------+-----------+---------------+---------------+----------+
|    102 |        49 |             1 |        352903 |   352898 |
+--------+-----------+---------------+---------------+----------+
1 row in set (3.86 sec)

> Perform the upsert (only 1st group shown)

insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=49
and sequence_series2_updates.dummy_id between    0   and   352903
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;
Query OK, 705796 rows affected (7 min 55.24 sec)

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=49 and dummy_id between      0 and    352903;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
x+--------+-----------+----------+
x| source | ext_index | count(*) |
x+--------+-----------+----------+
x|    102 |         0 |    12484 |
x|    102 |        44 |  1665242 |
x|    102 |        45 |  2763737 |
x|    102 |        46 |  1404231 |
x+--------+-----------+----------+
x32 rows in set (47 min 11.15 sec)

select source, count(*) from sequence_series2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|    102 | 60226345 |
x|    110 |  4005393 |
x|    801 |    26418 |
x|    802 |    26418 |
x+--------+----------+
x4 rows in set (1 hour 28 min 50.32 sec)

select source, count(*) from sequences2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|      1 |  2406489 |
x|     10 | 18533026 |
x|     11 | 39934057 |
x|     12 |  2531182 |
x+--------+----------+
x4 rows in set (6 min 44.10 sec)

> Hurray - all done!


>>> Update profiles (after completion runs):

python2 profile_plots.py --taxid 866499,635003,556484,555500,158189,456481,272632,1307761,505682,400682,6669,436017,412133,104782,412030,211586,190485 --profile=310:10:begin:0 --shuffle-types 11 --computation-tag 102 --distributed ; python2 notify_pushover.py
python2 profile_plots.py --taxid 866499,635003,556484,555500,158189,456481,272632,1307761,505682,400682,6669,436017,412133,104782,412030,211586,190485 --profile=310:10:end:0 --shuffle-types 11 --computation-tag 102 --distributed ; python2 notify_pushover.py


TaxId   Begin            End
866499  +                
635003  *
556484  *
555500  *
158189
456481
272632
1307761
505682
400682
6669
436017
412133
104782
412030
211586
190485


>>> Finalize black-list (remove 2 non-nuclear genomes)

-------------------------------------------------------------------------------------



October

--26--

>>> Exceptions on .h5 files:

1028800, 1002672, 1006000, 100226, 1009370, 10228 (FIXED)

>>> BDQA for new relative edge
=== all:rel-positive-start ===
Negative: set([
353152 OK
353154 OK
885318 OK
1041607 OK,
484906,
228908,
65357,
104782,
262768
]):


--23--

>>> Open problems

1. Endosymbionts - don't have significantly lower dLFEs (OLS or GLS), although this appears strongly in the data.

2. Model for A+C+D doesn't match mant species - need to relax it.



>>> Update elements table

python2 plot_xy.py "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"


   0-CrossingMean  0-CrossingMedian  Count      Group  TransitionPeakCount  TransitionPeakMean  TransitionPeakMedian
0       23.075356              20.0    505        All                  505          117.148515                  70.0
1       24.945055              20.0    364   Bacteria                  364          117.335165                  80.0
2       17.812500              20.0     64  Eukaryota                   64          149.218750                 170.0
3       17.619048              10.0     77    Archaea                   77           89.610390                  30.0
      ModelStruct  NegativeMid  PositiveEnd  PositiveMid  PositiveStart  TransitionPeak  count
all      0.158416     0.784158     0.271287     0.015842       0.788119        0.370297  505.0
bact     0.184066     0.890110     0.206044     0.002747       0.868132        0.359890  364.0
arch     0.093750     0.734375     0.187500     0.000000       0.609375        0.156250   64.0
euk      0.090909     0.324675     0.649351     0.090909       0.558442        0.597403   77.0


>>> Update PCA plots

> All species (dLFE scale)
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.42   --profile-scale=1.8 --font-size=8.5 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=6.2 --PCA-legend-x-pos=-3.0 --zoom=1.0 --taxonomy-categories=2,2759,2157 --trait-to-plot=dLFEScale-g0 --symbol-scale=8

> All species (Weak LFE composite)
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.42   --profile-scale=1.8 --font-size=8.5 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=6.2 --PCA-legend-x-pos=-3.0 --zoom=1.0 --taxonomy-categories=2,2759,2157 --trait-to-plot=WeakProfileComposite --symbol-scale=8

> All species (ENc')
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.42   --profile-scale=1.8 --font-size=8.5 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=6.2 --PCA-legend-x-pos=-3.0 --zoom=1.0 --taxonomy-categories=2,2759,2157 --trait-to-plot=dLFEScale-g0 --symbol-scale=8

> All species (GC)
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.42   --profile-scale=1.8 --font-size=8.5 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=6.2 --PCA-legend-x-pos=-3.0 --zoom=1.0 --taxonomy-categories=1 --trait-to-plot=GC --symbol-scale=8 --pca-axes-zoom=1.0


> All species (end)
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.91   --profile-scale=1.4 --font-size=7 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-2.9 --zoom=1.23 --taxonomy-categories=2,2759,2157 --trait-to-plot=dLFEScale-g0 --symbol-scale=8 --pca-axes-zoom=1.3

> All species (end) GC
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.91   --profile-scale=1.4 --font-size=7 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-2.9 --zoom=1.0 --trait-to-plot=GC --symbol-scale=8 --pca-axes-zoom=1.0


--16--

>>> Binary model search
time python2 binary_model_search.py --use-profile-data=gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5


>>> Update PCAs for Fig. 4
> Bacteria (GC)
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.65   --profile-scale=1.9 --font-size=8 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-1.5 --zoom=1.1 --limit-taxonomy=2 --taxonomy-categories=1224,1783270,1783272 --trait-to-plot=GC

> Bacteria (GC) - End
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.2   --profile-scale=1.9 --font-size=8 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=7.0 --PCA-legend-x-pos=-3.0 --zoom=1.1 --limit-taxonomy=2 --taxonomy-categories=1224,1783270,1783272 --trait-to-plot=GC

> Eukaryotes (GC)
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.92   --profile-scale=1.0 --font-size=8 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-0.5 --zoom=1.2 --limit-taxonomy=2759 --taxonomy-categories=4751 --trait-to-plot=GC --symbol-scale=20

> Eukaryotes (GC) - End
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.2  --profile-scale=1.0 --font-size=8 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=7.0 --PCA-legend-x-pos=-2.0 --zoom=1.25 --limit-taxonomy=2759 --taxonomy-categories=4751 --trait-to-plot=GC --symbol-scale=16

> Archaea (GC) 
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.44   --profile-scale=1.9 --font-size=8 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=3.5 --PCA-legend-x-pos=-2.5 --zoom=1.1 --limit-taxonomy=2157 --taxonomy-categories=28890,28889 --trait-to-plot=GC --symbol-scale=20

> Archaea (GC) - End
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"     --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.44   --profile-scale=1.9 --font-size=8 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=3.5 --PCA-legend-x-pos=-2.5 --zoom=1.1 --limit-taxonomy=2157 --taxonomy-categories=28890,28889 --trait-to-plot=GC --symbol-scale=20


>>> Update PCAs for Fig. 3B


--10--
>>> Fixing dask

The following packages will be UPDATED:

    bokeh:       0.12.16-py27_0    --> 0.13.0-py27_0    
    certifi:     2018.4.16-py27_0  --> 2018.8.24-py27_1 
    conda:       4.5.9-py27_0      --> 4.5.11-py27_0    
    dask:        0.17.5-py27_0     --> 0.19.3-py27_0    
    dask-core:   0.17.5-py27_0     --> 0.19.3-py27_0    
    distributed: 1.21.8-py27_0     --> 1.23.3-py27_0    
    openssl:     1.0.2o-h14c3975_1 --> 1.0.2p-h14c3975_0


--09--

>>> Species to complete (have many missing CDSs):
456481
272632
1307761
158189
505682


>>> Create PCA plot for supp. figures:
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.40   --profile-scale=1.8 --font-size=9 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=7.7 --PCA-legend-x-pos=-1.0 --zoom=1.0 --taxonomy-categories=2,2759,2157

>>> Updates command-line to compile supplementary figures document:

~/anaconda2/bin/pandoc -f markdown+link_attributes -t html5 -s -o Supplementary_figures.md.html Supplementary_figures.md header_TS1.md species_report_simple.rst.md header_TS2.md phyla_report.rst.md header_TS3.md environment_report.rst.md Supplementary_figures_list.md metadata.yaml

~/anaconda2/bin/pandoc -f markdown -t docx -s -o Supplementary_figures.md.docx Supplementary_figures.md header_TS1.md species_report_simple.rst.md header_TS2.md phyla_report.rst.md header_TS3.md environment_report.rst.md Supplementary_figures_list.md metadata.yaml 

~/anaconda2/bin/pandoc -f markdown+link_attributes -t latex -s Supplementary_figures.md header_TS1.md species_report_simple.rst.md header_TS2.md phyla_report.rst.md header_TS3.md environment_report.rst.md Supplementary_figures_list.md metadata.yaml -o Supplementary_figures.md.pdf



--06--

>>> Create supp. figure - correlation between series (vertical vs. horizontal randomization)
> Update vertical-randomization profiles 
python2 profile_plots.py --taxid=553190,1619005,64091,498848,511145,45670,1435057,224308,1227812,578462,910314,164328,5061,596323,1379858,358681,160490,1177928,1304892,122586,564608,561896,255470 --profile=310:10:begin:0 --shuffle-type=12 --computation-tag=102

> Create the supplementary plot:
python2 correlation_between_series.py --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_begin_0_t12.h5"

export DISPLAY=power8:1001

python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_begin_0_t12.h5" --use-Y-range 2.84362499 --include-only-species=553190,1619005,64091,498848,511145,45670,1435057,224308,1227812,578462,910314,164328,5061,596323,1379858,358681,160490,1177928,1304892,122586,564608,561896,255470  --font-size=8

>>> Create supp. figure - correlation between series (standard temp vs. native temp profiles)

time python correlation_between_series.py --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series110.h5" --plot-range 0,140 --plot-vs-trait=optimum-temp

python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series110.h5" --include-only-species 1123384,1189619,1229908,1341181,1432656,1454006,1577684,160490,163003,169963,176299,178306,187420,188937,190485,196600,203123,203267,204536,220668,221109,224324,226185,233412,240015,243090,243230,243273,243274,243275,243365,259536,272557,272633,272634,272635,273116,289377,295405,326298,349741,365046,381764,391009,400667,431947,432331,469382,485913,491915,511145,521011,521097,525903,525904,543302,583356,593117,59374,633147,648996,649638,667014,670487,694429,70601,755732,760142,768670,866499,99287 --font-size=8 --use-Y-range=2.8436



September
--02--

>>> Importing Vieira-Silva bacteria growth-time data (format 2 - 214 species)
> Supp. table A1 (format 2 - through DOI, orig. filename is journal.pgen.1000808.s005.DOC) is in word format - OCR not needed this time (just copy-paste and save as .csv)...

> First, use edit-distanct (fuzzy_text_matching.py) to automatically map to internal species
python2 create_auto_species_mapping_for_vieira_silva_data_table_format_2.py > ./data/journal.pgen.1000808.s005.DOC.csv.with.mapping.csv

> Second, manually edit automatic species mapping to accept/reject inclusion of species. Data is matched at the species level (i.e., all strains belonging to the same genus and species are deemed equivalent). In some cases, NCBI synonyms are used to make an acceptable mapping.

> Third, store the growth rates (for records which have manually accepted species matches)
python store_vieiera_silva_generation_times_format_2.py

numAcceptedRows: 99


>>> Low-level IO benchmarks (to detect and find cause of slow cluster performance):

nfsiostat 10 /tamir1

ifstat

top

>>> App-level benchmarks

time python2 -c "from Bio import SeqIO"

time ~/anaconda2N/bin/mysql -u rnafold --password=ro3Phielaxeuph2Nchi7Pii -h compute-0-94 -D rnafold -P 14404 --execute="select alphabet, source, count(*) from sequences2 group by alphabet, source;"

time redis-cli -h compute-0-89 -a rnafold get "species:taxid:5061:name"


August

--29--

>>> Importing Vieira-Silva bacteria growth-time data (format 1 - 104 species)
> Supp. table A1 is in PDF format - the data cannot be simply copy-pasted...
> First do OCR to convert into .csv

> Second, manually edit to fix OCR errors

> Third, use edit-distanct (fuzzy_text_matching.py) to automatically map to internal species
python2 create_auto_species_mapping_for_vieira_silva_data.py > ./data/Viera_Silva_Supp_tableA1.csv.mapping.csv

> Fourth, manually edit automatic species mapping to accept/reject inclusion of species. Data is matched at the species level (i.e., all strains belonging to the same genus and species are deemed equivalent). In some cases, NCBI synonyms are used to make an acceptable mapping.

> Fifth, store the growth rates (for records which have manually accepted species matches)
python store_vieiera_silva_generation_times.py




--07--


>>> TODOs for next revision

a) Check background model!
b) Finish R^2 graph
c) Supp graphs
d) Restore GC controls (blue pyramids) as a supp. figure.
e) Emphasize different numbers: Total=~500, GLS=~300
f) Fix Upar, Mmyc
g) Observation: there are no bacteria with positive dLFE in mid-CDS.


0.   New take-aways to emphasize:
     - Should always do domain-specific analysis (at least)
1.   Profile numbers
2. + Zero-crossing historgram
3.   CUB, length, partial correlations
     - Does CUB correlate with dLFE?
     - How much (R^2) of the variation in dLFE do we explain?
     - Partial R^2 of each factor (GC, CUB, length) based on the other 2
     - Create a "partial R^2 venn diagram"
4.   Scatter plots - try to add organism groups
5.   Controls (correlations)
6. + ENC correlation
     - Mark known endosymbionts
     Maria D. Ermolaeva  Curr. Issues Mol. Biol. (2001) 3(4): 91-97.
     Paul M. Sharp, Laura R. Emery, Kai Zeng  Forces that influence the evolution of codon bias    DOI: 10.1098/rstb.2009.0305
     Xylella vs. Xanthomonas
     E.coli vs. Blochmannia
     Bartonella
     Holospora
     Chlamydia abortus (+other Chlamydiales)

     Fast growing:
     Eschericia coli

     Slow growing:
     Mycobacterium tuberculosis
7.   New figure - Gu peak
8.   List of trend outliers
9.   New figure - inter-profile correlations
     - Correlation p-values
     - What are the two components (correlated factor + uncorrelated factor) related to?
     - Do the factors exist in different taxa?
10.  Evolutionary model comparison
11.  Chlamy case study
12.  Genome size: conflicting indicator (may be the result of genome reduction for fast growth or due to endosymbiotic lifestyle)
13.  Text: describe profiles of endosymbionts



>>> Plot collapsed (clustered) taxonomic tree
python2 taxonomy.py --use-tree=taxonomic-collapsed --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5" --use-Y-range 2.84362499

>>> Plot all species (supp. figure)
python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_5*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_5*_profile_310_10_end_0_t11.h5" --use-Y-range 2.84362499

>>> Plot "weak LFE" scatter
python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.45   --profile-scale=1.2 --font-size=7 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=7.4 --PCA-legend-x-pos=-1.0 --zoom=1.2 --taxonomy-categories=2,2759,2157


>>> Plot "typical" (KDE) profiles
python find_typical_profile.py



10   ->  8:15
15   ->  8:45
15   ->  8:40
100  -> 16:50
120  -> 19:00
500  -> 55:30
500  -> 55:50
1000 ->

time = 7.3 + 0.095*n.iters


July

--25--

# Fungi
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=-0.05   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-0.5 --zoom=1.1 --limit-taxonomy=4751 --taxonomy-categories=4890,5204,112252

# Euryarch
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.43   --profile-scale=1.8 --font-size=10 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=3.3 --zoom=1.1 --PCA-legend-x-pos=-2.0 --limit-taxonomy=28890 --taxonomy-categories=183963,183968,224756,183967,183925

# Deinococcus-Thermus (plot ENc'...)
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.38   --profile-scale=1.8 --font-size=10 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-3.3 --zoom=1.2 --limit-taxonomy=1297 --taxonomy-categories=68933,118964

# Gammaproteobacteria (plot GC%, ENc')
time ~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.35   --profile-scale=1.8 --font-size=10 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-2.0 --zoom=1.2 --limit-taxonomy=1236 --taxonomy-categories=91347,135614,72274,135623,135613,135619

# Proteobacteria (plot GC%, ENc')
# TODO finish this
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.45   --profile-scale=1.8 --font-size=10 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-2.0 --zoom=1.2 --limit-taxonomy=1224 --taxonomy-categories=28211,28216,1236,68525

# All (start)
time ~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.40   --profile-scale=1.8 --font-size=9 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=7.4 --PCA-legend-x-pos=-1.0 --zoom=1.0 --taxonomy-categories=2,2759,2157
# For trait plot, use --zoom=1.2


# All (end)
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.85   --profile-scale=1.8 --font-size=9 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=14.0 --PCA-legend-x-pos=-2.9 --zoom=1.0 --taxonomy-categories=2,2759,2157


Eukaryotes
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.92   --profile-scale=1.0 --font-size=8 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-0.5 --zoom=1.1 --limit-taxonomy=2759 --taxonomy-categories=4751

--20--

>>> Common commands:

time R --vanilla -f tree_traits_effects_analysis_with_taxgroups.r ; echo python2 notify_pushover.py
s3cmd get --force s3://30lark/code_snapshot.tar.gz --no-check-certificate && tar -xvzf code_snapshot.tar.gz
tar -cvzf plots.tar.gz Rplots.pdf R2comparison_GenomicGC_all.pdf  && s3cmd put plots.tar.gz s3://30lark/ --no-check-certificate
time python2 plot_xy.py "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"; python2 notify_pushover.py


--15--
>>> Updated plot_xy.py call (plot profile elements table):
time python2 plot_xy.py "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5,gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"


--13--

>>> Common s3 transfers (for future ref)

s3cmd get --force s3://30lark/code_snapshot.tar.gz --no-check-certificate && tar -xvzf code_snapshot.tar.gz
tar -cvzf plots.tar.gz test.png Rplots.pdf  && s3cmd put plots.tar.gz s3://30lark/ --no-check-certificate


tar -cvzf code_snapshot.tar.gz profile_plots.py mfe_plots.py tree_traits_effects_analysis_withte_ENCprime.py ENCprime.py && s3cmd put code_snapshot.tar.gz s3://30lark/
s3cmd get --force s3://30lark/plots.tar.gz && tar -xvzf plots.tar.gz

--02--


--01--

>>> Dependant jobs example (3 serial jobs):

JOB1=$(qsub -q tamirs3 -N test1 -l mem=1000mb,pmem=1000mb,vmem=2000mb,pvmem=2000mb,cput=0:00:10 test.sh); echo $JOB1
JOB2=$(qsub -q tamirs3 -N test2 -l mem=1000mb,pmem=1000mb,vmem=2000mb,pvmem=2000mb,cput=0:00:10 -W depend=afterok:$JOB1 test.sh); echo $JOB2
JOB3=$(qsub -q tamirs3 -N test3 -l mem=1000mb,pmem=1000mb,vmem=2000mb,pvmem=2000mb,cput=0:00:10 -W depend=afterok:$JOB2 test.sh); echo $JOB3


>>> Prepare supplementary reports

> Create

# export DISPLAY=.....
python2 profile_plots.py --all-taxa=True --profile=310:10:begin:0 --shuffle-type=11 --computation-tag=102 --distributed

pdfnup --nup 3x6 -o pdfnup.pdf --no-landscape mfe_v3_40nt_cds_310_10_begin_t11_*.pdf

>

python2 stats_reports.py  # start dask workers before running this...

pandoc -f rst -t markdown species_report_simple.rst >species_report_simple.rst.md
pandoc -f rst -t markdown phyla_report.rst >phyla_report.rst.md

>>> Process all supplementary figures to produce supplementary figures doc

~/anaconda2/bin/pandoc -f markdown -t html Supplementary_figures.md header_S1.md species_report_simple.rst.md header_S2.md phyla_report.rst.md header_S3.md > Supplementary_figures.md.html


June

--07--

/tamir1/mich1/anaconda2/bin/python2 profile_plots.py --all-taxa=True --profile=310:10:begin:0 --shuffle-types=11 --computation-tag=102 --codonw=False --distributed


--06--

>>> Temporary working s3cmd cmd-line (after partial move to new homedir at /tamir1/mich1...)
/tamir1/mich1/anaconda2/bin/s3cmd get --force s3://30lark/code_snapshot.tar.gz --no-check-certificate && tar -xvzf code_snapshot.tar.gz

--03--

start>0 and mid<0

all species with profiles

histogram for 0 crossing - position and counts, start and end

"gu peak"

autocorrelation - give numbers for spearman/R^2




--01--

>>> ENCprime: compile my own C++ version of SeqCount (because the stock code segfaults...)
~/anaconda2/bin/g++ -std=c++11 -ggdb -O SeqCount.cpp

Note: The main program doesn't crash so I did not port it...



May


--31--

>>> Update tree robustness graphs
> Edit configuration (analysis ranges etc.)

> Run GLS analysis:
~/anaconda2/bin/R --vanilla -f tree_traits_effects_analysis_with_taxgroups.r

ls -lt tree_traits_effects_analysis_with_taxgroups.out.dLFE.length.300.csv

> Edit configuration (input files, etc.)

> Run tree plotting
export DISPLAY=power8.tau.ac.il:1079
~/anaconda2/bin/python2 plot_tree_effects_anaylsis_results_on_tree.py

ls -lt regressionByTaxgroup_GenomicGC_range_*.pdf



--20--


>>> Plot new figures (for Safra/ISM/ISA poster)

> Plot PCA (300nt, begin-referenced)
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.50   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=5.5 --zoom=1.04 --PCA-legend-x-pos=1.0

> Plot PCA (300nt, end-referenced)
time ~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.88   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=5.0 --zoom=1.17 --PCA-legend-x-pos=-1.4

>
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.88   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=-0,-25 --PCA-loading-vectors-scale=5.0 --zoom=1.17 --PCA-legend-x-pos=-1.4

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic-collapsed --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5" --use-Y-range 2.84362499




> PCA plot for Euryarchaeota
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.45   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=3.0 --zoom=1.1 --limit-taxonomy=28890

> PCA plot for Fungi
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=-0.05   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-0.5 --zoom=1.1 --limit-taxonomy=4751

> PCA plot for Deinococcus-Thermus
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.5   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-2.5 --zoom=1.2 --limit-taxonomy=1297

> PCA plot for Gammaproteobacteria
 ~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.39   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=4.0 --PCA-legend-x-pos=-0.5 --zoom=1.2 --limit-taxonomy=1236

> PCA plot for Bacteria
xxxx~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=2 --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=1.65 --profile-scale=0.6 --font-size=3


--19--

>>> Folding the next batch (will be ext_index=46):
--> Existing species (extend end-referenced profiles from 150nt to 300nt)
1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815    R
521097,491915,383372,280463,526224,945553,243090,194439,59374,525904       R
521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670   R
1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169        R
1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668       R

--> Completion for partial genomes from the previous run:
1223560,1121915,290633,266940,456481,859192,296543,1429438,554373,1041607  R

[21753482,
 22275893,
 22798304,
 23320715,
 23843126,
 24365537,
 24887948,
 25410359,
 25932770,
 26455181,
 26977592]


qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 21753482   --stop-at-id 22275893   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 22275893   --stop-at-id 22798304    --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 22798304   --stop-at-id 23320715    --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 23320715   --stop-at-id 23843126   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 23843126   --stop-at-id 24365537   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 24365537   --stop-at-id 24887948   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 24887948   --stop-at-id 25410359   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 25410359   --stop-at-id 25932770   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 25932770   --stop-at-id 26455181   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 26455181   --stop-at-id 26977592   --perform-delete --auto-confirm

> Also do compare_updates --find-duplicates ! (before/after)

> Check for deleted rows:
ls -t verify??.o* | head -n 10 | xargs cat | grep -i delete

verify01.o8616926
verify02.o8616927
verify03.o8616928
verify04.o8616929
verify05.o8616930
verify06.o8616931
verify07.o8616932
verify08.o8616933
verify09.o8616934
verify10.o8616935

>>> Upsert for next batch (ext_index=46)

update sequence_series2_updates set ext_index=46 where source=102 and ext_index=0;

select source, ext_index, min(dummy_id), max(dummy_id), count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+---------------+---------------+----------+
| source | ext_index | min(dummy_id) | max(dummy_id) | count(*) |
+--------+-----------+---------------+---------------+----------+
|    102 |        46 |      21753482 |      26977592 |  4656964 |
+--------+-----------+---------------+---------------+----------+
1 row in set (3 min 33.55 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=46
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=46 and dummy_id between      21753482 and    26977592;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    12484 |
|    102 |        18 |    25160 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |     7545 |
|    102 |        26 |    26916 |
|    102 |        27 |   227739 |
|    102 |        28 |   202174 |
|    102 |        29 |   614101 |
|    102 |        30 |   429407 |
|    102 |        31 |  1227257 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
|    110 |        33 |    81000 |
|    102 |        34 |    18971 |
|    110 |        34 |    58040 |
|    102 |        35 |    45904 |
|    110 |        35 |   319342 |
|    110 |        36 |   229456 |
|    102 |        37 |   250643 |
|    102 |        38 |  1529442 |
|    102 |        39 |  1049776 |
|    102 |        40 |   946592 |
|    102 |        41 |  1002675 |
|    102 |        42 |   979839 |
|    102 |        43 |  2115785 |
|    102 |        44 |  1665242 |
|    102 |        45 |  2763737 |
|    102 |        46 |  1404231 |
+--------+-----------+----------+
32 rows in set (47 min 11.15 sec)

select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 60226344 |
|    110 |  4005393 |
|    801 |    26418 |
|    802 |    26418 |
+--------+----------+
4 rows in set (9 min 6.92 sec)

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39934057 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (3 min 30.52 sec)

> Hurray - all done!


>>> Update all profiles...

~/anaconda2/bin/python2 profile_plots.py --all-taxa True --profile=310:10:begin:0 --shuffle-types 11 --computation-tag 102 --distributed
Total results: 515
Succeeded: 515
Failed: 0 ([])


~/anaconda2/bin/python2 profile_plots.py --all-taxa True --profile=310:10:end:0   --shuffle-types 11 --computation-tag 102 --distributed
Total results: 515
Succeeded: 515
Failed: 0 ([])



--17--


>>> IP addresses for when DNS lookup fails:
power8.tau.ac.il:
132.66.112.30

gate.tau.ac.il:
132.66.11.250

>>> Folding the next batch (will be ext_index=45):

--> Existing species (extend end-referenced profiles from 150nt to 300nt)
204536                                                                     R
1427984,1379858,755732,190485,485913,420890,187420,243230                  R
1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883   R
243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540    R
289376                                                                     R
289377,45670,886377,423536,1397361,476282,280699,930946,1209989            R
574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448     R
511145,436907,272557,203123,402612,379066,862908,432331,312017,352472      R
122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632   R
272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718     R
45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927        R
1177928,751945,431947,760142,521045                                        R
926550,240015,638303,190304,596323                                         R
1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815      (postponed)
521097,491915,383372,280463,526224,945553,243090,194439,59374,525904         (postponed)
521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670     (postponed)
1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169          (postponed)
1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668         (postponed)

--> Completion for partial genomes from the previous run:
1223560,1121915,290633,266940,456481,859192,296543,1429438,554373,1041607    (postponed) (partial)


[14014780,
 14788650,
 15562520,
 16336390,
 17110260,
 17884130,
 18658000,
 19431870,
 20205740,
 20979610,
 21753480]

qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 14014780   --stop-at-id 14788650   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 14788650   --stop-at-id 15562520    --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 15562520   --stop-at-id 16336390    --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 16336390   --stop-at-id 17110260   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 17110260   --stop-at-id 17884130   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 17884130   --stop-at-id 18658000   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 18658000   --stop-at-id 19431870   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 19431870   --stop-at-id 20205740   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 20205740   --stop-at-id 20979610   --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 20979610   --stop-at-id 21753480   --perform-delete --auto-confirm

verify01.o8546976
verify02.o8546977
verify03.o8546978
verify04.o8546979
verify05.o8546980
verify06.o8546981
verify07.o8546982
verify08.o8546983
verify09.o8546984
verify10.o8546985


> Also do compare_updates --find-duplicates ! (before/after)


>>> Upsert for next batch (ext_index=45)

update sequence_series2_updates set ext_index=45 where source=102 and ext_index=0;

select source, ext_index, min(dummy_id), max(dummy_id), count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+---------------+---------------+----------+
| source | ext_index | min(dummy_id) | max(dummy_id) | count(*) |
+--------+-----------+---------------+---------------+----------+
|    102 |        45 |      14014780 |      21753481 |  6720182 |
+--------+-----------+---------------+---------------+----------+
1 row in set (6 min 10.53 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=44
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=45 and dummy_id between      14014780 and    21753481;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!



--16--


>>> Combine pdfs while reordering (interleaving two ranges) to bring relevant plots together
for i in `seq 58 76`; do echo tree_phenotypes_regression.out.abs\(dLFE\).by.taxgroups.$i.pdf; done > f1
for i in `seq 77 95`; do echo tree_phenotypes_regression.out.abs\(dLFE\).by.taxgroups.$i.pdf; done > f2
paste -d '\n' f1 f2 | xargs pdfnup --nup 2x2 --

>>> Another variation: concatenate 47, 29..46:
for i in `echo 47; seq 29 46`; do echo tree_phenotypes_regression.out.abs\(dLFE\).by.taxgroups.$i.pdf; done | xargs pdfnup --nup 1x1 --

>>> Free-form concatenation
for i in 30 57 1 31 2 32 3 33 5 34 6 35 7 36 8 37 9 38 10 39 12 40 13 41 14 42 15 43 16 44 17 45 19 46 20 47 21 48 22 49 23 50 24 51 25 52 26 53 27 54 28 55 29 56; do ls tree_phenotypes_regression.out.dLFE.by.taxgroups.$i.pdf; done | xargs pdfnup --nup 2x1 --


>>> Folding the next batch (will be ext_index=44):


885318,592029,403833,190192,3218,339860,138677,1125630,273063,391165       R
583356,398767,227377,264462,443906,331104,1303518,517418,1266370,272631    R
1223560,1121915,290633,266940,456481,859192,296543,1429438,554373,1041607  R (partial)
521674,555778,572478,1618841,555779,1618821,572544,243232,1121088,347257   R
1514904,1618623,405948,1295009,263358,1341181,216432,212717,360911,1618405 R
869210,946362,1165094,3046,486041,184922,391603,573065,349741,1157490      R
2769,283166,224914,221109,445932,500635,1574623,762948,645134,28892        R
765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282       R (completion)
1469144,242507,1618595,997884,418459,324602,316274,223926,3067,742818      R (completion)

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 31 --species 333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210 --series-source 102 --completion-notification True

~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907,1439331,768679,1618609,326298,281090,479434,526218,926562,484019,330214,4781,768671,196627,412133,176280,479434,526218,926562,484019,330214,203267,1343739,300852,595528,203124,226186,449447,525919,695850,314260,1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613,158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586,233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061,1189621,926571,1047168,96563,228410,1185651,753081,1432562,267608,1198115,333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210,104782,1069680,1618643,1618369,400682,1307761,937777,195522,419610,1502293,469615,439292,381764,1056495,518766,435906,945713,507754,85962,5693,155920,608538,257314,1429439,353154,411154,123214,1009370,353152,1619051,765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282,1469144,242507,1618595,997884,418459,324602,316274,223926,3067,742818,93061,99287,267377,1618671,63737,768706,1208660,1236703,272633,251221,214684,331113,653733,27923,592010,511051,44056,46234,585394,273116,1148,479433,153151,273075,29290,269084,234267,1519565,391623,930990,552811,373903,519441,208964,187272,1266844,504728,1046627,224325,589924,288705,243159,1072681,548479,1287680,979,429572,522772,484906,398720,412030,523841,49280,559292,1618840,866499,186497,797304,436017,469599,885318,592029,403833,190192,3218,339860,138677,1125630,273063,391165,583356,398767,227377,264462,443906,331104,1303518,517418,1266370,272631,1223560,1121915,290633,266940,456481,859192,296543,1429438,554373,1041607,521674,555778,572478,1618841,555779,1618821,572544,243232,1121088,347257,1514904,1618623,405948,1295009,263358,1341181,216432,212717,360911,1618405,869210,946362,1165094,3046,486041,184922,391603,573065,349741,1157490

[6706363,
 7437204,
 8168045,
 8898886,
 9629727,
 10360568,
 11091409,
 11822250,
 12553091,
 13283932,
 14014773]

qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  6706360   --stop-at-id  7437204  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  7437204  --stop-at-id   8168045  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  8168045  --stop-at-id   8898886  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  8898886   --stop-at-id  9629727  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  9629727  --stop-at-id  10360568  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 10360568  --stop-at-id  11091409  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 11091409  --stop-at-id  11822250  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 11822250  --stop-at-id  12553091  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 12553091  --stop-at-id  13283932  --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 13283932  --stop-at-id  14014799  --perform-delete --auto-confirm

> Also do compare_updates --find-duplicates ! (before/after)

> Check for deleted rows:
ls -t verify??.o* | head -n 10 | xargs cat | grep -i delete

>>> Upsert for next batch (ext_index=44)

update sequence_series2_updates set ext_index=44 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        44 |  5646312 |
+--------+-----------+----------+

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102 and ext_index=44
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=44 and dummy_id between      6744181 and    14014779;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!



--14--

>>> Folding the next batch (will be ext_index=43):


765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282      R  (completion, still partial)
1469144,242507,1618595,997884,418459,324602,316274,223926,3067,742818     R  (partial)
93061,99287,267377,1618671,63737,768706,1208660,1236703,272633,251221     R
214684,331113,653733,27923,592010,511051,44056,46234,585394,273116        R
1148,479433,153151,273075,29290,269084,234267,1519565,391623,930990       R
552811,373903,519441,208964,187272,1266844,504728,1046627,224325,589924   R
288705,243159,1072681,548479,1287680,979,429572,522772,484906,398720      R
412030,523841,49280,559292,1618840,866499,186497,797304,436017,469599     R


~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 31 --species 333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210 --series-source 102 --completion-notification True

~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907,1439331,768679,1618609,326298,281090,479434,526218,926562,484019,330214,4781,768671,196627,412133,176280,479434,526218,926562,484019,330214,203267,1343739,300852,595528,203124,226186,449447,525919,695850,314260,1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613,158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586,233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061,1189621,926571,1047168,96563,228410,1185651,753081,1432562,267608,1198115,333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210,104782,1069680,1618643,1618369,400682,1307761,937777,195522,419610,1502293,469615,439292,381764,1056495,518766,435906,945713,507754,85962,5693,155920,608538,257314,1429439,353154,411154,123214,1009370,353152,1619051,765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282,1469144,242507,1618595,997884,418459,324602,316274,223926,3067,742818,93061,99287,267377,1618671,63737,768706,1208660,1236703,272633,251221,214684,331113,653733,27923,592010,511051,44056,46234,585394,273116,1148,479433,153151,273075,29290,269084,234267,1519565,391623,930990,552811,373903,519441,208964,187272,1266844,504728,1046627,224325,589924,288705,243159,1072681,548479,1287680,979,429572,522772,484906,398720

0,
 670637,
 1341274,
 2011911,
 2682548,
 3353185,
 4023822,
 4694459,
 5365096,
 6035733,
 6706370]


qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id        0 --stop-at-id  670637 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id   670637 --stop-at-id 1341274 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  1341274 --stop-at-id 2011911 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  2011911 --stop-at-id 2682548 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  2682548 --stop-at-id 3353185 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  3353185 --stop-at-id 4023822 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  4023822 --stop-at-id 4694459 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  4694459 --stop-at-id 5365096 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  5365096 --stop-at-id 6035733 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=2:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  6035733 --stop-at-id 6706370 --perform-delete --auto-confirm

>>> Upsert for next batch (ext_index=43)

update sequence_series2_updates set ext_index=43 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        43 |  6677850 |
+--------+-----------+----------+
1 row in set (4 min 15.72 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=43 and dummy_id between      6000001 and    6706363;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!



--13--
>>> Whos running?
qstat | grep R | awk '{print $3}' | sort | uniq -c | sort -n | tail

>>> How many jobs are ahead of mine?
date; qstat -u mich1 | grep mich1 ; qstat | grep Q | grep -n mich1 | head -n 1 | perl -pe "s/:.*//"



--12--

>>> Folding the next batch (will be ext_index=42):

333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210     R
104782,1069680,1618643,1618369,400682,1307761,937777,195522,419610,1502293  R
469615,439292,381764,1056495,518766,435906,945713,507754,85962,5693         R
155920,608538,257314,1429439,353154,411154,123214,1009370,353152,1619051    R
765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282        R

~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907,1439331,768679,1618609,326298,281090,479434,526218,926562,484019,330214,4781,768671,196627,412133,176280,479434,526218,926562,484019,330214,203267,1343739,300852,595528,203124,226186,449447,525919,695850,314260,1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613,158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586,233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061,1189621,926571,1047168,96563,228410,1185651,753081,1432562,267608,1198115,333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210,104782,1069680,1618643,1618369,400682,1307761,937777,195522,419610,1502293,469615,439292,381764,1056495,518766,435906,945713,507754,85962,5693,155920,608538,257314,1429439,353154,411154,123214,1009370,353152,1619051



~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 31 --species 333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210 --series-source 102 --completion-notification True




qsub -q tamirs3 -N verify01 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id       0  --stop-at-id  631354 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify02 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id  631354  --stop-at-id 1262708 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify03 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 1262708  --stop-at-id 1894062 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify04 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 1894062  --stop-at-id 2525416 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify05 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 2525416  --stop-at-id 3156770 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify06 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 3156770  --stop-at-id 3788124 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify07 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 3788124  --stop-at-id 4419478 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify08 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 4419478  --stop-at-id 5050832 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify09 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 5050832  --stop-at-id 5682186 --perform-delete --auto-confirm
qsub -q tamirs3 -N verify10 -l mem=4000mb,pmem=4000mb,vmem=8000mb,pvmem=8000mb,cput=4:00:00 -- ~/anaconda2/bin/python2 ~/rnafold/compare_updates.py --start-from-id 5682186  --stop-at-id 6313546 --perform-delete --auto-confirm

verify01.o8451692
verify02.o8451693
verify03.o8451694
verify04.o8451695
verify05.o8451696
verify06.o8451698
verify07.o8451799
verify08.o8451800
verify09.o8451801
verify10.o8451802

grep -i delete verify01.o8451692 verify02.o8451693 verify03.o8451694 verify04.o8451695 verify05.o8451696 verify06.o8451698 verify07.o8451799 verify08.o8451800 verify09.o8451801 verify10.o8451802


>>> Upsert for next batch (ext_index=42)

update sequence_series2_updates set ext_index=42 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        42 |  5222364 |
+--------+-----------+----------+
1 row in set (2 min 49.29 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=42 and dummy_id between       1 and 6400000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


~/anaconda2/bin/python2 profile_plots.py --taxid 333146,1529318,262768,1236689,452637,36329,644295,1245935,861299,797210,104782,1069680,1618643,1618369,400682,1307761,937777,195522,419610,1502293,469615,439292,381764,1056495,518766,435906,945713,507754,85962,5693,155920,608538,257314,1429439,353154,411154,123214,1009370,353152,1619051,765952,309801,867904,272626,145458,362976,402881,6669,1208920,639282 --profile=310:10:end:0 --shuffle-types 11 --computation-tag 102 --distributed


--10--

>>> Plot collapsed taxonomic tree:

> Begin-referenced:
~/anaconda2/bin/python2 taxonomy.py --use-tree=PCA --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5"   --use-Y-range 2.8436249 --profiles-Y-offset-workaround=1.51   --profile-scale=0.9 --font-size=6 --add-PCA-loading-vectors=0,25 --PCA-loading-vectors-scale=5.6 --zoom=1.1

> End-referenced:
~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic-collapsed --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5" --use-Y-range 2.84362499

>>> Plot PCA (300nt, begin-referenced)
time ~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_310_10_begin_0_t11.h5" --use-Y-range 2.84362499 --profiles-Y-offset-workaround=1.35 --profile-scale=0.9

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_310_10_end_0_t11.h5" --use-Y-range 2.8436249 --profiles-Y-offset-workaround=0.9 --profile-scale=0.9



>>> Folding next batch (will be ext_index=41):

4781,768671,196627,412133,176280                                            R (completion)
479434,526218,926562,484019,330214                                          R 
203267,1343739,300852,595528,203124                                         R
226186,449447,525919,695850,314260                                          R
1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613     R
158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586      R
233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061     R
1189621,926571,1047168,96563,228410,1185651,753081,1432562,267608,1198115   R

~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907,1439331,768679,1618609,326298,281090,479434,526218,926562,484019,330214,4781,768671,196627,412133,176280,479434,526218,926562,484019,330214,203267,1343739,300852,595528,203124,226186,449447,525919,695850,314260,1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613,158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586,233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061


> Fold additional genomes
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 31 --species 4781,768671,196627,412133,176280,479434,526218,926562,484019,330214 --series-source 102 --completion-notification True

>>> Check new records (will be ext_index=41)

---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     2211510 ====
    1-2     12153498 ======================
    2-3     12050430 ======================
    3-4     12272190 ======================
    4-5     12084912 ======================
    5-6     12336681 ======================
    6-7     12259212 ======================
    7-8     12156018 ======================
    8-9     12203289 ======================
    9-max   12053874 ======================
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     111781614 ================================================================================================================================
========================================================================
    1-2           0
    2-3           0
    3-4           0
    4-5           0
    5-6           0
    6-7           0
    7-8           0
    8-9           0
    9-max         0

---- Sequence types ----
Series 102
Total update records: 4555152
Total: 4527852
Debug: allSequenceTypesSourceForUpdates: processed 4527852 rows
Sequence (shuffle) types: Counter({11: 3735100L, 10: 577140L, 1: 215612L})
(4527852, Counter({1001: 4262476, 1002: 265376}), Counter({695850: 413700, 753081: 408156, 412133: 258426, 10228: 240177, 1047168: 220059, 595528: 212583, 267608: 107415, 449447: 101220, 203124: 93408, 1313172: 90069, 1185651: 89796, 330214: 89544, 96563: 88389, 211586: 88011, 272558: 84945, 641526: 84399, 190650: 78414, 326427: 78330, 526218: 75852, 1237085: 74844, 479434: 73185, 926562: 73185, 4781: 71253, 746697: 65940, 583355: 65499, 926571: 65268, 767434: 65121, 1189621: 63798, 158189: 63357, 314225: 63126, 946077: 56427, 196164: 54789, 1432562: 52206, 228410: 51702, 314260: 49560, 300852: 46851, 1343739: 41811, 484019: 41076, 309799: 40110, 525919: 37863, 1298851: 36897, 374847: 33642, 795359: 33474, 163003: 32655, 1432061: 30009, 233412: 29022, 703613: 28140, 1002672: 25704, 768671: 23667, 115713: 22092, 1619079: 18501, 203267: 15204, 196627: 14469, 1198115: 12726, 1618777: 12138, 1577684: 10899, 2898: 9786, 176280: 9618, 195065: 9345}))

>>> Upsert for next batch (ext_index=41)

update sequence_series2_updates set ext_index=41 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        41 |  4527852 |
+--------+-----------+----------+
1 row in set (2 min 37.00 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=41 and dummy_id between       1 and 3000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    83572 |
|    102 |        19 |   427759 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    25640 |
|    102 |        26 |   101920 |
|    102 |        27 |   239229 |
|    102 |        28 |   508024 |
|    102 |        29 |   614101 |
|    102 |        30 |    11340 |
|    102 |        31 |   853883 |
|    801 |        32 |    25160 |
|    802 |        32 |    25160 |
|    110 |        33 |      420 |
|    102 |        34 |    22180 |
|    110 |        34 |      140 |
|    102 |        35 |      919 |
|    110 |        35 |    23806 |
|    110 |        36 |     1054 |
|    102 |        37 |   390993 |
|    102 |        38 |     4440 |
|    102 |        39 |    13440 |
|    102 |        40 |     2120 |
|    102 |        41 |    66457 |
+--------+-----------+----------+
27 rows in set (19 min 2.26 sec)

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


>>> Rebuild affected profiles:
~/anaconda2/bin/python2 profile_plots.py --taxid 4781,768671,196627,412133,176280,479434,526218,926562,484019,330214,203267,1343739,300852,595528,203124,226186,449447,525919,695850,314260,1619079,272558,746697,115713,309799,195065,374847,1298851,946077,703613,158189,163003,1577684,326427,196164,10228,583355,1237085,190650,211586,233412,641526,1618777,2898,1002672,767434,1313172,795359,314225,1432061,1189621,926571,1047168,96563,228410,1185651,753081,1432562,267608,1198115  --profile=310:10:end:0 --shuffle-types 11 --computation-tag 102 --distributed



--09--

>>> Concating graphs for genome-size dependence:

21.3 ( 83) GS gamma
26.2 (102) PC gamma
21.4 ( 84) GS firmic
26.3 (103) PC firmic
21.2 ( 82) GS archaea
26.1 (101) PC archaea


>>> Folding next batch (will be ext_index=40):


259536,176299,797114,365046,192222                                         R (completion)
4781,768671,196627,412133,176280                                           R (completion - still partial!)
272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907    R
1439331,768679,1618609,326298,281090                                       R
479434,526218,926562,484019,330214                                           (postponed)

~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907

>>> Upsert for next batch (ext_index=40)

update sequence_series2_updates set ext_index=40 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        40 |  2534532 |
+--------+-----------+----------+
1 row in set (46.68 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=40 and dummy_id between       1 and 3000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    83572 |
|    102 |        19 |   427759 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    25640 |
|    102 |        26 |   101920 |
|    102 |        27 |   239229 |
|    102 |        28 |   508024 |
|    102 |        29 |   614101 |
|    102 |        30 |    11340 |
|    102 |        31 |   853883 |
|    801 |        32 |    25160 |
|    802 |        32 |    25160 |
|    110 |        33 |      420 |
|    102 |        34 |    22180 |
|    110 |        34 |      140 |
|    102 |        35 |      999 |
|    110 |        35 |    23806 |
|    110 |        36 |     1054 |
|    102 |        37 |   391233 |
|    102 |        38 |     4440 |
|    102 |        39 |    13440 |
|    102 |        40 |     2120 |
+--------+-----------+----------+
26 rows in set (18 min 36.14 sec)

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


>>> Update new profiles
~/anaconda2/bin/python2 profile_plots.py --taxid 259536,176299,797114,365046,192222,4781,768671,196627,412133,176280,272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907,1439331,768679,1618609,326298,281090 --profile=310:10:end:0 --shuffle-types 11 --computation-tag 102 --distributed

--08--

Begin, 150nt:
----------------------------------------
Y scale used: (-2.8436242765763069, 2.8436242765763069) (external: False)
----------------------------------------

End, 150nt:
Y scale used: (-0.77324253075568627, 0.77324253075568627) (external: False)



--07--


>>> Next batch (will be ext_index=39)
+---------------+
| max(dummy_id) |
+---------------+
|       4969272 |
+---------------+
1 row in set (0.00 sec)


505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924             R
1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081             R
414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008              R
316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628            R
259536,176299,797114,365046,192222,4781,768671,196627,412133,176280                  (partial)
272567,243265,905079,266834,228908,1618331,1618742,574566,410358,203907              (postponed)


~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,505682,160492,660470,263820,868864,1408204,667014,1183438,258594,1618924,1116230,420778,243233,313596,1330330,272634,156889,1618380,903503,130081,414004,1273541,655815,1198449,298386,196162,582515,765420,420247,911008,316279,556484,1208320,457570,441768,1033810,1142394,891968,555500,1441628,259536,176299,797114,365046,192222,4781,768671,196627,412133,176280


>>> Upsert for next batch (ext_index=39)

update sequence_series2_updates set ext_index=39 where source=102 and ext_index=0;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        39 |  2847643 |
+--------+-----------+----------+
1 row in set (3.89 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between      4938781 and   10188045
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;


xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=39 and dummy_id between       4938781 and 10188045;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    83572 |
|    102 |        19 |   427759 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    25640 |
|    102 |        26 |   101920 |
|    102 |        27 |   239229 |
|    102 |        28 |   508024 |
|    102 |        29 |   614101 |
|    102 |        30 |    11420 |
|    102 |        31 |   853883 |
|    801 |        32 |    25160 |
|    802 |        32 |    25160 |
|    110 |        33 |      420 |
|    102 |        34 |    22180 |
|    110 |        34 |      140 |
|    102 |        35 |     1035 |
|    110 |        35 |    23806 |
|    110 |        36 |     1054 |
|    102 |        37 |   392257 |
|    102 |        38 |     4440 |
|    102 |        39 |    13440 |
+--------+-----------+----------+
25 rows in set (9 min 30.37 sec)

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!





--06--

>>> Profiles diversity figure: find a justifiable clustering radius, based on actual taxon radiuses

K=1 N=10 (attempt=1)
===> Aquificae  d=1.02908593205

K=1 N=8 (attempt=1)
===> Fusobacteria  d=0.325742378453


>>> Additional end-referenced profiles (will be ext_index=38)

--> Additional species (end-referenced profiles of 300nt)
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 31 --species 1618443,1618673,1618775,1619029,1619068,1737403 --series-source 102 --completion-notification True

1618443,1618673,1618775,1619029,1619068,1737403                                     R
393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121              R
65357,477974,747,880073,267671,314278,272844,547144,1347342,635003                  R
926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983            R
649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306              R
336722,213585,882,347515,269800,517417,391009,926559,235909,1028800                 R                 
46234,259536,63737,226186,439292,517418,555779,224325,554373,1121088                R


~/anaconda2/bin/python2 sample_new_species.py --exclude-species 352427,204536,1427984,1379858,755732,190485,485913,420890,187420,243230,1227812,452652,931890,515635,224308,1123384,1619005,224324,543302,691883,243273,1033802,243275,525903,1432656,508771,1229908,744533,64091,575540,289376,289377,45670,886377,423536,1397361,476282,280699,930946,1209989,574087,284811,284812,670487,694429,1257118,498848,944289,243365,481448,511145,436907,272557,203123,402612,379066,862908,432331,312017,352472,122586,167546,1172194,553190,561896,160490,1189619,580340,1292022,272632,272635,564608,1033991,178306,431895,358681,400667,641309,648996,743718,45351,469383,388396,593117,319795,478009,633147,1304892,633149,4927,1177928,751945,431947,760142,521045,926550,240015,638303,190304,596323,1182568,754035,443254,469371,1055104,218497,743299,83332,469382,1319815,521097,491915,383372,280463,526224,945553,243090,194439,59374,525904,521011,578458,1321371,578462,1129897,696747,651182,1435057,335284,768670,1454006,642492,243274,5061,1379270,70601,316407,196600,29656,883169,1630693,661478,164328,910314,169963,255470,3055,999415,983544,220668,1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800



---- Windows added -----
  min-0           0
    0-1           0
    1-5      385497 ================
    5-20    1381926 ========================================================
   20-50    3171357 ================================================================================================================================
   50-100         0
  100-200         0
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    3755136 ======
   50-60    3430917 ======
   60-70    3407691 ======
   70-80    3406851 ======
   80-90    3405234 ======
   90-100   3403596 ======
  100-110   3399186 ======
  110-120   3393936 ======
  120-130   3387006 ======
  130-140   3379026 ======
  140-150   3369618 ======
  150-160   3360588 ======
  160-170   3341121 ======
  170-180   3320520 ======
  180-190   3298638 ======
  190-200   3274383 ======
  200-250   21814191 =====================================
  250-300   20958861 ====================================
  300-400   20100171 ==================================
  400-500         0
  500-1000        0
 1000-1500        0
 1500-2000        0
 2000-max         0
---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     1397298 ==
    1-2     12889044 ======================
    2-3     12738810 ======================
    3-4     12874848 ======================
    4-5     13067460 ======================
    5-6     12844629 ======================
    6-7     12886839 ======================
    7-8     12725328 ======================
    8-9     12877494 ======================
    9-max   12904920 ======================
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     117206670 ========================================================================================================================================================================================================
    1-2           0
    2-3           0
    3-4           0
    4-5           0
    5-6           0
    6-7           0
    7-8           0
    8-9           0
    9-max         0
---- Sequence types ----
Series 102
Total update records: 4938780  
Total: 4938780
Debug: allSequenceTypesSourceForUpdates: processed 4938780 rows
Sequence (shuffle) types: Counter({11: 3796483L, 10: 906146L, 1: 235131L})
(4938780, Counter({1001: 4922695, 1002: 16085, 10: 4032}), Counter({237561: 296352, 65357: 279846, 554373: 204897, 336722: 192675, 347515: 174384, 100226: 171318, 227882: 161364, 886293: 152208, 446470: 133959, 1028800: 129528, 63737: 109074, 313628: 106050, 1006000: 95865, 46234: 94836, 226186: 90804, 929556: 90468, 866895: 86352, 188937: 85386, 555779: 77007, 267671: 76902, 345663: 75327, 1347342: 75054, 235909: 74319, 882: 74067, 295405: 73899, 926559: 71001, 213585: 70287, 880073: 70266, 439292: 68502, 926569: 66507, 269800: 65289, 314278: 60291, 635003: 58653, 393595: 57855, 226185: 57687, 1121088: 56931, 407035: 55524, 649638: 54432, 1201294: 54180, 381306: 50715, 517418: 50631, 224325: 50589, 272623: 47565, 762983: 45171, 273121: 42924, 517417: 42903, 747: 42819, 1177931: 42567, 525909: 41244, 351607: 40719, 477974: 40677, 259536: 39774, 436308: 37695, 272844: 37443, 1618443: 35763, 391009: 34314, 547144: 33159, 1737403: 25074, 1619068: 21000, 322098: 14553, 1618775: 14427, 1619029: 13566, 1618729: 12432, 107806: 12054, 1618662: 11508, 1618673: 8148}))


>>> Upsert for next batch (ext_index=38)

update sequence_series2_updates set ext_index=38 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        38 |  4934748 |
+--------+-----------+----------+
1 row in set (1 min 34.86 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=38 and dummy_id between        1 and  4938780;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=60083475 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    83572 |
|    102 |        19 |   427759 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    25640 |
|    102 |        26 |   101920 |
|    102 |        27 |   239229 |
|    102 |        28 |   508024 |
|    102 |        29 |   614101 |
|    102 |        30 |    11420 |
|    102 |        31 |   853883 |
|    801 |        32 |    25160 |
|    802 |        32 |    25160 |
|    110 |        33 |      420 |
|    102 |        34 |    22180 |
|    110 |        34 |      140 |
|    102 |        35 |     1052 |
|    110 |        35 |    23806 |
|    110 |        36 |     1054 |
|    102 |        37 |   392380 |
|    102 |        38 |     4440 |   <-- Note we mostly updated records in the range ext_index>=47688790
+--------+-----------+----------+
24 rows in set (25 min 31.01 sec)

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


~/anaconda2/bin/python2 profile_plots.py --taxid 1618443,1618673,1618775,1619029,1619068,1737403,393595,1618662,525909,295405,227882,407035,272623,866895,313628,273121,65357,477974,747,880073,267671,314278,272844,547144,1347342,635003,926569,446470,436308,886293,107806,1006000,345663,1201294,1177931,762983,649638,322098,351607,237561,188937,226185,929556,1618729,100226,381306,336722,213585,882,347515,269800,517417,391009,926559,235909,1028800,46234,259536,63737,226186,439292,517418,555779,224325,554373,1121088  --profile=150:10:end:0 --shuffle-types 11 --computation-tag 102






April

--26--

>>> Create test batch of native-temperature profiles (will be ext_index=36 and ext_index=37)

[series-110; begin-referenced] (will be: ext_index=36)
No data:
667014,176299,99287,349741,273116                                 R
326298,1341181,1577684,365046,649638,272634,203267                R
295405,381764,391009,272633,226185,221109,163003,259536           R
233412,866499,583356,188937                                       R

Completion:
178306,469382,521097,431947,491915,240015,1189619,243090,190485   R
670487,485913,400667,187420,694429,243230,648996,243365,511145    R
521011,768670,1454006,70601,1123384,633147,243275,543302,243273   R
432331,760142,525903,525904,272632,196600,1229908,289377,160490   R
169963,203123,204536,272635,220668                                R

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference begin --max-num-windows 16 --species 667014,176299,99287,349741,273116  --series-source 110 --completion-notification True


---- Windows added -----
  min-0           0
    0-1           0
    1-5          28
    5-20    1613082 ========================================================================================================================================================================================================
   20-50          0
   50-100         0
  100-200         0
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10    1613110 =============
   10-20    1613110 =============
   20-30    1613110 =============
   30-40    1613110 =============
   40-50    1613082 =============
   50-60    1613046 =============
   60-70    1611909 =============
   70-80    1609428 =============
   80-90    1606109 =============
   90-100   1602746 =============
  100-110   1596992 ============
  110-120   1593218 ============
  120-130   1585733 ============
  130-140   1575711 ============
  140-150   1569889 ============
  150-160   1560338 ============
  160-170         0
  170-180         0
  180-190         0
  190-200         0
  200-250         0
  250-300         0
  300-400         0
  400-500         0
  500-1000        0
 1000-1500        0
 1500-2000        0
 2000-max         0
---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     25590641 ========================================================================================================================================================================================================
    1-2           0
    2-3           0
    3-4           0
    4-5           0
    5-6           0
    6-7           0
    7-8           0
    8-9           0
    9-max         0
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     2457417 ===================
    1-2     2564579 ====================
    2-3     2530204 ====================
    3-4     2596568 ====================
    4-5     2586746 ====================
    5-6     2525936 ====================
    6-7     2588616 ====================
    7-8     2547367 ====================
    8-9     2606522 ====================
    9-max   2586686 ====================
---- Sequence types ----
Series 110
Total update records: 1645994 
Total: 1613110
Debug: allSequenceTypesSourceForUpdates: processed 1613110 rows
Sequence (shuffle) types: Counter({11: 1346098L, 10: 190204L, 1: 76808L})
(1613110, Counter({1002: 1613110}), Counter({485913: 234460, 243090: 147828, 176299: 111508, 295405: 96126, 99287: 94946, 188937: 94040, 365046: 80649, 221109: 72216, 226185: 67202, 649638: 61316, 1341181: 61282, 667014: 46068, 349741: 44730, 259536: 44152, 326298: 43471, 163003: 42314, 583356: 40530, 391009: 39433, 381764: 36742, 233412: 33983, 273116: 31935, 866499: 22670, 272633: 21612, 203267: 16831, 272634: 14424, 1577684: 12327, 243365: 315}))

>>> Upsert for 17th test-batch (ext_index=36, native-temperature profiles, completion from prev. batch i.e., ext_index=35)

update sequence_series2_updates set ext_index=36 where source=110;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    110 |        36 |  1613110 |
+--------+-----------+----------+
1 row in set (12.18 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=110
and sequence_series2_updates.dummy_id between        1 and   1700000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1613110 rows affected (38 min 39.46 sec)
Records: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=110 and ext_index=36 and dummy_id between        1 and  1700000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  6057284 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    52858 |
|    102 |        26 |   148934 |
|    102 |        27 |  1487433 |
|    102 |        28 |  1463514 |
|    102 |        29 |   614101 |
|    102 |        30 |   871049 |
|    102 |        31 |  1465481 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
|    110 |        33 |    81000 |
|    102 |        34 |   140407 |
|    110 |        34 |    58040 |
|    102 |        35 |   287356 |
|    110 |        35 |   319342 |
|    110 |        36 |   229456 |
+--------+-----------+----------+
23 rows in set (19 min 38.50 sec)


select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


> Plot

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series110.h5" --highlight-species=755732,59374,593117,1432656,243274,272557,224324,178306,469382,521097,431947,491915,240015,1189619,243090,190485,670487,485913,400667,187420,694429,243230,648996,243365,511145,521011,768670,1454006,70601,1123384,633147,243275,543302,243273,432331,760142,525903,525904,272632,196600,1229908,289377,160490,169963,203123,204536,272635,220668



>>> Create test batch of end-referenced profiles (will be ext_index=37)


[series-102; end-referenced] (will be: ext_index=37)
Errors:
667014,176299,99287,349741,485913,273116,326298,243090,365046     R
649638,272634,203267,381764,391009,272633,226185,221109,259536    R
233412,866499,188937                                              R

Completion
178306,469382,521097,431947,491915,240015,1189619,190485,670487   R
400667,187420,694429,243230,648996,243365,511145,521011,768670    R
1454006,70601,1123384,633147,583356,432331,543302,243273,243275   R
760142,525903,525904,272632,196600,1229908,289377,163003,160490   R
169963,295405,203123,204536,1577684,272635,220668,1341181         R

New species
1148,3067,4927,28892,36329,44056,45670,63737,130081,145458        R
156889,160492,167546,176280,187272,190192,195065,196164           R
208964,226186,243159,258594,263358,266940,272626,280463,298386    R
383372,388396,411154,420890,449447,477974,478009,486041,498848    R
314260,314278,336722,351607,353152,358681,360911,362976           R
517418,521674,526218,526224,578458,578462,580340,582515,585394    R
589924,638303,642492,696747,703613,753081,755732,797304           R
861299,862908,867904,868864,880073,886377,903503,905079,926559    R
946362,1002672,1033991,1121088,1125630,1157490,1266844,1273541    R
1319815,1330330,1408204,1429439,1435057,1502293,1519565,1574623   R
1618443,1618673,1618775,1619029,1619068,1737403                   (postponed)

Counter({1001: 7776284, 1002: 71008, 10: 52117})
Counter({280463: 787290, 905079: 510615, 753081: 452088, 1519565: 427833, 486041: 382074, 3067: 299166, 946362: 245532, 44056: 237027, 336722: 228354, 1429439: 174027, 130081: 149352, 63737: 140238, 861299: 133791, 449447: 132678, 263358: 126231, 1125630: 121128, 1574623: 119448, 208964: 117024, 298386: 114891, 36329: 112707, 226186: 101346, 258594: 101304, 266940: 98238, 696747: 93555, 1157490: 93240, 521674: 89418, 526218: 87024, 926559: 80892, 353152: 78981, 880073: 78750, 156889: 78057, 797304: 76797, 411154: 75285, 1148: 74844, 314278: 73206, 585394: 70455, 1121088: 68145, 243159: 66024, 272626: 63924, 360911: 63420, 196164: 62958, 1266844: 60375, 187272: 60165, 160492: 59493, 1408204: 58149, 517418: 56910, 314260: 56301, 867904: 53676, 362976: 53550, 589924: 52080, 176280: 51765, 28892: 50883, 886377: 49098, 477974: 45360, 351607: 45276, 1273541: 42756, 1330330: 39837, 145458: 36540, 1502293: 35553, 190192: 35448, 703613: 32298, 868864: 31689, 1002672: 30429, 167546: 26460, 243090: 20925, 485913: 20585, 195065: 10605, 903503: 8526, 226185: 4867, 1341181: 4710, 221109: 4411, 176299: 3342, 365046: 2561, 233412: 2083, 99287: 2002, 649638: 1970, 326298: 1903, 188937: 1628, 259536: 1334, 578458: 861, 295405: 753, 272633: 669, 203267: 537, 349741: 422, 273116: 398, 358681: 315, 642492: 105, 667014: 93, 272634: 75, 388396: 63, 866499: 52, 381764: 26, 391009: 22, 163003: 1})
---- Windows added -----
  min-0           0
    0-1           0
    1-5      745142 ===================
    5-20    7102150 =====================================================================================================================================================================================
   20-50          0
   50-100         0
  100-200         0
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    7847292 ==============
   50-60    7221103 =============
   60-70    7115620 =============
   70-80    7109929 =============
   80-90    7102150 =============
   90-100   7096263 =============
  100-110   7083572 =============
  110-120   7065913 ============
  120-130   7045712 ============
  130-140   7026283 ============
  140-150   7005658 ============
  150-160   6988783 ============
  160-170   6953088 ============
  170-180   6910386 ============
  180-190   6873119 ============
  190-200   6828490 ============
  200-250         0
  250-300         0
  300-400         0
  400-500         0
  500-1000        0
 1000-1500        0
 1500-2000        0
 2000-max         0
---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     2260556 ====
    1-2     12432279 ======================
    2-3     12356536 ======================
    3-4     12352073 ======================
    4-5     12251447 ======================
    5-6     12417624 ======================
    6-7     12360912 ======================
    7-8     12155623 =====================
    8-9     12301275 ======================
    9-max   12385036 ======================
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     113273361 ========================================================================================================================================================================================================
    1-2           0
    2-3           0
    3-4           0
    4-5           0
    5-6           0
    6-7           0
    7-8           0
    8-9           0
    9-max         0
---- All windows after update (phase relative to CDS end) -----
  min-0           0
    0-1     202933768 ========================================
    1-2     91497281 ==================
    2-3     91539221 ==================
    3-4     91392417 ==================
    4-5     90828624 ==================
    5-6     91108307 ==================
    6-7     91401900 ==================
    7-8     90443142 ==================
    8-9     91255142 ==================
    9-max   91272327 ==================


>>> Upsert for next batch (ext_index=37)

update sequence_series2_updates set ext_index=37 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        37 |  7795175 |
+--------+-----------+----------+
1 row in set (4 min 35.86 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=102
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

xQuery OK, 1613110 rows affected (38 min 39.46 sec)
xRecords: 1613110  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=37 and dummy_id between        1 and  8000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=47037078 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  4656784 |
|    102 |        19 |  2382954 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100920 |
|    102 |        23 |  1063960 |
|    102 |        24 |   291520 |
|    102 |        25 |    52858 |
|    102 |        26 |   148934 |
|    102 |        27 |  1487433 |
|    102 |        28 |  1463514 |
|    102 |        29 |   614101 |
|    102 |        30 |   871049 |
|    102 |        31 |  1465481 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
|    110 |        33 |    81000 |
|    102 |        34 |   140407 |
|    110 |        34 |    58040 |
|    102 |        35 |   287356 |
|    110 |        35 |   319342 |
|    110 |        36 |   229456 |
|    102 |        37 |  1798500 |
+--------+-----------+----------+
24 rows in set (1 hour 28 min 54.86 sec)

select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


667014,176299,99287,349741,485913,273116,326298,243090,365046,649638,272634,203267,381764,391009,272633,226185,221109,259536,233412,866499,188937,178306,469382,521097,431947,491915,240015,1189619,190485,670487,400667,187420,694429,243230,648996,243365,511145,521011,768670,1454006,70601,1123384,633147,583356,432331,543302,243273,243275,760142,525903,525904,272632,196600,1229908,289377,163003,160490,169963,295405,203123,204536,1577684,272635,220668,1341181,1148,3067,4927,28892,36329,44056,45670,63737,130081,145458,156889,160492,167546,176280,187272,190192,195065,196164,208964,226186,243159,258594,263358,266940,272626,280463,298386,383372,388396,411154,420890,449447,477974,478009,486041,498848,314260,314278,336722,351607,353152,358681,360911,362976,517418,521674,526218,526224,578458,578462,580340,582515,585394,589924,638303,642492,696747,703613,753081,755732,797304,861299,862908,867904,868864,880073,886377,903503,905079,926559,946362,1002672,1033991,1121088,1125630,1157490,1266844,1273541,1319815,1330330,1408204,1429439,1435057,1502293,1519565,1574623





--25--
>>> Create test batch of native-temperature profiles (will be ext_index=35)

[series-110; begin]
70601,1189619,648996,400667,243275,240015,1123384,178306          R
511145,190485,543302,1229908,204536,203123,431947,272635          R
220668,768670,525904,169963,196600,243230                         R
187420,160490,670487,432331,272632,525903,694429,243273,521097    R
491915,667014,176299,99287,349741,485913,633147,243365,273116     R
289377,326298,243090,1341181,760142,1577684,365046,649638,272634  R
203267,295405,381764,391009,521011,272633,226185,469382,221109    R
163003,259536,233412,866499,583356,1454006,188937                 R

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference begin --max-num-windows 16 --species 163003,259536,233412,866499,583356,1454006,188937 --series-source 110 --completion-notification True

[series-102; end]
70601,1189619,648996,400667,243275,240015,1123384,178306          R          
511145,190485,543302,1229908,204536,203123,431947,272635          R
220668,768670,525904,169963,196600,243230                         R
187420,160490,670487,432331,272632,525903,694429,243273,521097    R
491915,667014,176299,99287,349741,485913,633147,243365,273116     R
289377,326298,243090,1341181,760142,1577684,365046,649638,272634  R
203267,295405,381764,391009,521011,272633,226185,469382,221109    R
163003,259536,233412,866499,583356,1454006,188937                 R

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 16 --species 163003,259536,233412,866499,583356,1454006,188937 --series-source 102 --completion-notification True


---- Windows added -----
  min-0           0
    0-1           0
    1-5      158995 =========  
    5-20    3396529 ===============================================================================================================================================================================================
   20-50          0
   50-100         0
  100-200         0
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10    1897887 =======
   10-20    1907420 =======
   20-30    1917702 =======
   30-40    1928584 =======
   40-50    1938073 =======
   50-60    1947903 =======
   60-70    1952331 =======
   70-80    1953655 =======
   80-90    1952398 =======
   90-100   1951537 =======
  100-110   1948994 =======
  110-120   1946240 =======
  120-130   1941687 =======
  130-140   1932704 =======
  140-150   1923302 =======
  150-160   1932206 =======
  160-170    183066 =
  170-180    185707 =
  180-190    184214 =
  190-200    184740 =
  200-250    951055 ====
  250-300    994102 ====
  300-400   1985325 =======
  400-500   1866158 =======
  500-1000  8518692 ================================
 1000-1500  4656729 =================
 1500-2000  1564185 ======
 2000-max   1578570 ======
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    1793996 =======
   50-60    1688354 ======
   60-70    1685764 ======
   70-80    1695714 ======
   80-90    1704474 ======
   90-100   1719248 ======
  100-110   1723934 ======
  110-120   1726747 ======
  120-130   1733589 ======
  130-140   1729541 ======
  140-150   1729016 ======
  150-160   1731206 ======
  160-170   1722049 ======
  170-180   1716116 ======
  180-190   1713542 ======
  190-200   1697862 ======
  200-250   1060815 ====
  250-300   1097583 ====
  300-400   2331933 =========  
  400-500   2276127 ========   
  500-1000  10411947 =======================================
 1000-1500  5621490 =====================
 1500-2000  1952034 =======
 2000-max   1562085 ======
---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     29305445 =============================================================================================================
    1-2     2723143 ========== 
    2-3     2678905 ========== 
    3-4     2767592 ========== 
    4-5     2741264 ========== 
    5-6     2659995 ========== 
    6-7     2736603 ========== 
    7-8     2706148 ========== 
    8-9     2755832 ========== 
    9-max   2750260 ========== 
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     27892100 ========================================================================================================
    1-2     2915518 ===========
    2-3     2844851 ===========
    3-4     2924374 ===========
    4-5     2899168 ===========
    5-6     2901157 ===========
    6-7     2869389 ===========
    7-8     2883779 ===========
    8-9     2819962 ========== 
    9-max   2874889 ===========
---- Sequence types ----
Series 110
Total update records: 3460338  
Total: 1836182
Debug: allSequenceTypesSourceForUpdates: processed 1836182 rows
Sequence (shuffle) types: Counter({11: 1583722L, 10: 165016L, 1: 87444L})
Series 102
Total update records: 5206908  
Total: 1719342
Debug: allSequenceTypesSourceForUpdates: processed 1719342 rows
Sequence (shuffle) types: Counter({11: 1446530L, 10: 190444L, 1: 81841L})
(3555524, Counter({1002: 1842863, 1001: 1712661, 10: 2156}), Counter({485913: 240639, 243090: 154135, 176299: 112560, 196600: 105567, 295405: 97272, 99287: 95613, 188937: 95466, 243365: 92547, 190485: 87717, 511145: 86772, 469382: 81858, 365046: 81459, 400667: 81270, 221109: 73331, 226185: 68544, 1341181: 65541, 220668: 65184, 243230: 64155, 543302: 63231, 649638: 61887, 1189619: 60795, 169963: 59745, 525904: 59472, 491915: 59409, 1454006: 57981, 243275: 57771, 521011: 55734, 178306: 54579, 670487: 49833, 667014: 46242, 521097: 45570, 349741: 44898, 259536: 44582, 768670: 44079, 326298: 44037, 1123384: 44037, 431947: 43869, 70601: 43281, 163003: 42420, 694429: 41307, 583356: 40593, 1229908: 39627, 391009: 39564, 187420: 39249, 648996: 38073, 381764: 36750, 633147: 36498, 525903: 36456, 204536: 36183, 233412: 35826, 203123: 35301, 760142: 35217, 432331: 33054, 273116: 32046, 289377: 30513, 866499: 22764, 272633: 21798, 272632: 21252, 203267: 17031, 272635: 16422, 272634: 14448, 1577684: 12327, 243273: 9996, 240015: 84, 160490: 63}))


>>> Upsert for 16th test-batch (mixed native-temperature profiles and end-referenced profiles)

update sequence_series2_updates set ext_index=35 where source in (102,110);

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        35 |  1717186 |
|    110 |        35 |  1836182 |
+--------+-----------+----------+
2 rows in set (1 min 36.66 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source in (102,110)
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 998236 rows affected (37 min 34.61 sec)
Records: 998236  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source in (102,110) and ext_index=35 and dummy_id between        1 and  5500000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index order by ext_index, source;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  8240673 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   148934 |
|    102 |        27 |  1776372 |
|    102 |        28 |  1691643 |
|    102 |        29 |   614103 |
|    102 |        30 |   922832 |
|    102 |        31 |  1581009 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
|    110 |        33 |    85032 |
|    102 |        34 |   266741 |
|    110 |        34 |    60935 |
|    102 |        35 |   290251 |
|    110 |        35 |   483691 |
+--------+-----------+----------+
22 rows in set (25 min 8.40 sec)


select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!


>>> Plot native-temperature profiles

> Series 110

70601,1189619,648996,400667,243275,240015,1123384,178306,511145,190485,543302,1229908,204536,203123,431947,272635,220668,768670,525904,169963,196600,243230,187420,160490,670487,432331,272632,525903,694429,243273,521097,491915,667014,176299,99287,349741,485913,633147,243365,273116,289377,326298,243090,1341181,760142,1577684,365046,649638,272634,203267,295405,381764,391009,521011,272633,226185,469382,221109,163003,259536,233412,866499,583356,1454006,188937


~/anaconda2/bin/python2 profile_plots.py --taxid 70601,1189619,648996,400667,243275,240015,1123384,178306,511145,190485,543302,1229908,204536,203123,431947,272635,220668,768670,525904,169963,196600,243230,187420,160490,670487,432331,272632,525903,694429,243273,521097,491915,667014,176299,99287,349741,485913,633147,243365,273116,289377,326298,243090,1341181,760142,1577684,365046,649638,272634,203267,295405,381764,391009,521011,272633,226185,469382,221109,163003,259536,233412,866499,583356,1454006,188937  --profile=150:10:begin:0 --shuffle-types 11 --computation-tag 110


~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series110.h5" --highlight-species=755732,59374,593117,1432656,243274,272557,224324,178306,469382,521097,431947,491915,240015,1189619,243090,190485,670487,485913,400667,187420,694429,243230,648996,243365,511145,521011,768670,1454006,70601,1123384,633147,243275,543302,243273,432331,760142,525903,525904,272632,196600,1229908,289377,160490,169963,203123,204536,272635,220668


> Series 102

~/anaconda2/bin/python2 profile_plots.py --taxid 70601,1189619,648996,400667,243275,240015,1123384,178306,511145,190485,543302,1229908,204536,203123,431947,272635,220668,768670,525904,169963,196600,243230,187420,160490,670487,432331,272632,525903,694429,243273,521097,491915,667014,176299,99287,349741,485913,633147,243365,273116,289377,326298,243090,1341181,760142,1577684,365046,649638,272634,203267,295405,381764,391009,521011,272633,226185,469382,221109,163003,259536,233412,866499,583356,1454006,188937  --profile=150:10:end:0 --shuffle-types 11 --computation-tag 102






--24--

>>> Create test batch of native-temperature profiles (will be ext_index=34)
Note: By mistake this batch contains a mixture end-profiles (102) and native-temp (110) updates.

70601    98                                                               (partial?)
1189619  20                                                               (partial?)
648996,400667,243275,240015,1123384,178306,511145,190485,543302,1229908   (partial?)
204536,203123,431947,272635,220668,768670,525904,169963,196600,243230     (partial?)
187420,160490,670487,432331,272632,525903,694429,243273,521097            (partial?)




648996,400667,243275,240015,1123384,178306,511145,190485,543302,1229908,204536,203123,431947,272635,220668,768670,525904,169963,196600,243230,187420,160490,670487,432331,272632,525903,694429,243273,521097


~/anaconda2/bin/python2 compare_updates.py --perform-delete --find-duplicates

---- Windows added -----
  min-0           0
    0-1           0
    1-5      108171 ================
    5-20    1167915 ==========================================================================================================================================================================
   20-50      29091 ====
   50-100     38325 ======
  100-200     32970 =====
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (phase (N=10) relative to CDS start) -----
  min-0           0
    0-1     9196410 =======================================================================
    1-2     1877043 ===============
    2-3     1817739 ==============
    3-4     1847937 ==============
    4-5     1861860 ==============
    5-6     1843611 ==============
    6-7     1837290 ==============
    7-8     1831389 ==============
    8-9     1820028 ==============
    9-max   1812153 ==============
---- Windows added (phase (N=10) relative to CDS end) -----
  min-0           0
    0-1     17680341 =========================================================================================================================================
    1-2      934857 =======
    2-3      863520 =======
    3-4      952749 =======
    4-5      891744 =======
    5-6      800688 ======
    6-7      882966 =======
    7-8      924903 =======
    8-9      898485 =======
    9-max    915207 =======

---- Sequence types ----
Series 110
Total update records: 1386000
Total: 210364
Debug: allSequenceTypesSourceForUpdates: processed 210364 rows
Sequence (shuffle) types: Counter({11: 200346L, 1: 10018L})
Series 102
Total update records: 1278837
Total: 1166109
Debug: allSequenceTypesSourceForUpdates: processed 1166109 rows
Sequence (shuffle) types: Counter({11: 1033320L, 10: 77260L, 1: 55529L})
(1376472, Counter({1001: 1118460, 1002: 258012, 10: 147}), Counter({196600: 105567, 190485: 87717, 400667: 81123, 240015: 70980, 220668: 65184, 243230: 64155, 543302: 63231, 1189619: 60795, 169963: 59745, 525904: 59472, 243275: 57771, 670487: 49833, 521097: 45570, 768670: 44079, 1123384: 44037, 431947: 43869, 70601: 43266, 694429: 41307, 187420: 39249, 525903: 36456, 204536: 36183, 160490: 35616, 203123: 35301, 432331: 33054, 648996: 25242, 272632: 21252, 272635: 16422, 243273: 9996}))


>>> Upsert for 15th test-batch (mixed native-temperature profiles and end-referenced profiles)

update sequence_series2_updates set ext_index=34 where source in (102,110);

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        34 |  1165962 |
|    110 |        34 |   210378 |
+--------+-----------+----------+
2 rows in set (31.11 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source in (102,110)
and sequence_series2_updates.dummy_id between        1 and   1500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 2494653 rows affected (28 min 17.89 sec)
Records: 1376340  Duplicates: 1118313  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source in (102,110) and ext_index=34 and dummy_id between        1 and  1500000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  8529866 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   148934 |
|    102 |        27 |  1776372 |
|    102 |        28 |  1691643 |
|    102 |        29 |   614103 |
|    102 |        30 |   922832 |
|    102 |        31 |  1581009 |
|    102 |        34 |   266741 |
|    110 |        33 |    85032 |
|    110 |        34 |    60935 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
+--------+-----------+----------+
20 rows in set (1 hour 2 min 33.11 sec)


mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!




--23--

>>> Create test batch of native-temperature profiles (will be ext_index=33)

243274   80   R
59374    37   R
1432656  88   R
224324   96   R
593117   88   R
272557   92.5 R
70601    98   (postponed)
755732   20   R
1189619  20   (postponed)

~/anaconda2/bin/python2 compare_updates.py --perform-delete --find-duplicates

---- Windows added -----
  min-0           0
    0-1           0
    1-5           0
    5-20      16212 =========
   20-50      75705 ============================================
   50-100    132468 =============================================================================
  100-200    121338 ======================================================================
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0

Sequence (shuffle) types: Counter({11: 292340L, 10: 36920L, 1: 16463L})
(345723, Counter({1002: 345723}), Counter({755732: 84672, 59374: 64785, 593117: 45297, 1432656: 43911, 243274: 38766, 272557: 35679, 224324: 32613}))


>>> Upsert for 14th test-batch (native-temperature profiles)

update sequence_series2_updates set ext_index=33 where source=110;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    110 |        33 |   346017 |
+--------+-----------+----------+
1 row in set (2.34 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source=110
and sequence_series2_updates.dummy_id between        1 and   500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 346311 rows affected (6 min 19.77 sec)
Records: 346017  Duplicates: 294  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=110 and ext_index=33 and dummy_id between        1 and  500000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  8774411 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   148934 |
|    102 |        27 |  1776372 |
|    102 |        28 |  1691643 |
|    102 |        29 |   614103 |
|    102 |        30 |   922832 |
|    102 |        31 |  1581009 |
|    110 |        33 |    85032 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
+--------+-----------+----------+
18 rows in set (25 min 10.97 sec)

mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;

> Hurray - all done!

>>> Plot native-temperature profiles (series 110)

755732,59374,593117,1432656,243274,272557,224324

~/anaconda2/bin/python2 profile_plots.py --taxid 755732,59374,593117,1432656,243274,272557,224324  --profile=150:10:begin:0 --shuffle-types 11 --computation-tag 110

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series110.h5" --highlight-species=755732,59374,593117,1432656,243274,272557,224324




--21--

>>> Create triangular test series (801,802)

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference begin --max-num-windows 101 --species 553190 --series-source 801

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference begin --max-num-windows 101 --species 553190 --series-source 802

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end   --max-num-windows 101 --species 553190 --series-source 801

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end   --max-num-windows 101 --species 553190 --series-source 802

~/anaconda2/bin/python2 compare_updates.py --perform-delete   # Note: --find-duplicates fails because it doesn't recognize different series (801 vs. 802...)


>>> Upsert for 13t htest-batch (triangular test series)

update sequence_series2_updates set ext_index=32 where source=801;
update sequence_series2_updates set ext_index=32 where source=802;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    801 |        32 |    53046 |
|    802 |        32 |    53004 |
+--------+-----------+----------+
2 rows in set (0.05 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source in (801,802)
and sequence_series2_updates.dummy_id between        1 and   150000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 158718 rows affected (16.96 sec)
Records: 106050  Duplicates: 52941  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source in (801,802) and ext_index=32 and dummy_id between        1 and  150000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  8774411 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   148934 |
|    102 |        27 |  1776372 |
|    102 |        28 |  1691643 |
|    102 |        29 |   614103 |
|    102 |        30 |   922832 |
|    102 |        31 |  1581009 |
|    801 |        32 |    26418 |
|    802 |        32 |    26418 |
+--------+-----------+----------+
17 rows in set (36 min 2.26 sec)

mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39719662 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (10 min 16.46 sec)

> Hurray - all done!

>>> Plot triangular test series (801,802)

~/anaconda2/bin/python2 profile_plots.py --taxid 553190  --profile=150:10:begin:0 --shuffle-types 11 --computation-tag 801
~/anaconda2/bin/python2 profile_plots.py --taxid 553190  --profile=150:10:end:0   --shuffle-types 11 --computation-tag 801

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series801.h5","gcdata_v2_taxid_*_profile_150_10_end_0_t11_series801.h5" --highlight-species=553190 --hide-legend --hide-environmental-vars


~/anaconda2/bin/python2 profile_plots.py --taxid 553190  --profile=150:10:begin:0 --shuffle-types 11 --computation-tag 802
~/anaconda2/bin/python2 profile_plots.py --taxid 553190  --profile=150:10:end:0   --shuffle-types 11 --computation-tag 802

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0_t11_series802.h5","gcdata_v2_taxid_*_profile_150_10_end_0_t11_series802.h5" --highlight-species=553190 --hide-legend --hide-environmental-vars


--17--


>>> Calculate additional end-referenced profiles (will be 12th batch, aka ext_index=31)
Additional species (150nt)
335284   R
1033802  R
1321371  R
862908   R
651182   R
633147   R
574087   R
1427984  R
402612   R
1454006  R
194439   R
289377   R
1432656  R
521011   R
1630693  R

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 16 --species 633147,574087,1427984,402612,1454006,194439,289377,1432656,521011,1630693 --completion-notification True

Additional species (1000nt)
1182568  R
4927     R
691883   R
29656    R
3055     r
478009   R

Deeper (1000nt) profiles
1397361  R(completion from last batch)
5061     R(completion from last batch)
578462   R(completion from last batch)
931890   R(completion from last batch)
45351    R
945553   R






list:
352427,1379858,755732,420890,1227812,452652,931890,515635,224308,1619005,224324,508771,1229908,744533,64091,289376,45670,886377,518766,423536,347257,167546,280699,1619068,572544,930946,1209989,284812,582515,1257118,498848,944289,243365,481448,511145,436907,273075,379066,312017,352472,122586,476282,1172194,553190,1236689,561896,160490,1618673,580340,1292022,1055104,1033991,228908,178306,431895,358681,641309,648996,743718,45351,469383,388396,319795,1304892,633149,1177928,751945,760142,521045,926550,1618775,280463,638303,190304,596323,1618662,754035,443254,469371,564608,218497,743299,83332,469382,1319815,491915,383372,240015,526224,945553,420247,578458,578462,1129897,696747,1435057,797114,642492,5061,1379270,655815,999415,123214,883169,661478,164328,910314,1618924,255470,3055,316407,983544



>>> Check records for upsert for 12th vertical-randomization test-batch (end-referenced updates only)

> Output of ~/anaconda2/bin/python2 compare_updates.py

---- Windows added -----
  min-0           0
    0-1           0
    1-5      235136 ==============
    5-20     930206 =========================================================
   20-50     446519 ===========================
   50-100   1152303 =======================================================================
  100-200    494340 ==============================
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0

---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10    1052778 =
   10-20    1063131 =
   20-30    1073003 =
   30-40    1082369 =
   40-50    1093184 =
   50-60    1101692 =
   60-70    1110575 =
   70-80    1117967 =
   80-90    1124896 =
   90-100   1132120 =
  100-110   1137790 =
  110-120   1146274 =
  120-130   1146652 =
  130-140   1147870 =
  140-150   1150645 =
  150-160   1257829 =
  160-170   1253566 =
  170-180   1253353 =
  180-190   1246717 =
  190-200   1240900 =
  200-250   6141780 =======   
  250-300   6003635 =======   
  300-400   11504929 ==============
  400-500   10781094 =============
  500-1000  43980258 ====================================================
 1000-1500  26388897 ===============================
 1500-2000  14035218 =================
 2000-max   27636588 =================================


---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    2024253 ==
   50-60    1849932 ==
   60-70    1845690 ==
   70-80    1845480 ==
   80-90    1844409 ==
   90-100   1844052 ==
  100-110   1842624 ==
  110-120   1839810 ==
  120-130   1837332 ==
  130-140   1834854 ==
  140-150   1831746 ==
  150-160   1829079 ==
  160-170   1823913 ==
  170-180   1817109 ==
  180-190   1810515 ==
  190-200   1801254 ==
  200-250   11049014 =============
  250-300   10711985 =============
  300-400   20298848 ========================
  400-500   18778317 ======================
  500-1000  73634559 =======================================================================================
 1000-1500  5410956 ======
 1500-2000        0
 2000-max         0

Sequence (shuffle) types: Counter({11: 2745720L, 10: 357760L, 1: 155024L})
(3258504, Counter(), Counter({29656: 409059, 45351: 394023, 3055: 318297, 945553: 317226, 578462: 222765, 1630693: 161742, 5061: 153153, 691883: 132426, 4927: 131796, 1397361: 127575, 651182: 91875, 1033802: 73857, 862908: 67851, 1454006: 57981, 478009: 56826, 521011: 55734, 1182568: 54957, 335284: 52731, 402612: 51303, 931890: 50694, 574087: 47859, 194439: 47145, 1432656: 43911, 633147: 36498, 289377: 30513, 1321371: 25683, 1257118: 16758, 1427984: 12159, 284811: 6048, 452652: 5985, 575540: 4074}))


>>> Upsert for 12th vertical-randomization test-batch

update sequence_series2_updates set ext_index=31 where source=102;

Query OK, 3258504 rows affected (2 min 6.33 sec)
Rows matched: 3258504  Changed: 3258504  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        31 |  3258504 |
+--------+-----------+----------+
1 row in set (1 min 10.54 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1165443 rows affected (15 min 27.67 sec)
Records: 582732  Duplicates: 582711  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=31 and dummy_id between        1 and  5000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  8774411 |
|    102 |        19 |  2765427 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   148934 |
|    102 |        27 |  1776372 |
|    102 |        28 |  1691643 |
|    102 |        29 |   614103 |
|    102 |        30 |   922832 |
|    102 |        31 |  1581009 |
+--------+-----------+----------+
15 rows in set (34 min 1.89 sec)

mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39719622 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (8 min 10.85 sec)

> Hurray - all done!

>>> Build updated profiles

> Update profiles tree for 150nt (standard) profiles

time ~/anaconda2/bin/python2 profile_plots.py --taxid 29656,45351,3055,945553,578462,1630693,5061,691883,4927,1397361,651182,1033802,862908,1454006,478009,521011,1182568,335284,402612,931890,574087,194439,1432656,633147,289377,1321371,1257118,1427984,284811,452652,575540 --profile=150:10:end:0 --shuffle-types 11

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_*_profile_150_10_end_0_t11.h5" --highlight-species 352427,1379858,420890,1227812,452652,931890,515635,224308,1619005,224324,508771,744533,64091,289376,45670,886377,423536,167546,280699,930946,1209989,284812,1257118,498848,944289,243365,481448,511145,436907,379066,312017,352472,122586,476282,1172194,553190,561896,160490,580340,1292022,1055104,1033991,431895,358681,641309,648996,743718,45351,469383,388396,319795,1304892,633149,1177928,751945,760142,521045,926550,280463,638303,190304,596323,754035,443254,469371,564608,218497,743299,83332,1319815,491915,383372,240015,526224,945553,578458,578462,1129897,696747,1435057,642492,5061,1379270,999415,883169,661478,164328,910314,255470,3055,316407,983544,29656,45351,3055,945553,578462,1630693,5061,691883,4927,1397361,651182,1033802,862908,1454006,478009,521011,1182568,335284,402612,931890,574087,194439,1432656,633147,289377,1321371,1257118,1427984,284811,452652,575540


> Update profiles tree for 1000nt (deep) profiles
time ~/anaconda2/bin/python2 profile_plots.py --taxid 1182568,4927,691883,29656,3055,478009,1397361,5061,578462,931890,45351,945553,1257118,284811,575540,452652  --profile=990:10:end:0 --shuffle-types 11

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_1000_10_begin_0.h5","gcdata_v2_taxid_*_profile_990_10_end_0_t11.h5" --highlight-species 1182568,4927,691883,29656,3055,478009,1397361,5061,578462,931890,45351,945553,1257118,284811,575540,452652


-----------------------------------------------------------------------


>>> Check records for upsert for 11th vertical-randomization test-batch (end-referenced updates only)

> Output of ~/anaconda2/bin/python2 compare_updates.py

---- Windows added -----
  min-0           0
    0-1           0
    1-5      111819 ===============
    5-20     857219 ================================================================================================================
   20-50     117202 ===============
   50-100    351078 ==============================================
  100-200     86859 ===========
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10     312583 =
   10-20     319492 =
   20-30     324973 =
   30-40     331231 =
   40-50     336985 =
   50-60     342949 =
   60-70     347926 =
   70-80     352273 =
   80-90     356809 =
   90-100    360253 =
  100-110    363298 =
  110-120    367834 =
  120-130    368317 =
  130-140    369451 =
  140-150    373042 =
  150-160    419320 ==
  160-170    420225 ==
  170-180    422388 ==
  180-190    421044 ==
  190-200    422052 ==
  200-250   2122251 ========   
  250-300   2121309 ========   
  300-400   4142095 ===============
  400-500   3914680 ===============
  500-1000  15578729 ==========================================================
 1000-1500  8271949 ===============================
 1500-2000  3931232 ===============
 2000-max   6139642 =======================
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    1076593 ====
   50-60     978760 ====
   60-70     974707 ====
   70-80     974224 ====
   80-90     973552 ====
   90-100    972964 ====
  100-110    971494 ====
  110-120    968407 ====
  120-130    964963 ====
  130-140    961603 ====
  140-150    958012 ====
  150-160    954001 ====
  160-170    949739 ====
  170-180    944594 ====
  180-190    939848 ====
  190-200    934073 ===
  200-250   2999842 ===========
  250-300   2922688 ===========
  300-400   5585776 =====================
  400-500   5209364 ===================
  500-1000  20145490 ===========================================================================
 1000-1500  1193659 ====
 1500-2000        0
 2000-max         0

Sequence (shuffle) types: Counter({11: 1320460L, 10: 131140L, 1: 72577L})
-- To delete 0 invalid records: --
use rnafold;
(1524177, Counter(), Counter({1257118: 281568, 452652: 141771, 284811: 100065, 655815: 97566, 797114: 92463, 755732: 84672, 469382: 81858, 575540: 78162, 582515: 71778, 572544: 60438, 518766: 60102, 178306: 54579, 123214: 43071, 1229908: 39627, 420247: 37632, 1236689: 34524, 273075: 31038, 1619068: 23625, 1618924: 17073, 1618775: 16758, 347257: 15771, 1618662: 13293, 228908: 11256, 578462: 10833, 1618673: 9660, 5061: 6909, 1397361: 5712, 931890: 2373}))


>>> Upsert for 11th vertical-randomization test-batch

update sequence_series2_updates set ext_index=30 where source=102;

Query OK, 1524177 rows affected (59.58 sec)
Rows matched: 1524177  Changed: 1524177  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        30 |  1524177 |
+--------+-----------+----------+
1 row in set (34.21 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   3100000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 3044224 rows affected (34 min 6.45 sec)
Records: 1524177  Duplicates: 1520047  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=30 and dummy_id between        1 and  3100000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  9347438 |
|    102 |        19 |  3039645 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   338921 |
|    102 |        27 |  2177070 |
|    102 |        28 |  1811448 |
|    102 |        29 |   614103 |
|    102 |        30 |   943664 |
+--------+-----------+----------+
14 rows in set (23 min 26.54 sec)

mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39717222 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (11 min 25.65 sec)

> Hurray - all done!

> Build updated profiles

~/anaconda2/bin/python2 profile_plots.py --taxid 420247,228908,469382,797114,1236689,273075,178306,1229908,755732,518766,655815,582515,347257,1618775,1618924,1619068,1618673,1618662,572544,123214 --profile=150:10:end:0 --shuffle-types 11

~/anaconda2/bin/python2 profile_plots.py --taxid 1257118,284811,575540,452652,1397361,5061,578462,931890 --profile=990:10:end:0 --shuffle-types 11






--16--


>>> Calculate additional end-referenced profiles
Additional species
420247   R
228908   R
469382   R
797114   R
1236689  R
273075   R
178306   R
1229908  R
755732   R
518766   R
655815   R
582515   R
347257   R
1618775  R
1618924  R
1619068  R
1618673  R
1618662  R
572544   R
123214   R

Deeper (1000nt) profiles
1257118  R
284811   R
575540   R
452652   R
1397361  r(part)
5061     r(part)
578462   r(part)
931890   r(part)
45351    (delayed to next batch)
945553   (delayed to next batch)


>>> Plot comparison of begining- and end-referenced profiles
~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_*_profile_150_10_end_0_t11.h5" --highlight-species 352427,1379858,420890,1227812,452652,931890,515635,224308,1619005,224324,508771,744533,64091,289376,45670,886377,423536,167546,280699,930946,1209989,284812,1257118,498848,944289,243365,481448,511145,436907,379066,312017,352472,122586,476282,1172194,553190,561896,160490,580340,1292022,1055104,1033991,431895,358681,641309,648996,743718,45351,469383,388396,319795,1304892,633149,1177928,751945,760142,521045,926550,280463,638303,190304,596323,754035,443254,469371,564608,218497,743299,83332,1319815,491915,383372,240015,526224,945553,578458,578462,1129897,696747,1435057,642492,5061,1379270,999415,883169,661478,164328,910314,255470,3055,316407,983544


>>> Check records for upsert for 10th vertical-randomization test-batch (vertical updates only)

> Output of ~/anaconda2/bin/python2 compare_updates.py

---- Windows added -----
  min-0           0
    0-1           0
    1-5         172
    5-20      20972 =======   
   20-50     111317 ====================================
   50-100    206743 ===================================================================
  100-200    199805 =================================================================
  200-300     76282 =========================
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10       1177 ==
   10-20       1177 ==
   20-30       1172 ==
   30-40       1172 ==
   40-50       1172 ==
   50-60       1168 ==
   60-70       1163 ==
   70-80       1157 ==
   80-90       1146 ==
   90-100      1143 ==
  100-110      1142 ==
  110-120      1136 ==
  120-130      1135 ==
  130-140      1126 ==
  140-150      1119 ==
  150-160      1111 ==
  160-170      1096 ==
  170-180      1090 ==
  180-190      1081 ==
  190-200      1067 ==
  200-250      5198 ===========
  250-300      5000 ==========
  300-400      9251 ===================
  400-500      8326 =================
  500-1000    28850 ===========================================================
 1000-1500    12493 ==========================
 1500-2000     5698 ============
 2000-max         0
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50        868 ==
   50-60        983 ==
   60-70        984 ==
   70-80        985 ==
   80-90        986 ==
   90-100       988 ==
  100-110       984 ==
  110-120       981 ==
  120-130       979 ==
  130-140       977 ==
  140-150       976 ==
  150-160       976 ==
  160-170       976 ==
  170-180       969 ==
  180-190       966 ==
  190-200       960 ==
  200-250      5214 ===========
  250-300      4995 ==========
  300-400      9331 ===================
  400-500      8423 =================
  500-1000    29788 =============================================================
 1000-1500    13309 ===========================
 1500-2000     5929 ============
 2000-max      5038 ==========

-- To delete 0 invalid records: --
use rnafold;
(615291, Counter(), Counter({564608: 212868, 561896: 178101, 1304892: 89215, 122586: 41275, 358681: 34662, 1177928: 23940, 596323: 12947, 1379858: 12121, 160490: 10162}))


>>> Upsert for 10th vertical-randomization test-batch

update sequence_series2_updates set ext_index=29 where source=102;

Query OK, 615291 rows affected (21.77 sec)
Rows matched: 615291  Changed: 615291  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        29 |   615291 |
+--------+-----------+----------+
1 row in set (16.64 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   1200000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 616468 rows affected (8 min 44.63 sec)
Records: 615291  Duplicates: 1177  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=29 and dummy_id between        1 and  1200000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  9992915 |
|    102 |        19 |  3039645 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   347865 |
|    102 |        27 |  2182732 |
|    102 |        28 |  2093016 |
|    102 |        29 |   614103 |
+--------+-----------+----------+
13 rows in set (20 min 59.43 sec)

mysql> select source, count(*) from sequence_series2 group by source;

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39715242 |
|     12 |  2531182 |
+--------+----------+
4 rows in set (19 min 30.72 sec)

> Hurray - all done!



--14--
>>> Plot tree diagram with multiple profiles per species

> Setup dummy xhost (on power8)

python dummy_xdisp.py
export DISPLAY=power8.tau.ac.il:1088
xhost +

> Create the plot
export DISPLAY=power8.tau.ac.il:1088

~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5","gcdata_v2_taxid_3*_profile_150_10_begin_0.h5"


>>> Check records for upsert for 9th vertical-randomization test-batch (including 5th end-reference updates)

> Output of ~/anaconda2/bin/python2 compare_updates.py

---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10     111174
   10-20     130956
   20-30     154455
   30-40     178857 =
   40-50     202377 =
   50-60     225435 =
   60-70     245763 =
   70-80     267666 =
   80-90     289716 =
   90-100    306621 =
  100-110    324387 =
  110-120    346122 =
  120-130    355173 =
  130-140    366387 =
  140-150    382305 =
  150-160    414393 =
  160-170    420273 =
  170-180    434133 =
  180-190    428232 =
  190-200    430857 =
  200-250   2231796 ======
  250-300   2347443 =======
  300-400   4726344 ==============
  400-500   4526550 =============
  500-1000  20780341 ============================================================
 1000-1500  12740227 =====================================
 1500-2000  5910450 =================
 2000-max   10155516 =============================

---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    4766246 ==============
   50-60    4377704 =============
   60-70    4347170 =============
   70-80    4344545 =============
   80-90    4340450 =============
   90-100   4338182 ============
  100-110   4334507 ============
  110-120   4328837 ============
  120-130   4322663 ============
  130-140   4315397 ============
  140-150   4305716 ============
  150-160   4297652 ============
  160-170   4282154 ============
  170-180   4263569 ============
  180-190   4244690 ============
  190-200   4224488 ============
  200-250         0
  250-300         0
  300-400         0
  400-500         0
  500-1000        0
 1000-1500        0
 1500-2000        0
 2000-max         0


Sequence (shuffle) types: Counter({11: 4140669L, 10: 414840L, 1: 227778L})
-- To delete 0 invalid records: --
use rnafold;
(4793607, Counter(), Counter({944289: 512778, 352472: 399630, 3055: 366093, 1257118: 310716, 578458: 275730, 564608: 222600, 476282: 180810, 312017: 168567, 45351: 168378, 508771: 166257, 358681: 124509, 754035: 121275, 1172194: 98301, 319795: 93093, 243365: 92232, 1319815: 88452, 642492: 87675, 743718: 86751, 388396: 84756, 1177928: 84462, 83332: 84357, 469371: 74445, 240015: 70812, 926550: 70182, 633149: 69489, 1129897: 67620, 521045: 65142, 190304: 63147, 1055104: 56574, 696747: 45675, 883169: 44793, 122586: 43260, 515635: 36498, 160490: 35490, 760142: 35217, 930946: 30219, 379066: 27321, 224324: 25893, 1292022: 23940, 886377: 22932, 983544: 20391, 641309: 14028, 167546: 13524, 648996: 12831, 218497: 6762}))


>>> Upsert for 9th vertical-randomization test-batch (including 5th end-reference updates)

update sequence_series2_updates set ext_index=28 where source=102;

Query OK, 4793607 rows affected (2 min 44.98 sec)
Rows matched: 4793607  Changed: 4793607  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        28 |  4793607 |
+--------+-----------+----------+
1 row in set (58.57 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1917596 rows affected (17 min 40.84 sec)
Records: 961906  Duplicates: 955690  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=28 and dummy_id between        1 and  4000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |    94537 |
|    102 |        18 |  9992915 |
|    102 |        19 |  3039645 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   347865 |
|    102 |        27 |  2182732 |
|    102 |        28 |  2093018 |
+--------+-----------+----------+
12 rows in set (15 min 20.93 sec)

mysql> select source, count(*) from sequence_series2 group by source;


select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39715242 |
|     12 |  2293193 |
+--------+----------+
4 rows in set (10 min 31.53 sec)

> Hurray - all done!




--13--
>>> Update all end-referenced profiles
~/anaconda2/bin/python2 profile_plots.py --all-taxa True --profile=150:10:end:0 --shuffle-types 11 --distributed

--11--

>>> Calculate end-referenced LFE profiles
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --profile-reference end --max-num-windows 16 --species 744533,526224,431895

>>> Check records for upsert for 8th vertical-randomization test-batch (including 4th end-reference updates)

> Output of ~/anaconda2/bin/python2 compare_updates.py 


---- Windows added -----
  min-0           0
    0-1           0
    1-5      338413 ==================
    5-20    3442448 ==================================================================================================================================
====================================================
   20-50          0
   50-100         0
  100-200         0
  200-300         0
  300-400         0
  400-500         0
  500-600         0
  600-700         0
  700-800         0
  800-900         0
  900-1000        0
 1000-1500        0
 1500-max         0
---- Windows added (position relative to CDS start) -----
  min-0           0
    0-10      95754
   10-20     112199
   20-30     129000
   30-40     145382 =
   40-50     160484 =
   50-60     178040 =
   60-70     192089 =
   70-80     206891 =
   80-90     221926 =
   90-100    231539 =
  100-110    242347 =
  110-120    257803 =
  120-130    261288 =
  130-140    270134 =
  140-150    282253 =
  150-160    290483 =
  160-170    298569 =
  170-180    312347 =
  180-190    310963 =
  190-200    316106 =
  200-250   1698579 ======
  250-300   1850491 =======
  300-400   3786588 ==============
  400-500   3677425 ==============
  500-1000  17180961 ===============================================================
 1000-1500  10410008 ======================================
 1500-2000  4750756 =================
 2000-max   6457862 ========================
---- Windows added (position relative to CDS end) -----
  min-0           0
    0-10          0
   10-20          0
   20-30          0
   30-40          0
   40-50    3735180 ==============
   50-60    3420980 =============
   60-70    3398825 =============
   70-80    3398552 =============
   80-90    3396788 =============
   90-100   3396198 =============
  100-110   3393653 ============
  110-120   3389217 ============
  120-130   3383334 ============
  130-140   3376629 ============
  140-150   3368977 ============
  150-160   3361856 ============
  160-170   3348204 ============
  170-180   3333819 ============
  180-190   3320862 ============
  190-200   3305214 ============
  200-250         0
  250-300         0
  300-400         0
  400-500         0
  500-1000        0
 1000-1500        0
 1500-2000        0
 2000-max         0

Sequence (shuffle) types: Counter({11: 3319740L, 10: 281080L, 1: 180041L})

(3780861, Counter(), Counter({423536: 433230, 945553: 357210, 744533: 326991, 431895: 190260, 561896: 186984, 452652: 158823, 1033991: 136290, 469383: 124152, 436907: 112245, 284812: 107982, 280699: 104874, 661478: 101199, 931890: 93072, 1304892: 92337, 383372: 90930, 316407: 88662, 1379270: 71148, 1227812: 65814, 743299: 64932, 578462: 60942, 491915: 59409, 526224: 58884, 64091: 54642, 498848: 53109, 1209989: 53004, 481448: 51828, 751945: 51135, 596323: 47985, 164328: 46368, 1379858: 44730, 443254: 42945, 289376: 42693, 420890: 41307, 580340: 39354, 999415: 39144, 638303: 33453, 255470: 30618, 1619005: 22176}))


>>> Upsert for 8th vertical-randomization test-batch (including 4th end-reference updates)

update sequence_series2_updates set ext_index=27 where source=102;
Query OK, 3780861 rows affected (1 min 51.94 sec)
Rows matched: 3780861  Changed: 3780861  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        27 |  3780861 |
+--------+-----------+----------+
1 row in set (54.57 sec)

> Perform the upsert (only 1st group shown)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   1000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1987457 rows affected (14 min 59.51 sec)
Records: 998446  Duplicates: 989011  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=27 and dummy_id between        1 and  4000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 11277170 |
|    102 |        19 |  3920973 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100921 |
|    102 |        23 |  1063961 |
|    102 |        24 |   291520 |
|    102 |        25 |    54161 |
|    102 |        26 |   347865 |
|    102 |        27 |  2182732 |
+--------+-----------+----------+
10 rows in set (36 min 34.20 sec)

mysql> select source, count(*) from sequence_series2 group by source;


select source, count(*) from sequences2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|      1 |  2406489 |
x|     10 | 18533026 |
x|     11 | 39699902 |
x|     12 |  1688902 |
x+--------+----------+
x4 rows in set (9 min 53.57 sec)

> Hurray - all done!





>>> Upsert for 7th vertical-randomization test-batch (including 3rd end-reference updates)

update sequence_series2_updates set ext_index=26 where source=102;
Query OK, 618765 rows affected (24.11 sec)
Rows matched: 618765  Changed: 618765  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        26 |   618765 |
+--------+-----------+----------+
1 row in set (9.16 sec)

> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   650000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1189690 rows affected (16 min 15.84 sec)
Records: 618765  Duplicates: 570925  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=26 and dummy_id between        1 and  650000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12089261 |
|    102 |        19 |  5277552 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   100995 |
|    102 |        23 |  1064312 |
|    102 |        24 |   291525 |
|    102 |        25 |    54161 |
|    102 |        26 |   347865 |
+--------+-----------+----------+
9 rows in set (8 min 32.86 sec)

mysql> select source, count(*) from sequence_series2 group by source;


select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39699902 |
|     12 |  1688902 |
+--------+----------+
4 rows in set (9 min 53.57 sec)

> Hurray - all done!



--10--


>>> Plot end-reference profiles
time ~/anaconda2/bin/python2 profile_plots.py --taxid 511145 --profile=150:10:end:0 --shuffle-types 11


>>> Upsert for 6th vertical-randomization test-batch (including second end-reference updates)

update sequence_series2_updates set ext_index=25 where source=102;
Rows matched: 593067  Changed: 593067  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        25 |   593067 |
+--------+-----------+----------+
1 row in set (10.25 sec)

> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   630000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1182911 rows affected (21 min 21.38 sec)
Records: 593067  Duplicates: 589844  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=25 and dummy_id between        1 and  630000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12089261 |
|    102 |        19 |  5575206 |
|    102 |        20 |    25160 |
|    102 |        21 |    50600 |
|    102 |        22 |   101459 |
|    102 |        23 |  1066219 |
|    102 |        24 |   291525 |
|    102 |        25 |    54161 |
+--------+-----------+----------+
8 rows in set (47 min 28.92 sec)

mysql> select source, count(*) from sequence_series2 group by source;


select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39699462 |
|     12 |  1688902 |
+--------+----------+
4 rows in set (10 min 7.69 sec)

> Hurray - all done!




>>> Upsert for 5th vertical-randomization test-batch (including first end-reference updates)

update sequence_series2_updates set ext_index=24 where source=102;
Rows matched: 315119  Changed: 315119  Warnings: 0


select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        24 |   315119 |
+--------+-----------+----------+
1 row in set (3.96 sec)

> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   350000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 338618 rows affected (1 min 12.85 sec)
Records: 315119  Duplicates: 23499  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=24 and dummy_id between        1 and  350000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
x+--------+-----------+----------+
x| source | ext_index | count(*) |
x+--------+-----------+----------+
x|    102 |        18 | 12117777 |
x|    102 |        19 |  5575206 |
x|    102 |        20 |    50320 |
x|    102 |        21 |    50600 |
x|    102 |        22 |   101464 |
x|    102 |        23 |  1066219 |
x+--------+-----------+----------+
6 rows in set (13 min 23.06 sec)

mysql> select source, count(*) from sequence_series2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|    102 | 56310213 |
x+--------+----------+
1 row in set (16 min 11.25 sec)

select source, count(*) from sequences2 group by source;
x+--------+----------+
x| source | count(*) |
x+--------+----------+
x|      1 |  2406489 |
x|     10 | 18533026 |
x|     11 | 39698982 |
x|     12 |  1285842 |
x+--------+----------+
4 rows in set (8 min 26.34 sec)


> Hurray - all done!




--04--

>>> Upsert for 4th vertical-randomization test-batch

update sequence_series2_updates set ext_index=23 where source=102;
Rows matched: 1068931  Changed: 1068931  Warnings: 0


select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        23 |  1068931 |
+--------+-----------+----------+
1 row in set (13.99 sec)

> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   1200000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 1071569 rows affected (11 min 45.66 sec)
Records: 1068931  Duplicates: 2638  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates 
where source=102 and ext_index=23 and dummy_id between        1 and  1200000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12117777 |
|    102 |        19 |  5575206 |
|    102 |        20 |    50320 |
|    102 |        21 |    50600 |
|    102 |        22 |   101464 |
|    102 |        23 |  1066219 |
+--------+-----------+----------+
6 rows in set (13 min 23.06 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 56310213 |
+--------+----------+
1 row in set (16 min 11.25 sec)

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39698982 |
|     12 |  1285842 |
+--------+----------+
4 rows in set (8 min 26.34 sec)


> Hurray - all done!



--03--

>>> Upsert for 2nd vertical-randomization test-batch

update sequence_series2_updates set ext_index=21 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        21 |    50609 |
+--------+-----------+----------+
1 row in set (0.05 sec)


> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   70000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=21 and dummy_id between        1 and  250000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12117777 |
|    102 |        19 |  5575206 |
|    102 |        20 |    50320 |
|    102 |        21 |    50600 |
+--------+-----------+----------+
4 rows in set (8 min 3.02 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 55142456 |
+--------+----------+
1 row in set (16 min 50.34 sec)

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39698982 |
|     12 |   514682 |
+--------+----------+
4 rows in set (12 min 0.63 sec)

> Hurray - all done!


>>> Upsert for 3rd vertical-randomization test-batch

update sequence_series2_updates set ext_index=22 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        22 |   101464 |
+--------+-----------+----------+
1 row in set (0.09 sec)

> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   150000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

Query OK, 101464 rows affected (35.34 sec)
Records: 101464  Duplicates: 0  Warnings: 0

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=22 and dummy_id between        1 and  150000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12117777 |
|    102 |        19 |  5575206 |
|    102 |        20 |    50320 |
|    102 |        21 |    50600 |
|    102 |        22 |   101464 |
+--------+-----------+----------+
5 rows in set (33 min 20.99 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 55243920 |
+--------+----------+
1 row in set (49 min 35.00 sec)

select source, count(*) from sequences2 group by source;

> Hurray - all done!


March

--26--

>>> Position-specific randomization

> Generate vertical randomization for genome (will build local cache, but not save them to mysql db)
~/anaconda2/bin/python2 store_new_shuffles.py 553190

> Analyze ranodmization set
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --analyze-only=True
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=12  --from-shuffle 0 --to-shuffle 19 --window-step 10 --analyze-only=True

> Delete old randomization sequences (if any)
~/anaconda2/bin/python2 delete_shuffled_seqs.py --taxId 553190 --shuffle-type 11 --include-series 102,103
~/anaconda2/bin/python2 delete_shuffled_seqs.py --taxId 553190 --shuffle-type 12 --include-series 102,103

> Insert randomized sequence from local cache to mysql db
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --insert-sequences-only=True
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=12  --from-shuffle 0 --to-shuffle 19 --window-step 10 --insert-sequences-only=True

> Test randomized sequences for validity
~/anaconda2/bin/python2 test_randomized_sequences.py --species 553190 --shuffle-type 11
~/anaconda2/bin/python2 test_randomized_sequences.py --species 553190 --shuffle-type 12

> Calculate the LFE profiles
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --completion-notification=True
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=12  --from-shuffle 0 --to-shuffle 19 --window-step 10 --completion-notification=True

> Test the update records, filter invalid records
~/anaconda2/bin/python2 compare_updates.py --find-duplicates --perform-delete


> 

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=11  --from-shuffle 0 --to-shuffle 19 --window-step 10 --completion-notification=True --analyze-only=True
####
#####~/anaconda2/bin/python2 delete_shuffled_seqs.py --taxId 553190 --shuffle-type 12 --include-series 102,103

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 553190 --shuffle-type=12  --from-shuffle 0 --to-shuffle 19 --window-step 10 --insert-sequences-only=True


update sequence_series2_updates set ext_index=20 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        20 |    50320 |
+--------+-----------+----------+
1 row in set (0.05 sec)


> Perform the upsert (single group)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   250000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=20 and dummy_id between        1 and  250000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=44037525 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12117777 |
|    102 |        19 |  5575206 |
|    102 |        20 |    50320 |
+--------+-----------+----------+
3 rows in set (28.78 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 55091847 |
+--------+----------+
1 row in set (1 min 13.78 sec)

select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39698982 |
|     12 |    75142 |
+--------+----------+
4 rows in set (8 min 37.72 sec)

> Hurray - all done!


#~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=150:10:begin:0
~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=150:10:begin:0



codon_randomization_cache_type_12_taxid_64091.db

64091    LR*-x Halobacterium salinarum NRC-1
5061     LRUx  Aspergillus niger
1619005  LR*-x Candidatus Wolfebacteria bacterium GW2011_GWA2_47_9b
45670    LR*x  Salinicoccus roseus
498848   LRU-x Thermus aquaticus Y51MC23
511145   LRUx  Escherichia coli str. K-12 substr. MG1655
1227812  LRUx  Piscirickettsia salmonis LF-89 = ATCC VR-1361
164328   LRUx  Phytophthora ramorum
1435057  LR*x  Agrobacterium tumefaciens LBA4213 (Ach5)
224308   LR*#  Bacillus subtilis subsp. subtilis str. 168 
553190   LRUx  Gardnerella vaginalis 409-05                   Also re-calculated LFE profile for series 11
910314   LRUx  Dialister microaerophilus UPII 345-E
255470   LR*x  Dehalococcoides mccartyi CBDB1
578462   LRUx  Allomyces macrogynus ATCC 38327  LRU


561896   LR
564608   LR
122586   LR
1304892  LR
1177928  LR
160490   LR
358681   LR
1379858  LR
596323   LR







4781         (Plasmopara halstedii) <NNN>

--19--

>>> 

>>> CDS does not end in stop-codon
> Cause 1: genomes in which practically all CDS boundaries exclude the stop-codon:
Magnaporthe oryzae
Cyanidioschyzon merolae

> Cause 2: genomes in which the annotation usually includes the stop-codon within the CDS
This seems to occur with for no reason - many of the genes in question have a stop-codon immediately following the last annotated codon, but in some cases it is excluded from the CDS annotation.


>>> CDS does not start in methionine
> e.g., Moniliophthora perniciosa FA553:



--06--

for i in `seq 71 3 158`; do ls tree_phenotypes_regression.out.dLFE.by.taxgroups.$i.pdf; done | xargs pdfnup --nup 3x4 --no-landscape -o genomicgc.nup.pdf

> Combine pdf documents
pdfnup -o all.combined.pdf --nup 1x1 --no-landscape Michael\ Peeri\ -\ Safra\ progress\ report\ 2018\ draft\ 03.pdf alltaxa.taxonomic.pdf Michael\ Peeri\ -\ Safra\ progress\ report\ 2018\ -\ Figure\ S11\ heading.pdf genomicgc.nup.pdf temp.nup.pdf oxygen.nup.pdf salinity.nup.pdf habitat.nup.pdf

> Note - pdfnup caused an error when combining alltaxa.taxonomic.pdf, so I ended up using PDFshuffler...

--05--

Splitting a large PDF figure into multiple pages:
1) Open in scribus
2) Scale the page
3) Add additional pages
4) Remove the margin between pages


February

--28--
Top 10 (0-10nt) - (208964, 267608, 1208660, 443906, 633149, 243230, 861299, 1182568, 452637, 1142394)
Bottom 10 (0-10nt) - (484906, 431895, 1041607, 4927, 4781, 436907, 412133, 228908, 436308, 1229908)
Top 10 (100-300nt) - (296543, 420778, 3055, 1397361, 214684, 578458, 578462, 3067, 336722, 1047168)
Bottom 10 (100-300nt) - (498848, 751945, 525903, 284811, 300852, 1266844, 1208660, 500635, 190485, 1033802)

time ~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=1 --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.95 --profile-scale=0.9 --font-size=6 --highlight-species=484906,431895,1041607,4927,4781,436907,412133,228908,436308,1229908,296543,420778,3055,1397361,214684,578458,578462,3067,336722,1047168

--26--

> Disable authorization for current X server (allow anyone to connect)
xhost + 

>
U+1D6AB Mathmetical bold capital delta
U+00394 Greek capital delta
u"\u0394"

--25--

> Limit number of threads used by BLAS (to prevent automatic parallelization of sklearn):
export OPENBLAS_NUM_THREADS=1

--19--
>>> Notes for ISMBE2018 poster

Background:
secondary structures in mRNA coding sections are tigheter or looser (at different regions) compared to what is expected by chance (taking into account the translation, nucleotide and codon composition). This excess structure depends on an arrangement of synonymous codons that creates more or less medium-range pairing than expected by random, and can be estimated using randomization experiments that control for those aspects.

Below "forces" diagram: The randomizations used here estimate the effect of dLFE (and control for GC% and CUB)

Our objectives are:
1) Describe the diversity of dLFE profiles
2) Test hypotheses regarging the mechanism generating these observations - is the observed dLFE the result of selection, and if so, for what factors?

Statistical methods
GLS (Generalized least-squares) regression controls for covariance caused by evolutionary relatedness and allows comparison of different evolutionary background models (e.g., BM, OU) and quantification of the explanatory power of other factors


Below "Pyramid"
Genomic GC is positively- and negatively-correlated with dLFE in different regions (tree-controlled coeffiecient of determination (R^2) at different CDS regions for all species (N=xxx))
- This cannot be trivially explained


Evidence for selection
1) dLFE exists in almost all species
2) the dLFE profile is conserved (although its components are not)
3) Interaction with GC%
4) Interactions with temp


Why is this important?
Understand mRNA secondary structure among the other factors affecting the translation process of native genes
Secondary structure can be engineered to affect desired outcome on tranlation of modified or heterologic genes


--11--

>> plot partial tree, with PCA
> PCA plot for Euryarchaeota
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=28890 --include-all-species --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend                          --profiles-Y-offset-workaround=0.45

> PCA plot for Fungi
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=4751 --include-all-species --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.4

> PCA plot for Deinococcus-Thermus 
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=1297 --include-all-species --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.2

> PCA plot for Gammaproteobacteria
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=1236 --include-all-species --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.76

> PCA plot for Bacteria
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=2 --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=1.65 --profile-scale=0.6 --font-size=3

> PCA plot for all species
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=1 --use-phylosignal-data=phylosignalLipaOutputFile.csv --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.95 --profile-scale=0.9 --font-size=6

> Include all species, create highlighting frames layer for outliers
~/anaconda2/bin/python2 taxonomy.py --use-tree=hug --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5" --limit-taxonomy=1 --hide-legend --hide-environmental-vars --profiles-Y-offset-workaround=0.95 --profile-scale=0.9 --font-size=6 --highlight-species=484906,431895,1041607,4927,4781,436907,412133,228908,436308,1229908,296543,420778,3055,1397361,214684,578458,578462,3067,336722,1047168


~/anaconda2/bin/python2 ~/rnafold/compose_figures.py ~/rnafold/figures/Outliers/figure.json


January

--19--

> Compose multi-panel figures
~/anaconda2/bin/python2 ~/rnafold/compose_figures.py ~/rnafold/figures/Profile\ diversity/figure.json
~/anaconda2/bin/python2 ~/rnafold/compose_figures.py ~/rnafold/figures/GenomicGC\ pyramid\ and\ controls/figure.json

--09--

> Plot profiles on collapsed taxonomic tree (with similar profiles merged using K-means clustering):
~/anaconda2/bin/python2 taxonomy.py --use-tree=taxonomic-collapsed --use-profile-data "gcdata_v2_taxid_*_profile_1000_10_begin_0.h5"


--02--

> Combine pyramid plots for manual inspection
pdfnup --nup 3x3 --landscape -o nup.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.?.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.??.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.???.pdf




-------------------------------------------------------------------------------------------------------
2017

December

--03--

Current sci-hub:
http://sci-hub.tw

Pseudo R2 notes:
https://www.stata.com/support/faqs/statistics/pseudo-r2/
https://stats.idre.ucla.edu/other/mult-pkg/faq/general/faq-what-are-pseudo-r-squareds/
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2587505/pdf/nihms66636.pdf


November

--13--

> Perform 
~/anaconda2/bin/python2 create_taxid_kingdom_table.py
~/anaconda2/bin/R --no-save -f tree_traits_effects_analysis_with_taxgroups.r
~/anaconda2/bin/python2 plot_tree_effects_anaylsis_results_on_tree.py

pdfnup --nup 3x3 --landscape -o nup.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.?.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.??.pdf tree_phenotypes_regression.out.dLFE.by.taxgroups.???.pdf

--09--

> RDP command-line

rdesktop -z -P -r sound:off -x m -a 8 212.235.28.220:33031 -x 0x80 -f  -u michael -p -

xfreerdp /u:michael /p:password /v:212.235.28.220:33031 /f +smart-sizing +compression

full-screen: alt+ctrl+enter


September

--23--

--------------------------------------

#~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name="" --variant=NCBI --fetch-ftp-files=False --gff3=X  --cds=X

#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/143/455/GCF_000143455.1_v1.0/
#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/143/455/GCF_000143455.1_v1.0/GCF_000143455.1_v1.0_cds_from_genomic.fna.gz
#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/143/455/GCF_000143455.1_v1.0/GCF_000143455.1_v1.0_genomic.gff.gz


~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=3068 --full-name="Volvox carteri f. nagariensis" --short-name="Vcar.nag" --variant=NCBI --fetch-ftp-files=False --gff3=./data/NCBI/Vcarteri_f_nagariensis/GCF_000143455.1_v1.0_genomic.gff.gz  --cds=./data/NCBI/Vcarteri_f_nagariensis/GCF_000143455.1_v1.0_cds_from_genomic.fna.gz



--18--

>>> Upsert for group 19

> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.


> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

# None found; updates by genome (5575206 rows total after deleting bad ones):

expected=frozenset()

actual=
5575206, Counter(), Counter({412030: 606480, 412133: 591465, 45351: 509019, 423536: 433230, 486041: 381612, 945553: 357210, 578462: 349818, 930990: 344211, 744533: 326991, 944289: 304479, 578458: 276591, 554373: 204708, 645134: 197841, 561896: 186984, 595528: 180999, 508771: 166257, 353154: 79632, 484906: 77679}))

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-211 -D rnafold -P 14404

> Split into 10 groups of ~600000 rows each

% group  1/10
% dummy_id between        1 and   600000
% group  2/10
% dummy_id between   600001 and  1200000
% group  3/10
% dummy_id between  1200001 and  1800000
% group  4/10
% dummy_id between  1800001 and  2400000
% group  5/10
% dummy_id between  2400001 and  3000000
% group  6/10
% dummy_id between  3000001 and  3600000
% group  7/10
% dummy_id between  3600001 and  4200000
% group  8/10
% dummy_id between  4200001 and  4800000
% group  9/10
% dummy_id between  4800001 and  5400000
% group 10/10
% dummy_id between  5400001 and  6000000

> Note: We will mark all updates included here as ext_index=19

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=19 where source=102;
Rows matched: 5575206  Changed: 5575206  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        19 |  5575206 |
+--------+-----------+----------+
1 row in set (1 min 16.24 sec)

> Perform the upsert, for group 1/10 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   600000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=19 and dummy_id between        1 and  6000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=30595218 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        14 |  1858880 |
|    102 |        15 |  2602488 |
|    102 |        16 |  3036537 |
|    102 |        17 |  5800242 |
|    102 |        18 | 12117777 |
|    102 |        19 |  5575206 |
+--------+-----------+----------+
6 rows in set (23 min 55.28 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 55041527 |
+--------+----------+
1 row in set (5 min 28.60 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2406489 |
|     10 | 18533026 |
|     11 | 39624974 |
+--------+----------+
3 rows in set (12 min 6.24 sec)

> Hurray - all done!


>>> Plotting

~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=150:10:begin:0

Total results: 515
Succeeded: 504
Failed: 11 ([272632, 508771, 158189, 1307761, 3218, 138677, 753081, 556484, 456481, 436017, 505682])

~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=600:10:begin:150

Total results: 515
Succeeded: 504
Failed: 11 ([272632, 508771, 158189, 1307761, 3218, 138677, 753081, 556484, 456481, 436017, 505682])

~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=1000:10:begin:0

xTotal results: 494
xSucceeded: 487
xFailed: 7 ([272632, 436017, 3218, 138677, 753081, 556484, 505682])

~/anaconda2/bin/python2 annotate_paired_fraction.py

~/anaconda2/bin/python2 plot_xy.py gcdata_v2_taxid_*_profile_600_10_begin_150.h5



--10--

353154,423536,484906,412030,508771,744533,412133
  3.8   23.2   3.7    39.4   7.9    15.7   58.8

595528,645134,554373,578462,578458,945553
 10.1    9.4   12.7   19.4   13.2   17.1 

--------------------------------------

+++++++++++++        ++
930990,561896,486041,944289
 16.5    9     18.1   14.6




batch 1 (1/2s, expected 4h, 28.2k CDSs):
412133
58.8/2

batch 2 (3s, expected 4h, 28.1k CDSs):
423536,353154,484906
 23.2   3.8    3.7

batch 3 (1s, expected 4h (but will not complete in this time ), 39.4k! CDSs):   <-- done (73%)
412030
 39.4

batch 4 (2s, expected 4h, 29.6k CDSs)  <-- only 83% done...
578462,595528
 19.4   10.1

batch 5 (2s, expected 3h, 23.5k CDSs):  <-- done
508771,744533
  7.9   15.7

batch 6 (2s, expected 3h, 22.6k CDSs)  <-- done
645134,578458
  9.4   13.2

batch 7 (1s, 2h30m, 17.0k CDSs) <-- done
945553
 17.1

batch 8 (1s, 1h30m, 9.7k CDSs) <-- done
554373
 12.7

------------------------------------------

batch 9 (1s, est. 2h, 14.5k CDSs)   <-- done
944289
 14.6

batch 10 (2s, est. 4h)     <-- done
930990,561896
 16.5    9   


batch 11 (1s, estimated 3h, 18.2k CDSs)     **IP**
486041   
 18.1 
 3h   


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tannulata  --remote-name="theileria_annulata" --section="protists" --subsection="protists_alveolata1_collection" --nuclear-genetic-code=1 --taxid=353154 --full-name="Theileria annulata strain Ankara" --short-name="Tann"

Loaded 3794 CDS genes...
Skipped genes: ['CAI73409']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Perkinsus.marinus  --remote-name="perkinsus_marinus_atcc_50983" --section="protists" --subsection="protists_alveolata1_collection" --nuclear-genetic-code=1 --taxid=423536 --full-name="Perkinsus marinus ATCC 50983" --short-name="Permar"

Warning: 468 entries skipped and 0 entries not found
Processed 23186 CDS entries
(out of 23186 CDS entries for this species)
Loaded 23186 CDS genes...
Skipped genes: ['EER18668', 'EER10260', 'EEQ98107', 'EEQ98111', 'EEQ98116', ....

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bbovis   --remote-name="babesia_bovis" --section="protists" --subsection="protists_alveolata1_collection" --nuclear-genetic-code=1 --taxid=484906 --full-name="Babesia bovis T2Bo" --short-name="Bbov"

Warning: 1 entries skipped and 0 entries not found
Loaded 3702 CDS genes...
Skipped genes: ['EDO05170']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/paramecium_tetraurelia/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ptetraurelia  --remote-name="paramecium_tetraurelia" --section="protists" --subsection="" --nuclear-genetic-code=6 --taxid=412030 --full-name="Paramecium tetraurelia strain d4-2" --short-name="Ptet"

Warning: 205 entries skipped and 0 entries not found
Processed 39437 CDS entries
(out of 39437 CDS entries for this species)
Loaded 39437 CDS genes...
Skipped genes: ['CAK82807', 'CAK65828', 'CAK70476', 'CAK70478',

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/toxoplasma_gondii/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tgondii   --remote-name="toxoplasma_gondii" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=508771 --full-name="Toxoplasma gondii ME49" --short-name="Tgon"

Warning: 64 entries skipped and 0 entries not found
Processed 7924 CDS entries
(out of 7924 CDS entries for this species)
Loaded 7924 CDS genes...
Skipped genes: ['TGME49_000900', 'TGME49_001270', 'TGME49_004160', 'TGME49_005770', 'TGME49_006180', 'TGME49_008090', 'TGME49_008860', 'TGME49_009300', 'TGME49_011920', 'TGME49_018080', 'TGME49_030230', 'TGME49_031240', 'TGME49_034700', 'TGME49_034810', 'TGME49_037290', 'TGME49_038640', 'TGME49_039140', 'TGME49_039950', 'TGME49_043000', 'TGME49_045020', 'TGME49_045230', 'TGME49_045880', 'TGME49_047990', 'TGME49_049040', 'TGME49_051280', 'TGME49_052520', 'TGME49_052750', 'TGME49_055750', 'TGME49_056440', 'TGME49_056650', 'TGME49_059300', 'TGME49_059410', 'TGME49_060880', 'TGME49_061810', 'TGME49_064480', 'TGME49_065660', 'TGME49_065870', 'TGME49_066490', 'TGME49_070400', 'TGME49_071490', 'TGME49_076340', 'TGME49_077100', 'TGME49_081050', 'TGME49_081670', 'TGME49_082440', 'TGME49_083240', 'TGME49_084200', 'TGME49_084420', 'TGME49_084810', 'TGME49_085040', 'TGME49_086300', 'TGME49_087050', 'TGME49_087840', 'TGME49_088070', 'TGME49_090350', 'TGME49_098160', 'TGME49_105340', 'TGME49_107050', 'TGME49_108380', 'TGME49_108600', 'TGME49_108710', 'TGME49_114110', 'TGME49_120300', 'TGME49_120770']


--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-37/fasta/protists_heterolobosea1_collection/naegleria_gruberi/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ngruberi   --remote-name="naegleria_gruberi" --section="protists" --subsection="protists_heterolobosea1_collection" --nuclear-genetic-code=1 --taxid=744533 --full-name="Naegleria gruberi strain NEG-M" --short-name="Ngru"

Warning: 29 entries skipped and 0 entries not found
Processed 15682 CDS entries
(out of 15682 CDS entries for this species)
Loaded 15682 CDS genes...
Skipped genes: ['EFC35885', 'EFC36047', 'EFC35815', 'EFC39114', 'EFC38401', 'EFC37281', 'EFC35707', 'EFC47281', 'EFC43333', 'EFC35676', 'EFC40559', 'EFC45430', 'EFC36195', 'EFC35361', 'EFC35661', 'EFC35377', 'EFC43750', 'EFC37620', 'EFC35601', 'EFC39308', 'EFC35484', 'EFC41355', 'EFC35436', 'EFC39592', 'EFC35186', 'EFC39520', 'EFC36030', 'EFC35338', 'EFC35276']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-37/fasta/protists_parabasalia1_collection/trichomonas_vaginalis_g3/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tvaginalis   --remote-name="trichomonas_vaginalis_g3" --section="protists" --subsection="protists_parabasalia1_collection" --nuclear-genetic-code=1 --taxid=412133 --full-name="Trichomonas vaginalis G3" --short-name="Tvag"

Warning: 880 entries skipped and 0 entries not found
Processed 58801 CDS entries
(out of 58801 CDS entries for this species)
Loaded 58801 CDS genes...
Skipped genes: ['EAX97745', 'EAX86737', 'EAX89816', 'EAY01504', 'EAX89174', 'EAY14960', ...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/bacteria/release-37/fasta/bacteria_14_collection/leptospira_biflexa_serovar_patoc_strain_patoc_1_paris_/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lbiflexa  --remote-name="leptospira_biflexa_serovar_patoc_strain_patoc_1_paris_"  --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=456481 --full-name="Leptospira biflexa serovar Patoc strain 'Patoc 1 (Paris)'" --short-name="Lbif"

# Loading problem - new code selected wrong gff3 file!!!!

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/bacteria/release-37/fasta/bacteria_11_collection/borreliella_bavariensis_pbi/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bbavariensis  --remote-name="borreliella_bavariensis_pbi" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=290434 --full-name="Borreliella bavariensis PBi" --short-name="Bbav"


--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-37/fasta/protists_ichthyosporea1_collection/capsaspora_owczarzaki_atcc_30864/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cowczarzaki  --remote-name="capsaspora_owczarzaki_atcc_30864" --section="protists" --subsection="protists_ichthyosporea1_collection" --nuclear-genetic-code=1 --taxid=595528 --full-name="Capsaspora owczarzaki ATCC 30864" --short-name="Cowc"

Loaded 10123 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_chytridiomycota1_collection/spizellomyces_punctatus_daom_br117/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Spunctatus   --remote-name="spizellomyces_punctatus_daom_br117" --section="fungi" --subsection="fungi_chytridiomycota1_collection" --nuclear-genetic-code=1 --taxid=645134 --full-name="Spizellomyces punctatus DAOM BR117" --short-name="Spun"

Loaded 9422 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_chytridiomycota1_collection/batrachochytrium_dendrobatidis_jel423/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bdendrobatidis   --remote-name="batrachochytrium_dendrobatidis_jel423" --section="fungi" --subsection="fungi_chytridiomycota1_collection" --nuclear-genetic-code=1 --taxid=403673 --full-name="Batrachochytrium dendrobatidis JEL423" --short-name="Bden"

Empty gff3...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/moniliophthora_perniciosa_fa553/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mperniciosa  --remote-name="moniliophthora_perniciosa_fa553" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=554373 --full-name="Moniliophthora perniciosa FA553" --short-name="Mper"

Warning: 838 entries skipped and 0 entries not found
Loaded 12721 CDS genes...
Skipped genes: ['EEB92224', 'EEB99389', 'EEB96282', 'EEB88974', 'EEB91232', 

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_blastocladiomycota1_collection/allomyces_macrogynus_atcc_38327/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Amacrogynus   --remote-name="allomyces_macrogynus_atcc_38327" --section="fungi" --subsection="fungi_blastocladiomycota1_collection" --nuclear-genetic-code=1 --taxid=578462 --full-name="Allomyces macrogynus ATCC 38327" --short-name="Amac"

Loaded 19447 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/schizophyllum_commune_h4_8/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Scommune   --remote-name="schizophyllum_commune_h4_8" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=578458 --full-name="Schizophyllum commune H4-8" --short-name="Scom"

Loaded 13194 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/hypholoma_sublateritium_fd_334_ss_4/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hsublateritium  --remote-name="hypholoma_sublateritium_fd_334_ss_4" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=945553 --full-name="Hypholoma sublateritium FD-334 SS-4" --short-name="Hsub"

Warning: 667 entries skipped and 0 entries not found
Loaded 17104 CDS genes...
Skipped genes: ['KJA16505', 'KJA16506', 'KJA20686', 'KJA12744', 'KJA12632',  ...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/botryobasidium_botryosum_fd_172_ss1/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bbotryosum   --remote-name="botryobasidium_botryosum_fd_172_ss1" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=930990 --full-name="Botryobasidium botryosum FD-172 SS1" --short-name="Bbot"

Warning: 3 entries skipped and 0 entries not found
Loaded 16499 CDS genes...
Skipped genes: ['KDQ10939', 'KDQ06123', 'KDQ07560']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/postia_placenta_mad_698_r/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pplacenta  --remote-name="postia_placenta_mad_698_r" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=561896 --full-name="Postia placenta Mad-698-R" --short-name="Ppla"

Warning: 62 entries skipped and 0 entries not found
Processed 9021 CDS entries
Skipped genes: ['EED80604', 'EED77759', 'EED77068', 'EED77824', 'EED80192', ...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/laccaria_bicolor_s238n_h82/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lbicolor  --remote-name="laccaria_bicolor_s238n_h82" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=486041 --full-name="Laccaria bicolor S238N-H82" --short-name="Lbic"

Warning: 43 entries skipped and 0 entries not found
Loaded 18172 CDS genes...
Skipped genes: ['EDR04483', 'EDR11388', 'EDR12055', 'EDR07495', 'EDR07403', 'EDR07424', 'EDR07615', 'EDR10557', 'EDQ98434', 'EDR05611', 'EDR05733', 'EDQ98038', 'EDR07070', 'EDR00107', 'EDQ98831', 'EDQ98166', 'EDQ97988', 'EDR13046', 'EDR00994', 'EDR02097', 'EDR00573', 'EDQ98212', 'EDQ98360', 'EDR00298', 'EDR14145', 'EDR14767', 'EDR07188', 'EDR03430', 'EDR05439', 'EDQ98945', 'EDQ98683', 'EDQ97996', 'EDQ99737', 'EDR02975', 'EDQ98263', 'EDQ98334', 'EDQ99512', 'EDR08845', 'EDQ98465', 'EDR10137', 'EDQ98133', 'EDR09270', 'EDQ98403']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-37/fasta/fungi_basidiomycota1_collection/gymnopus_luxurians_fd_317_m1/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gluxurians  --remote-name="gymnopus_luxurians_fd_317_m1" --section="fungi" --subsection="fungi_basidiomycota1_collection" --nuclear-genetic-code=1 --taxid=944289 --full-name="Gymnopus luxurians FD-317 M1" --short-name="Glux"

Warning: 1 entries skipped and 0 entries not found
Loaded 14603 CDS genes...
Skipped genes: ['KIK49829']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/bacteria/release-37/fasta/bacteria_22_collection/sphaerochaeta_globosa_str_buddy/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sglobosa   --remote-name="sphaerochaeta_globosa_str_buddy" --section="bacteria" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=158189 --full-name="Sphaerochaeta globosa str. Buddy" --short-name="Sglo"

Loaded 3017 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/metazoa/release-37/fasta/nematostella_vectensis/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nvectensis  --remote-name="nematostella_vectensis" --section="metazoa" --subsection="" --nuclear-genetic-code=1 --taxid=45351 --full-name="Nematostella vectensis" --short-name="Nvec"

Warning: 118 entries skipped and 0 entries not found
Loaded 24662 CDS genes...
Skipped genes: ['EDO27614', 'EDO41270', 'EDO43879', 'EDO33980', 'EDO27009', 'EDO42394', 'EDO43282', 'EDO27020', 'EDO28236', ...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Spacifica  --remote-name="salinispira_pacifica" --section="bacteria" --subsection="bacteria_42_collection" --nuclear-genetic-code=1 --taxid=1307761 --full-name="Salinispira pacifica" --short-name="Spac"

Loaded 3397 CDS genes...

--------------------------------------

#~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name="" --variant=NCBI --fetch-ftp-files=False --gff3=X  --cds=X

#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/310/025/GCA_000310025.1_ASM31002v1/
#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/310/025/GCA_000310025.1_ASM31002v1/GCA_000310025.1_ASM31002v1_cds_from_genomic.fna.gz
#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/310/025/GCA_000310025.1_ASM31002v1/GCA_000310025.1_ASM31002v1_genomic.gff.gz
#ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/310/025/GCA_000310025.1_ASM31002v1/README.txt
#

~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=2880 --full-name="Ectocarpus siliculosus" --short-name="Esil" --variant=NCBI --fetch-ftp-files=False --gff3=./data/NCBI/Esiliculosus/GCA_000310025.1_ASM31002v1_genomic.gff.gz --cds=./data/NCBI/Esiliculosus/GCA_000310025.1_ASM31002v1_cds_from_genomic.fna.gz

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX  --remote-name="" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name=""





--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX  --remote-name="" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name=""


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX  --remote-name="" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name=""


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX  --remote-name="" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=X --full-name="" --short-name=""




--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"

>>> Load new genomes


--07--

>>> Upsert for group 18

> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.


> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

# None found; updates by genome (12117777 rows total after deleting bad ones):

expected=frozenset((1439331,911008,1006000,1177931,1028800,1033991,156889,1002672,314260,573065,314225,373903,574087,358681,543302,1157490,457570,1209989,1009370,500635,1177928,1321371,381306,1619079,235909,1408204,795359,525904,525909,633147,526224,1618405,1618595,1618775,1619005,1618331,1618369,1619068,1618643,1619029,1619051,1618671,1618609,1618380,1618443,926562,945713,641526,216432,946077,517417,517418,218497,765952,316407,335284,243233,1033802,1227812,187272,476282,402881,290633,155920,1514904,1266844,391165,419610,1208920,760142,866895,360911,930946,203123,525919,910314,661478,880073,255470,469383,351607,742818,553190,883169,1266370,478009,469382,797210,797114,926571,694429,644295,410358,1201294,867904,28892,374847,1618729,1618777,1618742,1618821,1618924,1618840,1618841,1618673,1618662,1618623,391603,755732,331104,1347342,49280,746697,435906,655815,592029,1189619,398720,979,886377,313596,521097,555500,926559,518766,929556,167546,316279,582515,651182,555779,762983,1236703,903503,1208320,1055104,393595,314278,768671,555778,767434,1172194,365046,768706,477974,585394,592010,999415,1033810,322098,441768,1441628,1429438,1429439,931890,1198115,1502293,521011,263358,405948,469371,196162,266940,100226,269800,743718,548479,446470,479433,312017,885318,1257118,1189621,861299,886293,575540,521674,331113,243090,1142394,691883,1313172))

actual=
(12117777, Counter(), Counter({312017: 506688, 1257118: 298179, 479433: 186501, 476282: 181566, 1429439: 173523, 1429438: 170814, 100226: 170226, 243090: 153825, 886293: 152208, 405948: 150423, 1033991: 136038, 446470: 133686, 691883: 132426, 1028800: 129423, 861299: 128079, 885318: 125916, 263358: 125538, 358681: 124614, 469383: 123942, 768706: 109872, 768671: 102753, 196162: 102627, 661478: 101199, 419610: 101178, 1172194: 98280, 266940: 97713, 655815: 96957, 911008: 96432, 1006000: 95781, 1439331: 94731, 1157490: 93114, 931890: 93072, 797114: 92148, 651182: 91854, 929556: 90342, 1313172: 90069, 521674: 89418, 316407: 88662, 797210: 88263, 1009370: 88137, 866895: 86247, 1177928: 84714, 755732: 84609, 641526: 84000, 469382: 81690, 365046: 80934, 926559: 80808, 573065: 78981, 880073: 78666, 575540: 78162, 156889: 78015, 398720: 78015, 555779: 76860, 49280: 76734, 402881: 76335, 592029: 75873, 1347342: 74886, 469371: 74235, 235909: 74151, 1033802: 73815, 926562: 73185, 314278: 73122, 886377: 71988, 391603: 71988, 582515: 71631, 1208320: 70728, 585394: 70371, 1142394: 68943, 313596: 66969, 945713: 66927, 979: 66528, 1514904: 66003, 746697: 65856, 1227812: 65667, 269800: 65247, 926571: 65058, 767434: 65016, 555500: 64659, 1189621: 63714, 1033810: 63357, 360911: 63315, 543302: 63105, 314225: 63000, 243233: 62139, 1266370: 61887, 435906: 61572, 457570: 60942, 1189619: 60795, 743718: 60186, 1266844: 60165, 187272: 60123, 518766: 60060, 525904: 59472, 526224: 58779, 1408204: 58128, 393595: 57855, 517418: 56889, 1055104: 56784, 478009: 56721, 216432: 56616, 946077: 56427, 314260: 56196, 290633: 55902, 521011: 55650, 155920: 55146, 1201294: 54138, 867904: 53634, 765952: 53424, 500635: 53340, 1209989: 53004, 335284: 52731, 331113: 51786, 391165: 51135, 28892: 50799, 381306: 50442, 555778: 49434, 373903: 49161, 316279: 48342, 574087: 47838, 1441628: 47460, 644295: 47271, 521097: 45444, 477974: 45297, 351607: 45276, 762983: 45087, 517417: 42882, 1177931: 42441, 694429: 41307, 525909: 41223, 592010: 40803, 167546: 39711, 999415: 39039, 548479: 38598, 525919: 37821, 742818: 37632, 410358: 36498, 633147: 36414, 1618443: 35364, 203123: 35217, 760142: 35175, 1502293: 35007, 374847: 33642, 795359: 33453, 255470: 30576, 883169: 30324, 1002672: 30303, 930946: 30219, 441768: 28875, 910314: 27258, 553190: 26418, 1321371: 25578, 1619051: 23940, 1619068: 23604, 1619005: 22113, 1618405: 21273, 1618671: 20265, 218497: 19572, 1618331: 19047, 1619079: 18480, 1236703: 17934, 1618840: 17724, 1618924: 17073, 1618775: 16695, 1618643: 16548, 1618742: 16443, 1618595: 16317, 1618841: 15813, 1618380: 15393, 1208920: 14574, 322098: 14343, 1618369: 13923, 1619029: 13440, 1618662: 13230, 1198115: 12705, 1618729: 12390, 331104: 12348, 1618609: 12264, 1618821: 12264, 1618623: 12222, 1618777: 12138, 1618673: 9618, 903503: 8505}))


> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 16 groups of ~800000 rows each

% group  1/16
% dummy_id between        1 and   800000
% group  2/16
% dummy_id between   800001 and  1600000
% group  3/16
% dummy_id between  1600001 and  2400000
% group  4/16
% dummy_id between  2400001 and  3200000
% group  5/16
% dummy_id between  3200001 and  4000000
% group  6/16
% dummy_id between  4000001 and  4800000
% group  7/16
% dummy_id between  4800001 and  5600000
% group  8/16
% dummy_id between  5600001 and  6400000
% group  9/16
% dummy_id between  6400001 and  7200000
% group 10/16
% dummy_id between  7200001 and  8000000
% group 11/16
% dummy_id between  8000001 and  8800000
% group 12/16
% dummy_id between  8800001 and  9600000
% group 13/16
% dummy_id between  9600001 and 10400000
% group 14/16
% dummy_id between 10400001 and 11200000
% group 15/16
% dummy_id between 11200001 and 12000000
% group 16/16
% dummy_id between 12000001 and 12423097

> Note: We will mark all updates included here as ext_index=18

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=18 where source=102;
Rows matched: 12117777  Changed: 12117777  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        18 | 12117777 |
+--------+-----------+----------+
1 row in set (2 min 18.63 sec)

> Perform the upsert, for group 1/16 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between        1 and   800000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between        1 and  2000000;
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between  2000001 and  4000000;
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between  4000001 and  6000000;
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between  6000001 and  8000000;
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between  8000001 and 10000000;
delete from sequence_series2_updates
where source=102 and ext_index=18 and dummy_id between 10000001 and 12423097;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:

select source, ext_index, count(*) from sequence_series2 where sequence_id>=30595218 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        14 |  1858880 |
|    102 |        15 |  2602488 |
|    102 |        16 |  3036537 |
|    102 |        17 |  5800242 |
|    102 |        18 | 12117777 |
+--------+-----------+----------+
5 rows in set (47.70 sec)


mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 49466321 |
+--------+----------+
1 row in set (1 min 15.34 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  2079900 |
|     10 | 18533026 |
|     11 | 33415741 |
+--------+----------+
3 rows in set (10 min 35.71 sec)

> Hurray - all done!


>>> Plotting

~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=150:10:begin:0

Total results: 494
Succeeded: 487
Failed: 7 ([272632, 436017, 3218, 138677, 753081, 556484, 505682])


~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=600:10:begin:150

Total results: 494
Succeeded: 486
Failed: 8 ([272632, 436017, 3218, 138677, 753081, 556484, 505682, 280463])


~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed --profile=1000:10:begin:0

Total results: 494
Succeeded: 487
Failed: 7 ([272632, 436017, 3218, 138677, 753081, 556484, 505682])

~/anaconda2/bin/python2 annotate_paired_fraction.py

~/anaconda2/bin/python2 plot_xy.py gcdata_v2_taxid_*_profile_600_10_begin_150.h5




--03--

>>> Attempting AWS glacier backup

~/anaconda2/bin/glacier upload --region us-east-1 rnafold-backup-mysql code_snapshot.tar.gz

(getting access denied...)


--01--

>>> Starting rnafold runs on 129 genomes (!)

Expected:

1439331,911008,1006000,1177931,1028800,1033991,156889,1002672,314260,573065,314225,
373903,574087,358681,543302,1157490,457570,1209989,1009370,500635,1177928,1321371,
381306,1619079,235909,1408204,795359,525904,525909,633147,526224,1618405,1618595,
1618775,1619005,1618331,1618369,1619068,1618643,1619029,1619051,1618671,1618609,
1618380,1618443,926562,945713,641526,216432,946077,517417,517418,218497,765952,
316407,335284,243233,1033802,1227812,187272,476282,402881,290633,155920,1514904,
1266844,391165,419610,1208920,760142,866895,360911,930946,203123,525919,910314,
661478,880073,255470,469383,351607,742818,553190,883169,1266370,478009,469382,
797210,797114,926571,694429,644295,410358,1201294,867904,28892,374847,1618729,
1618777,1618742,1618821,1618924,1618840,1618841,1618673,1618662,1618623,391603,
755732,331104,1347342,49280,746697,435906,655815,592029,1189619,398720,979,886377,
313596,521097,555500,926559,518766,929556,167546,316279,582515
------------------------------------------------------
651182,555779,762983,1236703,903503,1208320,1055104,393595,314278
768671,555778,767434,1172194,365046,768706,477974,585394
592010,999415,1033810,322098,441768,1441628,1429438,1429439
931890,1198115,1502293,521011
------------------------------------------------------
263358,405948,469371,196162,266940,100226,269800,743718,548479,446470,479433  
312017,885318,1257118,1189621,1313172,861299
886293,575540,521674,331113,243090,1142394,691883



batch 1 (4s, expected 2h, 12.5k CDSs):
316407,335284,373903,661478   <-- Not done, repeated below...
4.2     2.5    2.3   4.8

batch 2 (14s, expected 4h, 32.5k CDSs):
880073,1408204,795359,255470,525904,525909,883169,1266370,526224,478009,694429,644295,374847,28892
3.8    2.9      1.6   1.5     2.8     2     1.5      3     2.8    2.7    2.0    2.3    1.6    2.4

batch 3 (13s, expected 4h, 32.7k CDSs)
290633,155920,1439331,573065,760142,1619079,235909,910314,500635,1157490,391603,1619029,1618380
2.7     2.7     4.5    3.8    1.7     0.9    3.5    1.3     1.3   4.5      4.5    0.7    0.8

(24% done)

batch 4 (12s, expected 4h, 32.8k CDSs)
187272,1028800,1321371,866895,553190,410358,592029,946077,518766,945713,765952,1618369
2.9      6.2     1.2    4.1     1.3    1.7   3.6   2.7    2.9     3.2   2.6     0.7
60900  130200   25200                       75600                67200         14700

(33% done)

batch 5 (12s, expected 4h, 33.5k CDSs)
314225,381306,457570,633147,469383,755732,521097,517417,167546,316279,926562,1618443
3      2.4     2.9   1.7    5.9     4      2.2    2     1.9     2.3    3.5     1.7

(43%)

batch 6 (10s, expected 4h, 31.6k CDSs)
476282,402881,911008,574087,1209989,351607,469382,1201294,1618777,1618742
8.7    3.6    4.6     2.3    2.5     2.2     3.9   2.6      0.6      0.8

(50%)

batch 7 (12s, expected 4h, 32.1k CDSs)
243233,1006000,1177931,1009370,742818,797210,867904,331104,1347342,49280,1619051,1618671
3      4.7      2.1     4.3    1.8     4.2    2.6   0.6    3.6     3.7    1.1     1.0

(60%)

batch 8 (8s, expected 4h, 32.2k CDSs)
1033802,1033991,419610,358681,543302,797114,926571,1618405
  3.5     6.5    4.8     6       3     4.4    3.1     1

(66%) -> 20:00

batch 9 (12s, expected 4h, 32.1k CDSs)
1227812,1208920,1514904,360911,641526,746697,218497,582515,156889,1002672,314260,1266844
3.3      0.7     3.2      3      4     3.1    0.9    3.5    3.7    1.5    2.7     2.9

(75%) -> 24:00

batch 10 (12s, expected 4h, 32.3k CDSs)
1177928,391165,930946,203123,1189619,216432,398720,555500,926559,517418,313596,1618662
   4      2.4   1.4    1.7      2.9    2.7   3.7    3.1    3.9    2.7     3.2   0.7

(84%) -> 04:00

batch 11 (20s, expected 4h, 30.8k CDSs)
525919,435906,655815,979,886377,929556,1618595,1618821,1618924,1618840,1618841,1619005,1618331,1618775,1618729,1619068,1618643,1618673,1618609,1618623
  1.8   2.9   4.7    3.2  3.4    4.3    0.8     0.6     0.8     0.9     0.8     1.1     0.9    0.8      0.6     1.1     0.8     0.5     0.6      0.6

(100%) -> 10:20

-----------------------------

> extending this block with more species:

batch 12 (11s, expected 4h, est. ~31.9k CDSs)
651182,555779,762983,1236703,903503,1208320,1055104,393595,314278,768671,767434  <- done
  4.4    3.7    2.2    0.9    0.4     3.4     2.7     2.8   3.5     4.9    3.0

batch 13 (10s, expected 4h, 30.7k CDSs)
555778,1172194,365046,768706,477974,585394,592010,999415,1033810,1441628   <- done
  2.4    4.7    3.9     5.2    2.2   3.4    1.9    1.9     3      2.3

batch 14 (8s, expected 3h, 27.0k CDSs)
322098,441768,1429438,1429439,931890,1198115,1502293,521011   <- done
  0.7    1.4    8.4     8.9    4.4    0.6     1.7     2.7

batch 15 (6s, expected 4h, 29.3k CDSs)
263358,405948,469371,196162,266940,269800  <- done
   6     7.2   3.5    4.9    4.7     3.1

batch 16 (5s, expected 4h, 29.2k CDSs)
100226,743718,446470,479433,1189621   <- done
  8.2    2.9   6.4    8.9     3.1

batch 17 (4s, expected 4h, 29.3k CDSs)  <- finished 95%
885318,1257118,861299,548479
 6.3    14.9     6.4   1.9

batch 18 (7s, expected 3h30m, 28.3k CDSs)
886293,575540,521674,331113,243090,1142394  <- done
 7.3    3.7    4.3     2.5    7.3    3.3

(-> 15:00)

batch 19 (1s, expected 3h, 24.1k CDSs)
312017    <-  done
 24.2

batch 20 (6s, expected 4h)
316407,335284,373903,661478,1313172,691883

(upsert)

(build profiles)


August

--28--

>>> Translate identifiers for tree file

> Run the mapping stage

time ~/anaconda2/bin/python2 reference_trees.py --prepare-translation-map
.
.
.
3027 processed, 2931 found
Identifier classes counts:
Counter({'SAMN': 1475, 'NZ': 634, 'NC': 596, 'PRJNA': 171, 'CP': 21, 'SAMEA': 6, 'FP': 5, 'PRJEA': 5, 'SAMD': 5, 'PRJDA': 3, 'EKD': 3, 'FN': 2, 'AE': 2, 'AP': 2, 'PRJEB': 2, 'AUYT': 1, 'BA': 1, 'AWSN': 1, 'AYLK': 1, 'EKE': 1, 'AYLL': 1, 'APKF': 1, 'CAFG': 1, 'JYIM': 1, 'ASAI': 1, 'ATBP': 1, 'AKKQ': 1, 'ASPK': 1, 'AGCY': 1, 'APGO': 1, 'ASZN': 1, 'AQTX': 1, 'JWKR': 1, 'AYLI': 1, 'ADVD': 1, 'CA': 1, 'L': 1, 'JRFF': 1, 'AGNT': 1, 'JWKP': 1, 'AXWL': 1, 'JWKN': 1, 'JWKQ': 1, 'JWKT': 1, 'JWKU': 1, 'JWKV': 1, 'JWKW': 1, 'LSSB': 1, 'ARQD': 1, 'JWKS': 1, 'JWKX': 1, 'JWKY': 1, 'JWKZ': 1, 'JQJA': 1, 'DP': 1, 'KT': 1, 'AXCJ': 1, 'ARWQ': 1, 'JWKO': 1})
Failed Sequence identifiers:
['NC_012751', 'EKD33325-EKD33564', 'NZ_CP008889.', 'NZ_ACYI00000000', 'NZ_AGXA00000000.', 'EKD66670-EKD66872', 'NC_023002', 'FN392439-FN690703', 'NZ_ADVI00000000', 'NZ_AUXF00000000', 'NC_023004', 'EKE02064-EKE04804', 'NC_014532', 'NZ_BAYZ00000000', 'NZ_JNFL00000000', 'NC_018748', 'NZ_BAYY00000000', 'NC_009142', 'NZ_CAVN000000000.', 'EKD56860- EKD57097']
Failed Biosample identifiers:
['SAMEA3594197', 'SAMD00002827', 'SAMD00036751', 'SAMD00036582', 'SAMEA3138367', 'SAMEA2272122', 'SAMEA2272058', 'SAMEA2272395']
Failed Project identifiers:
['PRJEB6121', 'PRJNA285384', 'PRJNA202453', 'PRJNA209890', 'PRJNA38235', 'PRJEB1507']
JGI Ids:
['14086', '55111', '14059', '12021', '14065', '2280', '13723', '13349', '8221', '6900', '14061', '6188', '2632', '1366', '6991', '14079', '12681', '19866', '14075', '26868', '14063', '14078', '64020', '7245', '11401', '38543', '14074', '2631', '2799', '10947', '14085', '2282', '1365', '14083', '14088', '1595', '2281', '1368', '14082', '9733', '9492', '9732', '14067', '14080', '6889', '5643', '5851', '5673', '2633', '13725', '467661', '14072', '21516', '5777', '1367', '14064', '7000']
Top-level taxons:
Counter({131567: 2938})

real    49m53.771s
user    1m27.684s
sys     0m4.883s

> Now do BDQA

-- Two duplicates found (i.e, groups of nodes that refer to same taxon in supp. table 1):

Eukaryota_Opisthokonta_Choanoflagellida_Codonosigidae_Proterospongia_sp._ATCC_50818	946362    <-- Synonyms
Eukaryota_Opisthokonta_Choanoflagellida_Salpingoecidae_Salpingoeca_rosetta	946362            <-- Synonyms

Bacteria_Firmicutes_Erysipelotrichia_Erysipelotrichales_Erysipelotrichaceae_Eggerthia_catenaformis_DSM_20559	999415       <-- Synonyms
Bacteria_Firmicutes_Bacilli_Lactobacillales_Lactobacillaceae_Lactobacillus_catenaformis_OT_569	999415                       <-- Synonyms

Bacteria_Firmicutes_Clostridia_Clostridiales_Lachnospiraceae_Marvinbryantia_Marvinbryantia_formatexigens_I_52_DSM_14469	478749  <-- Correct
Archaea_Crenarchaeota_Thermoprotei_Desulfurococcales_Desulfurococcaceae_Aeropyrum_camini_SY1_JCM_12091	478749                  <-- Clear mismatch

Archaea_Aigarchaeota_candidate_division_pSL4_archaeon_SCGC_AAA471_E14	1052827                                    <-- Ambiguity
Archaea_Aigarchaeota_candidate_division_pSL4_archaeon_SCGC_AAA471_E14_Combined_Assembly_pSL4_3__pSL4	1052827    <-- Ambiguity


Bacteria_Omnitrophica_WOR-2_RIFCSPHIGHO2_02_FULL_WOR_2_52_10	1801858       <-- Ambiguity
Bacteria_Omnitrophica_WOR-2_RIFCSPHIGHO2_01_FULL_WOR_2_52_10	1801858       <-- Ambiguity

In both cases of synonyms (multiple names denoting the same species), they appear as adjacent nodes in the tree (but with a non-zero distance...)
So this is no big deal.


-- Comparison my original "inferred" taxids (based on finding matching names in NCBI)
My inference hueristics (inferTaxIdForLabel()) only work for 50% of the tree nodes; For these, almost nodes all are matching the same taxon obtained by correlating through table S1, or a taxon within distance 1 in the NCBI tree (i.e., parent, direct descendent or sibling).

48 nodes are not within a distance of 1, and should be removed.



--25--

>>> Load new genomes


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Curtissbacteria.bacterium.GW2011_GWA1_40_16 --remote-name="candidatus_curtissbacteria_bacterium_gw2011_gwa1_40_16" --subsection="bacteria_154_collection" --nuclear-genetic-code=11 --taxid=1618405 --full-name="Candidatus Curtissbacteria bacterium GW2011_GWA1_40_16" --short-name="Curt.4016"

Loaded 1037 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Wbacterium.GW2011_GWD2_40_19 --remote-name="candidatus_woesebacteria_bacterium_gw2011_gwd2_40_19" --subsection="bacteria_125_collection" --nuclear-genetic-code=11 --taxid=1618595 --full-name="Candidatus Woesebacteria bacterium GW2011_GWD2_40_19" --short-name="Woes.4019"

Loaded 796 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nomurabacteria.GW2011_GWF2_36_19 --remote-name="candidatus_nomurabacteria_bacterium_gw2011_gwf2_36_19" --subsection="bacteria_162_collection" --nuclear-genetic-code=11 --taxid=1618775 --full-name="Candidatus Nomurabacteria bacterium GW2011_GWF2_36_19" --short-name="Nomu.3619"

Loaded 800 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Wolfebacteria.GW2011_GWA2_47_9b --remote-name="candidatus_wolfebacteria_bacterium_gw2011_gwa2_47_9b" --subsection="bacteria_161_collection" --nuclear-genetic-code=11 --taxid=1619005 --full-name="Candidatus Wolfebacteria bacterium GW2011_GWA2_47_9b" --short-name="Wolf.479b"

Loaded 1068 CDS genes...
Skipped genes: ['KKU89704', 'KKU89437']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Berkelbacteria.GW2011_GWA1_36_9 --remote-name="berkelbacteria_bacterium_gw2011_gwa1_36_9" --subsection="bacteria_132_collection" --nuclear-genetic-code=11 --taxid=1618331 --full-name="Berkelbacteria bacterium GW2011_GWA1_36_9" --short-name="Berk.369"

Loaded 918 CDS genes...
Skipped genes: ['KKQ18313', 'KKQ17177']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Beckwithbacteria.GW2011_GWA2_43_10 --remote-name="candidatus_beckwithbacteria_bacterium_gw2011_gwa2_43_10" --subsection="bacteria_129_collection" --nuclear-genetic-code=11 --taxid=1618369 --full-name="Candidatus Beckwithbacteria bacterium GW2011_GWA2_43_10" --short-name="Beck.4310"

Loaded 690 CDS genes...
Skipped genes: ['KKS79026', 'KKS78676', 'KKS80279', 'KKS79755', 'KKS78698', 'KKS80595', 'KKS80470']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Peregrinibacteria.GW2011_GWF2_43_17 --remote-name="candidatus_peregrinibacteria_bacterium_gw2011_gwf2_43_17" --subsection="bacteria_138_collection" --nuclear-genetic-code=11 --taxid=1619068 --full-name="Candidatus Peregrinibacteria bacterium GW2011_GWF2_43_17" --short-name="Pere.4317"

Loaded 1135 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Falkowbacteria.GW2011_GWF2_43_32 --remote-name="candidatus_falkowbacteria_bacterium_gw2011_gwf2_43_32" --subsection="bacteria_126_collection" --nuclear-genetic-code=11 --taxid=1618643 --full-name="Candidatus Falkowbacteria bacterium GW2011_GWF2_43_32" --short-name="Falk.4332"

Loaded 793 CDS genes...
Skipped genes: ['KKT12941']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Yanofskybacteria.GW2011_GWC2_41_9 --remote-name="candidatus_yanofskybacteria_bacterium_gw2011_gwc2_41_9" --subsection="bacteria_160_collection" --nuclear-genetic-code=11 --taxid=1619029 --full-name="Candidatus Yanofskybacteria bacterium GW2011_GWC2_41_9" --short-name="Yano.419"

Loaded 668 CDS genes...
Skipped genes: ['KKS27050', 'KKS25165']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Magasanikbacteria.GW2011_GWD2_43_18 --remote-name="candidatus_magasanikbacteria_bacterium_gw2011_gwd2_43_18" --subsection="bacteria_126_collection" --nuclear-genetic-code=11 --taxid=1619051 --full-name="Candidatus Magasanikbacteria bacterium GW2011_GWD2_43_18" --short-name="Maga.4318"

Loaded 1149 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lamnigena --remote-name="lelliottia_amnigena_chs_78" --subsection="bacteria_66_collection" --nuclear-genetic-code=11 --taxid=1439331 --full-name="Lelliottia amnigena CHS 78" --short-name="Lamn"

Loaded 4524 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cabortus --remote-name="chlamydia_abortus_s26_3" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=218497 --full-name="Chlamydia abortus S26-3" --short-name="Cabo"

Loaded 932 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pacanthamoebae --remote-name="parachlamydia_acanthamoebae_uv_7" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=765952 --full-name="Parachlamydia acanthamoebae UV-7" --short-name="Paca"

Warning: 203 entries skipped and 0 entries not found
Loaded 2585 CDS genes...
Skipped genes: ['CCB84951', 'CCB84952', 'CCB84960', 'CCB84993', 'CCB85002', 'CCB85053', 'CCB85054', 'CCB85056', 'CCB85058', 'CCB85064', 'CCB85067',
.
.
.
'CCB87694', 'CCB87696', 'CCB87699', 'CCB87711', 'CCB87719', 'CCB87722', 'CCB87724']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ohongkongensis  --remote-name="owenweeksia_hongkongensis_dsm_17368" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=926562 --full-name="Owenweeksia hongkongensis DSM 17368" --short-name="Ohon"

Loaded 3485 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bmurdochii  --remote-name="brachyspira_murdochii_dsm_12563" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=526224 --full-name="Brachyspira murdochii DSM 12563" --short-name="Bmur"

Loaded 2809 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ladecarboxylata  --remote-name="leclercia_adecarboxylata_atcc_23216_nbrc_102595" --subsection="bacteria_75_collection" --nuclear-genetic-code=11 --taxid=911008 --full-name="Leclercia adecarboxylata ATCC 23216 = NBRC 102595" --short-name="Lade"

Loaded 4630 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kascorbata  --remote-name="kluyvera_ascorbata_atcc_33433" --subsection="bacteria_63_collection" --nuclear-genetic-code=11 --taxid=1006000 --full-name="Kluyvera ascorbata ATCC 33433" --short-name="Kasc"

Loaded 4649 CDS genes...
Skipped genes: ['KFC91240', 'KFD02525']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Thio.sp.ES --remote-name="thiovulum_sp_es" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=1177931 --full-name="Thiovulum sp. ES" --short-name="ThES"

Loaded 2102 CDS genes...
Skipped genes: ['EJF05949', 'EJF05870']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tgeofontis  --remote-name="thermodesulfobacterium_geofontis_opf15" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=795359 --full-name="Thermodesulfobacterium geofontis OPF15" --short-name="Tgeo"

Loaded 1596 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ngalegae --remote-name="neorhizobium_galegae_bv_orientalis_str_hambi_540" --subsection="bacteria_73_collection" --nuclear-genetic-code=11 --taxid=1028800 --full-name="Neorhizobium galegae bv. orientalis str. HAMBI 540" --short-name="Ngal"

Loaded 6170 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rleguminosarum  --remote-name="rhizobium_leguminosarum_bv_trifolii_cb782" --subsection="bacteria_61_collection" --nuclear-genetic-code=11 --taxid=1033991 --full-name="Rhizobium leguminosarum bv. trifolii CB782" --short-name="Rleg"

Loaded 6496 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fagariphila  --remote-name="formosa_agariphila_kmm_3901" --subsection="bacteria_67_collection" --nuclear-genetic-code=11 --taxid=1347342 --full-name="Formosa agariphila KMM 3901" --short-name="Faga"

Loaded 3570 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Galgens --remote-name="gelidibacter_algens" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=49280 --full-name="Gelidibacter algens" --short-name="Galg"

Loaded 3656 CDS genes...
Skipped genes: ['OBX24584']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Wpsychrotolerans  --remote-name="winogradskyella_psychrotolerans_rs_3" --subsection="bacteria_40_collection" --nuclear-genetic-code=11 --taxid=641526 --full-name="Winogradskyella psychrotolerans RS-3" --short-name="Wpsy"

Loaded 4023 CDS genes...
Skipped genes: ['EPR73861']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Asublithincola  --remote-name="aequorivita_sublithincola_dsm_14238" --subsection="bacteria_25_collection" --nuclear-genetic-code=11 --taxid=746697 --full-name="Aequorivita sublithincola DSM 14238" --short-name="Asub"

Loaded 3140 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ssalarius --remote-name="salegentibacter_salarius" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=435906 --full-name="Salegentibacter salarius" --short-name="Ssal"

Loaded 2939 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Zprofunda  --remote-name="zunongwangia_profunda_sm_a87" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=655815 --full-name="Zunongwangia profunda SM-A87" --short-name="Zpro"

Loaded 4653 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ndokdonensis  --remote-name="nonlabens_dokdonensis_dsw_6" --subsection="bacteria_26_collection" --nuclear-genetic-code=11 --taxid=592029 --full-name="Nonlabens dokdonensis DSW-6" --short-name="Ndok"

Loaded 3618 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pgondwanensis --remote-name="psychroflexus_gondwanensis_acam_44" --subsection="bacteria_33_collection" --nuclear-genetic-code=11 --taxid=1189619 --full-name="Psychroflexus gondwanensis ACAM 44" --short-name="Pgon"

Loaded 2907 CDS genes...
Skipped genes: ['EMY79828']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Catlanticus  --remote-name="croceibacter_atlanticus_htcc2559" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=216432 --full-name="Croceibacter atlanticus HTCC2559" --short-name="Catl"

Loaded 2702 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lblandensis --remote-name="leeuwenhoekiella_blandensis_med217" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=398720 --full-name="Leeuwenhoekiella blandensis MED217" --short-name="Lbla"

Loaded 3735 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Clytica --remote-name="cellulophaga_lytica" --subsection="bacteria_85_collection" --nuclear-genetic-code=11 --taxid=979 --full-name="Cellulophaga lytica" --short-name="Clyt"

Loaded 3168 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mruestringensis  --remote-name="muricauda_ruestringensis_dsm_13258" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=886377 --full-name="Muricauda ruestringensis DSM 13258" --short-name="Mrue"

Loaded 3432 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fbacterium  --remote-name="flavobacteriales_bacterium_alc_1" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=391603 --full-name="Flavobacteriales bacterium ALC-1" --short-name="Fbac"

Loaded 3445 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rbiformata  --remote-name="robiginitalea_biformata_htcc2501" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=313596 --full-name="Robiginitalea biformata HTCC2501" --short-name="Rbif"

Loaded 3211 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ihalotolerans  --remote-name="imtechella_halotolerans_k1" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=946077 --full-name="Imtechella halotolerans K1" --short-name="Ihal"

Loaded 2694 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cochracea  --remote-name="capnocytophaga_ochracea_dsm_7271" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=521097 --full-name="Capnocytophaga ochracea DSM 7271" --short-name="Coch"

Loaded 2171 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gmarinus --remote-name="galbibacter_marinus" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=555500 --full-name="Galbibacter marinus" --short-name="Gmar"

Loaded 3099 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Jmarina  --remote-name="joostella_marina_dsm_19592" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=926559 --full-name="Joostella marina DSM 19592" --short-name="Jmar"

Loaded 3858 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ftaffensis  --remote-name="fluviicola_taffensis_dsm_16823" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=755732 --full-name="Fluviicola taffensis DSM 16823" --short-name="Ftaf"

Loaded 4033 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Blattabacterium.sp.Str.Bge --remote-name="blattabacterium_sp_blattella_germanica_str_bge" --subsection="bacteria_6_collection" --nuclear-genetic-code=11 --taxid=331104 --full-name="Blattabacterium sp. (Blattella germanica) str. Bge" --short-name="Bla.Bge"

Loaded 590 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mmarinus  --remote-name="magnetococcus_marinus_mc_1" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=156889 --full-name="Magnetococcus marinus MC-1" --short-name="Mmarin"

Loaded 3716 CDS genes...
--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pbermudensis  --remote-name="parvularcula_bermudensis_htcc2503" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=314260 --full-name="Parvularcula bermudensis HTCC2503" --short-name="Pber"

Loaded 2687 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aexcentricus  --remote-name="asticcacaulis_excentricus_cb_48" --subsection="bacteria_6_collection" --nuclear-genetic-code=11 --taxid=573065 --full-name="Asticcacaulis excentricus CB 48" --short-name="Aexc"

Loaded 3763 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Elitoralis  --remote-name="erythrobacter_litoralis_htcc2594" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=314225 --full-name="Erythrobacter litoralis HTCC2594" --short-name="Elit"

Loaded 3011 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Amarina.str.LZD062 --remote-name="ahrensia_marina" --subsection="bacteria_142_collection" --nuclear-genetic-code=11 --taxid=1514904 --full-name="Ahrensia marina str. LZD062" --short-name="Amar"

Loaded 3162 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tprofundimaris  --remote-name="thalassospira_profundimaris_wp0211" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=1177928 --full-name="Thalassospira profundimaris WP0211" --short-name="Tpro"

Loaded 4040 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Apasteurianus  --remote-name="acetobacter_pasteurianus_386b" --subsection="bacteria_80_collection" --nuclear-genetic-code=11 --taxid=1266844 --full-name="Acetobacter pasteurianus 386B" --short-name="Apas"

Loaded 2876 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gbethesdensis  --remote-name="granulibacter_bethesdensis_cgdnih1" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=391165 --full-name="Granulibacter bethesdensis CGDNIH1" --short-name="Gbet"

Loaded 2437 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hundulata  --remote-name="holospora_undulata_hu1" --subsection="bacteria_63_collection" --nuclear-genetic-code=11 --taxid=1321371 --full-name="Holospora undulata HU1" --short-name="Hund"

Loaded 1224 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ialbum  --remote-name="ignavibacterium_album_jcm_16511" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=945713 --full-name="Ignavibacterium album JCM 16511" --short-name="Ialb"

Loaded 3195 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ngracilis  --remote-name="nitrospina_gracilis_3_211" --subsection="bacteria_32_collection" --nuclear-genetic-code=11 --taxid=1266370 --full-name="Nitrospina gracilis 3-211" --short-name="Ngra"

Loaded 2962 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rmarinus  --remote-name="rhodothermus_marinus_dsm_4252" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=518766 --full-name="Rhodothermus marinus DSM 4252" --short-name="Rmar"

Loaded 2863 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kaiserbacteria.GW2011_GWA2_52_12 --remote-name="candidatus_kaiserbacteria_bacterium_gw2011_gwa2_52_12" --subsection="bacteria_161_collection" --nuclear-genetic-code=11 --taxid=1618671 --full-name="Candidatus Kaiserbacteria bacterium GW2011_GWA2_52_12" --short-name="Kais.5212"

Loaded 973 CDS genes...
Skipped genes: ['KKW23873']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Azambacteria.GW2011_GWA1_42_19 --remote-name="candidatus_azambacteria_bacterium_gw2011_gwa1_42_19" --subsection="bacteria_140_collection" --nuclear-genetic-code=11 --taxid=1618609 --full-name="Candidatus Azambacteria bacterium GW2011_GWA1_42_19" --short-name="Azam.4219"

Loaded 601 CDS genes...
Skipped genes: ['KKS45438', 'KKS45439']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Collierbacteria.GW2011_GWA2_44_99 --remote-name="candidatus_collierbacteria_bacterium_gw2011_gwa2_44_99" --subsection="bacteria_145_collection" --nuclear-genetic-code=11 --taxid=1618380 --full-name="Candidatus Collierbacteria bacterium GW2011_GWA2_44_99" --short-name="Coll.4499"

Loaded 755 CDS genes...
Skipped genes: ['KKT86618', 'KKT85334', 'KKT85499', 'KKT85557', 'KKT84785', 'KKT86286', 'KKT84712', 'KKT84989']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gottesmanbacteria.GW2011_GWA2_43_14 --remote-name="candidatus_gottesmanbacteria_bacterium_gw2011_gwa2_43_14" --subsection="bacteria_161_collection" --nuclear-genetic-code=11 --taxid=1618443 --full-name="Candidatus Gottesmanbacteria bacterium GW2011_GWA2_43_14" --short-name="Gott.4314"

Loaded 1697 CDS genes...
Skipped genes: ['KKS95207', 'KKS95208']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pelagibacter.sp.IMCC9063 --remote-name="candidatus_pelagibacter_sp_imcc9063" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=1002672 --full-name="Candidatus Pelagibacter sp. IMCC9063" --short-name="Pela"

Loaded 1447 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Chlorobaculum.parvum  --remote-name="chlorobaculum_parvum_ncib_8327" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=517417 --full-name="Chlorobaculum parvum NCIB 8327" --short-name="Chlop"

Loaded 2043 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cthalassium  --remote-name="chloroherpeton_thalassium_atcc_35110" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=517418 --full-name="Chloroherpeton thalassium ATCC 35110" --short-name="Ctha"

Loaded 2710 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Acidimicrobium.ferrooxidans  --remote-name="acidimicrobium_ferrooxidans_dsm_10331" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=525909 --full-name="Acidimicrobium ferrooxidans DSM 10331" --short-name="Amifer"

Loaded 1964 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ouli  --remote-name="olsenella_uli_dsm_7084" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=633147 --full-name="Olsenella uli DSM 7084" --short-name="Ouli"

Loaded 1739 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cwoesei  --remote-name="conexibacter_woesei_dsm_14684" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=469383 --full-name="Conexibacter woesei DSM 14684" --short-name="Cwoe"

Loaded 5914 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tterrenum  --remote-name="thermobaculum_terrenum_atcc_baa_798" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=525904 --full-name="Thermobaculum terrenum ATCC BAA-798" --short-name="Tter"

Loaded 2832 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fginsengisoli  --remote-name="fimbriimonas_ginsengisoli_gsoil_348" --subsection="bacteria_81_collection" --nuclear-genetic-code=11 --taxid=661478 --full-name="Fimbriimonas ginsengisoli Gsoil 348" --short-name="Fgin"

Loaded 4820 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Horenii  --remote-name="halothermothrix_orenii_h_168" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=373903 --full-name="Halothermothrix orenii H 168" --short-name="Hore"

Loaded 2342 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aarabaticum  --remote-name="acetohalobium_arabaticum_dsm_5501" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=574087 --full-name="Acetohalobium arabaticum DSM 5501" --short-name="Hara"

Loaded 2282 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=TM6.GW2011_GWF2_32_72 --remote-name="candidate_division_tm6_bacterium_gw2011_gwf2_32_72" --subsection="bacteria_156_collection" --nuclear-genetic-code=11 --taxid=1619079 --full-name="candidate division TM6 bacterium GW2011_GWF2_32_72" --short-name="TM6.3272"

Loaded 881 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gkaustophilus  --remote-name="geobacillus_kaustophilus_hta426" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=235909 --full-name="Geobacillus kaustophilus HTA426" --short-name="Gkau"

Loaded 3540 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bbrevis  --remote-name="brevibacillus_brevis_nbrc_100599" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=358681 --full-name="Brevibacillus brevis NBRC 100599" --short-name="Bbre"

Loaded 5949 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aacidocaldarius  --remote-name="alicyclobacillus_acidocaldarius_laa1" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=543302 --full-name="Alicyclobacillus acidocaldarius LAA1" --short-name="Aaci"

Loaded 3029 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tflagellatus --remote-name="tumebacillus_flagellatus" --subsection="bacteria_66_collection" --nuclear-genetic-code=11 --taxid=1157490 --full-name="Tumebacillus flagellatus" --short-name="Tfla"

Loaded 4447 CDS genes...
Skipped genes: ['KEO80897', 'KEO80806', 'KEO80809', 'KEO84744', 'KEO80873']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nthermophilus  --remote-name="natranaerobius_thermophilus_jw_nm_wn_lf" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=457570 --full-name="Natranaerobius thermophilus JW/NM-WN-LF" --short-name="Nthe"

Loaded 2906 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tacetatoxydans  --remote-name="tepidanaerobacter_acetatoxydans_re1" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=1209989 --full-name="Tepidanaerobacter acetatoxydans Re1" --short-name="Tace"

Loaded 2524 CDS genes...

--------------------------------------
~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Alongum  --remote-name="acetonema_longum_dsm_6540" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=1009370 --full-name="Acetonema longum DSM 6540" --short-name="Alon"

Loaded 4276 CDS genes...
Skipped genes: ['EGO62498', 'EGO64124', 'EGO64125', 'EGO64080', 'EGO65102', 'EGO63608', 'EGO62865', 'EGO62192']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mmultacida  --remote-name="mitsuokella_multacida_dsm_20544" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=500635 --full-name="Mitsuokella multacida DSM 20544" --short-name="Mmul"

Loaded 2558 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Thiohalorhabdus.denitrificans --remote-name="thiohalorhabdus_denitrificans" --subsection="bacteria_133_collection" --nuclear-genetic-code=11 --taxid=381306 --full-name="Thiohalorhabdus denitrificans" --short-name="Thiden"

Loaded.....

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Etrichonymphae --remote-name="candidatus_endomicrobium_trichonymphae" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=1408204 --full-name="Candidatus Endomicrobium trichonymphae" --short-name="Etri"

Loaded 2867 CDS genes...
Skipped genes: ['OEG71352', 'OEG71129']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ecoli.K-12.substr.W3110 --remote-name="escherichia_coli_str_k_12_substr_w3110" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=316407 --full-name="Escherichia coli str. K-12 substr. W3110" --short-name="Ecol.W3110"

Loaded 4227 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pcryohalolentis --remote-name="psychrobacter_cryohalolentis_k5" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=335284 --full-name="Psychrobacter cryohalolentis K5" --short-name="Pcry"

Loaded 2511 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mcapsulatus  --remote-name="methylococcus_capsulatus_str_bath" --subsection="bacteria_6_collection" --nuclear-genetic-code=11 --taxid=243233 --full-name="Methylococcus capsulatus str. Bath" --short-name="Mcap"

Loaded 2960 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sshabanensis  --remote-name="salinisphaera_shabanensis_e1l3a" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=1033802 --full-name="Salinisphaera shabanensis E1L3A" --short-name="Ssha"

Loaded 3524 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Psalmonis  --remote-name="piscirickettsia_salmonis_lf_89_atcc_vr_1361" --subsection="bacteria_35_collection" --nuclear-genetic-code=11 --taxid=1227812 --full-name="Piscirickettsia salmonis LF-89 = ATCC VR-1361" --short-name="Psal"

Loaded 3264 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aehrlichii --remote-name="alkalilimnicola_ehrlichii_mlhe_1" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=187272 --full-name="Alkalilimnicola ehrlichii MLHE-1" --short-name="Aehr"

Loaded 2865 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bjaponicum  --remote-name="bradyrhizobium_japonicum_semia_5079" --subsection="bacteria_72_collection" --nuclear-genetic-code=11 --taxid=476282 --full-name="Bradyrhizobium japonicum SEMIA 5079" --short-name="Bjap"

Loaded 8648 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Plavamentivorans  --remote-name="parvibaculum_lavamentivorans_ds_1" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=402881 --full-name="Parvibaculum lavamentivorans DS-1" --short-name="Plav"

Loaded 3636 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Goxydans  --remote-name="gluconobacter_oxydans_621h" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=290633 --full-name="Gluconobacter oxydans 621H" --short-name="Goxy"

Loaded 2664 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Xfastidiosa.subsp.sandyi.Ann.1 --remote-name="xylella_fastidiosa_subsp_sandyi_ann_1" --subsection="bacteria_78_collection" --nuclear-genetic-code=11 --taxid=155920 --full-name="Xylella fastidiosa subsp. sandyi Ann-1" --short-name="Xfas.sdy"

Loaded 2639 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Koncopeltii --remote-name="candidatus_kinetoplastibacterium_oncopeltii_tcc290e" --subsection="bacteria_31_collection" --nuclear-genetic-code=11 --taxid=1208920 --full-name="Candidatus Kinetoplastibacterium oncopeltii TCC290E" --short-name="Konc"

Loaded 694 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mextorquens  --remote-name="methylobacterium_extorquens_pa1" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=419610 --full-name="Methylobacterium extorquens PA1" --short-name="Mext"

Loaded 4829 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hmaritima  --remote-name="hippea_maritima_dsm_10411" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=760142 --full-name="Hippea maritima DSM 10411" --short-name="Hipmar"

Loaded 1677 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hhalophilus  --remote-name="halobacillus_halophilus_dsm_2266" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=866895 --full-name="Halobacillus halophilus DSM 2266" --short-name="Hhal"

Loaded 4118 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Exiguobacterium.sp.AT1b --remote-name="exiguobacterium_sp_at1b" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=360911 --full-name="Exiguobacterium sp. AT1b" --short-name="Exig.AT1b"

Loaded 3020 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ffructosus  --remote-name="fructobacillus_fructosus_kctc_3544" --subsection="bacteria_171_collection" --nuclear-genetic-code=11 --taxid=930946 --full-name="Fructobacillus fructosus KCTC 3544" --short-name="Ffru"

Loaded 1439 CDS genes...
Skipped genes: ['KRN52489', 'KRN52070', 'KRN51730', 'KRN51652', 'KRN53220', 'KRN51805', 'KRN52532', 'KRN52757', 'KRN52764', 'KRN52767']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ooeni  --remote-name="oenococcus_oeni_psu_1" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=203123 --full-name="Oenococcus oeni PSU-1" --short-name="Ooen"

Loaded 1691 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aprevotii  --remote-name="anaerococcus_prevotii_dsm_20548" --subsection="bacteria_2_collection" --nuclear-genetic-code=11 --taxid=525919 --full-name="Anaerococcus prevotii DSM 20548" --short-name="Apre"

Loaded 1806 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dmicroaerophilus  --remote-name="dialister_microaerophilus_upii_345_e" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=910314 --full-name="Dialister microaerophilus UPII 345-E" --short-name="Dmic"

Loaded 1310 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cabyssi  --remote-name="caldithrix_abyssi_dsm_13497" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=880073 --full-name="Caldithrix abyssi DSM 13497" --short-name="Caby"

Loaded 3750 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dmccartyi.CBDB1 --remote-name="dehalococcoides_mccartyi_cbdb1" --subsection="bacteria_16_collection" --nuclear-genetic-code=11 --taxid=255470 --full-name="Dehalococcoides mccartyi CBDB1" --short-name="Dmcc.CBDB1"

Loaded 1458 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Acellulolyticus  --remote-name="acidothermus_cellulolyticus_11b" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=351607 --full-name="Acidothermus cellulolyticus 11B" --short-name="Acel"

Loaded 2157 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Spiriformis  --remote-name="slackia_piriformis_yit_12062" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=742818 --full-name="Slackia piriformis YIT 12062" --short-name="Spir"

Loaded 1799 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gvaginalis  --remote-name="gardnerella_vaginalis_409_05" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=553190 --full-name="Gardnerella vaginalis 409-05" --short-name="Gvag"

Loaded 1258 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Totitidis  --remote-name="turicella_otitidis_atcc_51513" --subsection="bacteria_6_collection" --nuclear-genetic-code=11 --taxid=883169 --full-name="Turicella otitidis ATCC 51513" --short-name="Toti"

Loaded 1452 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hsalinarum.R1 --remote-name="halobacterium_salinarum_r1" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=478009 --full-name="Halobacterium salinarum R1" --short-name="Hsal.R1"

Loaded 2707 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hborinquense  --remote-name="halogeometricum_borinquense_dsm_11551" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=469382 --full-name="Halogeometricum borinquense DSM 11551" --short-name="Hbor"

Loaded 3898 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hxanaduensis  --remote-name="halopiger_xanaduensis_sh_6" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=797210 --full-name="Halopiger xanaduensis SH-6" --short-name="Hxan"

Loaded 4221 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hcarlsbadense  --remote-name="halosimplex_carlsbadense_2_9_1" --subsection="bacteria_32_collection" --nuclear-genetic-code=11 --taxid=797114 --full-name="Halosimplex carlsbadense 2-9-1" --short-name="Hcar"

Loaded 4426 CDS genes...
Skipped genes: ['ELZ25018', 'ELZ25047', 'ELZ24155', 'ELZ24185', 'ELZ24186', 'ELZ24191', 'ELZ24233', 'ELZ24331', 'ELZ28102', 'ELZ19973', 'ELZ21581', 'ELZ20584', 'ELZ24853', 'ELZ25774', 'ELZ27585', 'ELZ27599', 'ELZ27631', 'ELZ27738', 'ELZ22503', 'ELZ28822', 'ELZ28852', 'ELZ20254', 'ELZ29129', 'ELZ29179', 'ELZ30218', 'ELZ30220', 'ELZ30221', 'ELZ30275', 'ELZ30331', 'ELZ30332', 'ELZ21149', 'ELZ29661']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nviennensis  --remote-name="nitrososphaera_viennensis_en76" --subsection="bacteria_63_collection" --nuclear-genetic-code=11 --taxid=926571 --full-name="Nitrososphaera viennensis EN76" --short-name="Nvie"

Loaded 3123 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pfumarii  --remote-name="pyrolobus_fumarii_1a" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=694429 --full-name="Pyrolobus fumarii 1A" --short-name="Pfum"

Loaded 1967 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_nucleariidaeandfonticulagroup1_collection/fonticula_alba/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Falba --remote-name="fonticula_alba" --section="protists" --subsection="protists_nucleariidaeandfonticulagroup1_collection" --nuclear-genetic-code=1 --taxid=691883 --full-name="Fonticula alba" --short-name="Falb"

Loaded 6309 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mevestigatum  --remote-name="methanohalobium_evestigatum_z_7303" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=644295 --full-name="Methanohalobium evestigatum Z-7303" --short-name="Meve"

Loaded 2254 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mlabreanum  --remote-name="methanocorpusculum_labreanum_z" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=410358 --full-name="Methanocorpusculum labreanum Z" --short-name="Mlab"

Loaded 1739 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mbourgensis  --remote-name="methanoculleus_bourgensis_ms2" --subsection="bacteria_91_collection" --nuclear-genetic-code=11 --taxid=1201294 --full-name="Methanoculleus bourgensis MS2" --short-name="Mbou"

Loaded 2580 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mhollandica  --remote-name="methanomethylovorans_hollandica_dsm_15978" --subsection="bacteria_26_collection" --nuclear-genetic-code=11 --taxid=867904 --full-name="Methanomethylovorans hollandica DSM 15978" --short-name="Mhol"

Loaded 2556 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mliminatans  --remote-name="methanofollis_liminatans_dsm_4140" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=28892 --full-name="Methanofollis liminatans DSM 4140" --short-name="Mlim"

Loaded 2424 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kcryptofilum  --remote-name="candidatus_korarchaeum_cryptofilum_opf8" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=374847 --full-name="Candidatus Korarchaeum cryptofilum OPF8" --short-name="Kcry"

Loaded 1602 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nomurabacteria.GW2011_GWA1_37_20 --remote-name="candidatus_nomurabacteria_bacterium_gw2011_gwa1_37_20" --subsection="bacteria_151_collection" --nuclear-genetic-code=11 --taxid=1618729 --full-name="Candidatus Nomurabacteria bacterium GW2011_GWA1_37_20" --short-name="Nomu.3720"

Loaded 629 CDS genes...
Skipped genes: ['KKQ31631', 'KKQ30001', 'KKQ29842', 'KKQ31568']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nomurabacteria.GW2011_GWF2_40_31 --remote-name="candidatus_nomurabacteria_bacterium_gw2011_gwf2_40_31" --subsection="bacteria_132_collection" --nuclear-genetic-code=11 --taxid=1618777 --full-name="Candidatus Nomurabacteria bacterium GW2011_GWF2_40_31" --short-name="Nomu.4031"

Loaded 578 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nomurabacteria.GW2011_GWB1_37_5 --remote-name="candidatus_nomurabacteria_bacterium_gw2011_gwb1_37_5" --subsection="bacteria_139_collection" --nuclear-genetic-code=11 --taxid=1618742 --full-name="Candidatus Nomurabacteria bacterium GW2011_GWB1_37_5" --short-name="Nomu.375"

Loaded 821 CDS genes...
Skipped genes: ['KKQ35421', 'KKQ34153', 'KKQ34124', 'KKQ35168', 'KKQ34682', 'KKQ34042', 'KKQ34642', 'KKQ35292', 'KKQ34953', 'KKQ34176']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Parcubacteria.GW2011_GWA2_42_18 --remote-name="parcubacteria_group_bacterium_gw2011_gwa2_42_18" --subsection="bacteria_157_collection" --nuclear-genetic-code=11 --taxid=1618821 --full-name="Parcubacteria group bacterium GW2011_GWA2_42_18" --short-name="Parc.4218"

Loaded 602 CDS genes...
Skipped genes: ['KKS44423', 'KKS43651', 'KKS43615', 'KKS43770']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Parcubacteria.GW2011_GWC2_40_31 --remote-name="parcubacteria_group_bacterium_gw2011_gwc2_40_31" --subsection="bacteria_131_collection" --nuclear-genetic-code=11 --taxid=1618924 --full-name="Parcubacteria group bacterium GW2011_GWC2_40_31" --short-name="Parc.4031"

Loaded 821 CDS genes...
Skipped genes: ['KKR58922', 'KKR60042', 'KKR60279']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Parcubacteria.GW2011_GWA2_47_10b --remote-name="parcubacteria_group_bacterium_gw2011_gwa2_47_10b" --subsection="bacteria_130_collection" --nuclear-genetic-code=11 --taxid=1618840 --full-name="Parcubacteria group bacterium GW2011_GWA2_47_10b" --short-name="Parc.4710b"

Loaded 876 CDS genes...
Skipped genes: ['KKU50595', 'KKU53059']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Parcubacteria.GW2011_GWA2_47_12 --remote-name="parcubacteria_group_bacterium_gw2011_gwa2_47_12" --subsection="bacteria_136_collection" --nuclear-genetic-code=11 --taxid=1618841 --full-name="Parcubacteria group bacterium GW2011_GWA2_47_12" --short-name="Parc.4712"

Loaded 768 CDS genes...
Skipped genes: ['KKU60206', 'KKU57280']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kaiserbacteria.GW2011_GWB1_50_17 --remote-name="candidatus_kaiserbacteria_bacterium_gw2011_gwb1_50_17" --subsection="bacteria_146_collection" --nuclear-genetic-code=11 --taxid=1618673 --full-name="Candidatus Kaiserbacteria bacterium GW2011_GWB1_50_17" --short-name="Kais.5017"

Loaded 475 CDS genes...
Skipped genes: ['KKW18105', 'KKW16667', 'KKW17955']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Jorgensenbacteria.GW2011_GWA2_45_13 --remote-name="candidatus_jorgensenbacteria_bacterium_gw2011_gwa2_45_13" --subsection="bacteria_124_collection" --nuclear-genetic-code=11 --taxid=1618662 --full-name="Candidatus Jorgensenbacteria bacterium GW2011_GWA2_45_13" --short-name="Jorg.4513"

Loaded 654 CDS genes...
Skipped genes: ['KKT91197', 'KKT91433', 'KKT90133']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Azambacteria.GW2011_GWD2_46_48 --remote-name="candidatus_azambacteria_bacterium_gw2011_gwd2_46_48" --subsection="bacteria_127_collection" --nuclear-genetic-code=11 --taxid=1618623 --full-name="Candidatus Azambacteria bacterium GW2011_GWD2_46_48" --short-name="Azam.4648"

Loaded 608 CDS genes...
Skipped genes: ['KKU40650', 'KKU40262']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pmarinus  --remote-name="prochlorococcus_marinus_str_mit_9301" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=167546 --full-name="Prochlorococcus marinus str. MIT 9301" --short-name="Promar"

Loaded 1907 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Synechococcus.sp.CC9902 --remote-name="synechococcus_sp_cc9902" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=316279 --full-name="Synechococcus sp. CC9902" --short-name="Syn.CC9902"

Loaded 2304 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rlacunae  --remote-name="rubidibacter_lacunae_kordi_51_2" --subsection="bacteria_43_collection" --nuclear-genetic-code=11 --taxid=582515 --full-name="Rubidibacter lacunae KORDI 51-2" --short-name="Rlac"

Loaded 3457 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Scanadensis  --remote-name="solitalea_canadensis_dsm_3403" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=929556 --full-name="Solitalea canadensis DSM 3403" --short-name="Scan"

Loaded 4310 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dtoluolica  --remote-name="desulfobacula_toluolica_tol2" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=651182 --full-name="Desulfobacula toluolica Tol2" --short-name="Dtol"

Loaded 4375 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dthiodismutans  --remote-name="desulfonatronospira_thiodismutans_aso3_1" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=555779 --full-name="Desulfonatronospira thiodismutans ASO3-1" --short-name="Dthi"

Loaded 3662 CDS genes...
Skipped genes: ['EFI35592']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Shippei  --remote-name="succinatimonas_hippei_yit_12066" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=762983 --full-name="Succinatimonas hippei YIT 12066" --short-name="Ship"

Loaded 2169 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pkatoptron  --remote-name="candidatus_photodesmus_katoptron_akat1" --subsection="bacteria_43_collection" --nuclear-genetic-code=11 --taxid=1236703 --full-name="Candidatus Photodesmus katoptron Akat1" --short-name="Pkat"

Loaded 854 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mendobia  --remote-name="candidatus_moranella_endobia_pcit" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=903503 --full-name="Candidatus Moranella endobia PCIT" --short-name="Mend"

Loaded 406 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Toleivorans  --remote-name="thalassolituus_oleivorans_r6_15" --subsection="bacteria_47_collection" --nuclear-genetic-code=11 --taxid=1208320 --full-name="Thalassolituus oleivorans R6-15" --short-name="Tole"

Loaded 3372 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Camphilecti  --remote-name="cobetia_amphilecti" --subsection="bacteria_86_collection" --nuclear-genetic-code=11 --taxid=1055104 --full-name="Cobetia amphilecti str. KMM 296" --short-name="Camp"

Loaded 2726 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aborkumensis  --remote-name="alcanivorax_borkumensis_sk2" --subsection="bacteria_2_collection" --nuclear-genetic-code=11 --taxid=393595 --full-name="Alcanivorax borkumensis SK2" --short-name="Abor"

Loaded 2755 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nmobilis  --remote-name="nitrococcus_mobilis_nb_231" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=314278 --full-name="Nitrococcus mobilis Nb-231" --short-name="Nmob"

Loaded 3503 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tmarina  --remote-name="thiocapsa_marina_5811" --subsection="bacteria_16_collection" --nuclear-genetic-code=11 --taxid=768671 --full-name="Thiocapsa marina 5811" --short-name="Thimar"

Loaded 4923 CDS genes...
Skipped genes: ['EGV15800']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hneapolitanus  --remote-name="halothiobacillus_neapolitanus_c2" --subsection="bacteria_1_collection" --nuclear-genetic-code=11 --taxid=555778 --full-name="Halothiobacillus neapolitanus c2" --short-name="Hnea"

Loaded 2357 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Faurantia  --remote-name="frateuria_aurantia_dsm_6220" --subsection="bacteria_2_collection" --nuclear-genetic-code=11 --taxid=767434 --full-name="Frateuria aurantia DSM 6220" --short-name="Faur"

Loaded 3101 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Heffusa  --remote-name="hydrocarboniphaga_effusa_ap103" --subsection="bacteria_16_collection" --nuclear-genetic-code=11 --taxid=1172194 --full-name="Hydrocarboniphaga effusa AP103" --short-name="Heff"

Loaded 4685 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rtataouinensis  --remote-name="ramlibacter_tataouinensis_ttb310" --subsection="bacteria_5_collection" --nuclear-genetic-code=11 --taxid=365046 --full-name="Ramlibacter tataouinensis TTB310" --short-name="Rtat"

Loaded 3881 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dorientis  --remote-name="desulfosporosinus_orientis_dsm_765" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=768706 --full-name="Desulfosporosinus orientis DSM 765" --short-name="Dori"

Loaded 5242 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Daudaxviator  --remote-name="candidatus_desulforudis_audaxviator_mp104c" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=477974 --full-name="Candidatus Desulforudis audaxviator MP104C" --short-name="Daud"

Loaded 2157 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rhominis  --remote-name="roseburia_hominis_a2_183" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=585394 --full-name="Roseburia hominis A2-183" --short-name="Rhom"

Loaded 3362 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Adefectiva  --remote-name="abiotrophia_defectiva_atcc_49176" --subsection="bacteria_45_collection" --nuclear-genetic-code=11 --taxid=592010 --full-name="Abiotrophia defectiva ATCC 49176" --short-name="Adef"

Loaded 1950 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ecatenaformis  --remote-name="eggerthia_catenaformis_ot_569_dsm_20559" --subsection="bacteria_31_collection" --nuclear-genetic-code=11 --taxid=999415 --full-name="Eggerthia catenaformis OT 569 = DSM 20559" --short-name="Ecat"

Loaded 1884 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hcontractile  --remote-name="haloplasma_contractile_ssd_17b" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=1033810 --full-name="Haloplasma contractile SSD-17B" --short-name="Hcon"

Loaded 3035 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aster.yellows.witches.broom.phytoplasma.AYWB --remote-name="aster_yellows_witches_broom_phytoplasma_aywb" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=322098 --full-name="Aster yellows witches'-broom phytoplasma AYWB" --short-name="AYWB"

Loaded 693 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Alaidlawii  --remote-name="acholeplasma_laidlawii_pg_8a" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=441768 --full-name="Acholeplasma laidlawii PG-8A" --short-name="Alai"

Loaded 1380 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lferriphilum  --remote-name="leptospirillum_ferriphilum_ysk" --subsection="bacteria_79_collection" --nuclear-genetic-code=11 --taxid=1441628 --full-name="Leptospirillum ferriphilum YSK" --short-name="Lfer"

Loaded 2260 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Entotheonella.sp.TSY1 --remote-name="candidatus_entotheonella_sp_tsy1" --subsection="bacteria_55_collection" --nuclear-genetic-code=11 --taxid=1429438 --full-name="Candidatus Entotheonella sp. TSY1" --short-name="Ent.TSY1"

Loaded 8438 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Entotheonella.sp.TSY2 --remote-name="candidatus_entotheonella_sp_tsy2" --subsection="bacteria_49_collection" --nuclear-genetic-code=11 --taxid=1429439 --full-name="Candidatus Entotheonella sp. TSY2" --short-name="Ent.TSY2"

Loaded 8989 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Vmaris  --remote-name="verrucosispora_maris_ab_18_032" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=263358 --full-name="Verrucosispora maris AB-18-032" --short-name="Vmar"

Loaded 6009 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Serythraea  --remote-name="saccharopolyspora_erythraea_nrrl_2338" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=405948 --full-name="Saccharopolyspora erythraea NRRL 2338" --short-name="Sery"

Loaded 7197 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tbispora  --remote-name="thermobispora_bispora_dsm_43833" --subsection="bacteria_5_collection" --nuclear-genetic-code=11 --taxid=469371 --full-name="Thermobispora bispora DSM 43833" --short-name="Tbis"

Loaded 3546 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nocardioides.sp.JS614 --remote-name="nocardioides_sp_js614" --subsection="bacteria_1_collection" --nuclear-genetic-code=11 --taxid=196162 --full-name="Nocardioides sp. JS614" --short-name="Noc.JS614"

Loaded 4909 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kradiotolerans  --remote-name="kineococcus_radiotolerans_srs30216_atcc_baa_149" --subsection="bacteria_9_collection" --nuclear-genetic-code=11 --taxid=266940 --full-name="Kineococcus radiotolerans SRS30216 = ATCC BAA-149" --short-name="Krad"

Loaded 4681 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Scoelicolor  --remote-name="streptomyces_coelicolor_a3_2_" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=100226 --full-name="Streptomyces coelicolor A3(2)" --short-name="Scoe"

Loaded 8154 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tfusca  --remote-name="thermobifida_fusca_yx" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=269800 --full-name="Thermobifida fusca YX" --short-name="Tfus"

Loaded 3110 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ivariabilis  --remote-name="isoptericola_variabilis_225" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=743718 --full-name="Isoptericola variabilis 225" --short-name="Ivar"

Loaded 2881 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mcurtisii  --remote-name="mobiluncus_curtisii_atcc_43063" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=548479 --full-name="Mobiluncus curtisii ATCC 43063" --short-name="Mcur"

Loaded 1909 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Snassauensis  --remote-name="stackebrandtia_nassauensis_dsm_44728" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=446470 --full-name="Stackebrandtia nassauensis DSM 44728" --short-name="Snas"

Loaded 6379 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cacidiphila --remote-name="catenulispora_acidiphila_dsm_44928" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=479433 --full-name="Catenulispora acidiphila DSM 44928" --short-name="Caci"

Loaded 8914 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/tetrahymena_thermophila/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tthermophila  --remote-name="tetrahymena_thermophila" --section="protists" --subsection="" --nuclear-genetic-code=6 --taxid=312017 --full-name="Tetrahymena thermophila SB210" --short-name="Tetherm"

Warning: 565 entries skipped and 0 entries not found
Processed 24160 CDS entries
(out of 24160 CDS entries for this species)
Loaded 24160 CDS genes...
Skipped genes: ['EAS05711', 'EAR87623', 'EAR87730', 'EAR93227', 'EAS06949', 'EAR91365', 'EAR97098', 'EAR97100', 'EAR97099', 'EAS03485', 'EAS03604', 'EAS03574', 'EAR96816', 'EAR96817', 'EAS05242', 'EAS02562', 'EAS02594', 'EAS02564', 'EAR91745', 'EAR91743', 'EAR91766', 'EAS05952', 'EAS05545', 'EAR96991', 'EAS07320', 'EAS07317', 'EAR87097', ...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_amoebozoa1_collection/entamoeba_histolytica_hm_1_imss_a/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ehistolytica  --remote-name="entamoeba_histolytica_hm_1_imss_a" --section="protists" --subsection="protists_amoebozoa1_collection" --nuclear-genetic-code=1 --taxid=885318 --full-name="Entamoeba histolytica HM-1:IMSS-A" --short-name="Ehis"

Loaded 6327 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_amoebozoa1_collection/acanthamoeba_castellanii_str_neff/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Acastellanii  --remote-name="acanthamoeba_castellanii_str_neff" --section="protists" --subsection="protists_amoebozoa1_collection" --nuclear-genetic-code=1 --taxid=1257118 --full-name="Acanthamoeba castellanii str. Neff" --short-name="Acas"

Warning: 55 entries skipped and 0 entries not found
Loaded 14919 CDS genes...
Skipped genes: ['ELR23127', 'ELR22238', 'ELR15127', 'ELR20124', 'ELR12492', 'ELR18140', 'ELR11992', 'ELR22632', 'ELR22643', 'ELR17838', 'ELR18668', 'ELR22722', 'ELR22811', 'ELR18915', 'ELR19029', 'ELR21535', 'ELR21582', 'ELR24228', 'ELR24493', 'ELR11073', 'ELR14415', 'ELR13164', 'ELR22264', 'ELR22432', 'ELR14847', 'ELR19807', 'ELR16748', 'ELR16749', 'ELR18831', 'ELR21839', 'ELR13314', 'ELR13349', 'ELR13373', 'ELR15921', 'ELR12130', 'ELR12132', 'ELR11390', 'ELR24278', 'ELR13997', 'ELR24381', 'ELR16534', 'ELR11583', 'ELR13674', 'ELR18063', 'ELR22894', 'ELR20472', 'ELR24996', 'ELR25003', 'ELR24513', 'ELR21960', 'ELR19203', 'ELR19429', 'ELR19522', 'ELR19549', 'ELR16118']

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/fungi/release-36/fasta/fungi_ascomycota1_collection/eremothecium_cymbalariae_dbvpg_7215/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ecymbalariae   --remote-name="eremothecium_cymbalariae_dbvpg_7215" --section="fungi" --subsection="fungi_ascomycota1_collection" --nuclear-genetic-code=1 --taxid=931890 --full-name="Eremothecium cymbalariae DBVPG#7215" --short-name="Ecym"

Loaded 4433 CDS genes...
Skipped genes: ['AET37950']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tarchaeon  --remote-name="thaumarchaeota_archaeon_scgc_ab_539_e09" --subsection="bacteria_32_collection" --nuclear-genetic-code=11 --taxid=1198115 --full-name="Thaumarchaeota archaeon SCGC AB-539-E09" --short-name="Thau.AB539"

Loaded 647 CDS genes...
Skipped genes: ['EMR73865', 'EMR73873', 'EMR73874']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Thaumarchaeote.SCGC.AAA799-N04 --remote-name="marine_group_i_thaumarchaeote_scgc_aaa799_n04" --subsection="bacteria_69_collection" --nuclear-genetic-code=11 --taxid=1502293 --full-name="Marine Group I thaumarchaeote SCGC AAA799-N04" --short-name="Thau.N04"

Loaded 1744 CDS genes...
Skipped genes: ['KEQ56124', 'KEQ55785', 'KEQ55829', 'KEQ55833', 'KEQ55819', 'KEQ55776', 'KEQ55966', 'KEQ56332', 'KEQ56374', 'KEQ55806', 'KEQ55717', 'KEQ56746', 'KEQ55721', 'KEQ55988', 'KEQ55790', 'KEQ55715', 'KEQ55994', 'KEQ57137', 'KEQ55997', 'KEQ56012', 'KEQ56013', 'KEQ56017', 'KEQ55875']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mpalustris  --remote-name="methanosphaerula_palustris_e1_9c" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=521011 --full-name="Methanosphaerula palustris E1-9c" --short-name="Mpal"

Loaded 2655 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nhalalkaliphila  --remote-name="nitritalea_halalkaliphila_lw7" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=1189621 --full-name="Nitritalea halalkaliphila LW7" --short-name="Nhal"

Warning: 33 entries skipped and 0 entries not found
Loaded 3070 CDS genes...
Skipped genes: ['EIM71788', 'EIM73799', 'EIM75049', 'EIM77854', 'EIM72291', 'EIM71871', 'EIM77230', 'EIM77231', 'EIM71583', 'EIM77587', 'EIM72031', 'EIM76159', 'EIM78339', 'EIM74848', 'EIM74397', 'EIM73405', 'EIM73264', 'EIM77812', 'EIM73037', 'EIM78919', 'EIM71793', 'EIM75851', 'EIM72513', 'EIM78406', 'EIM75122', 'EIM78354', 'EIM72916', 'EIM76606', 'EIM73834', 'EIM75683', 'EIM77665', 'EIM71934', 'EIM78536']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Icoccineus  --remote-name="ilumatobacter_coccineus_ym16_304" --subsection="bacteria_33_collection" --nuclear-genetic-code=11 --taxid=1313172 --full-name="Ilumatobacter coccineus YM16-304" --short-name="Icoc"

Loaded 4291 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gkalamazoonesis --remote-name="gemmatirosa_kalamazoonesis" --subsection="bacteria_56_collection" --nuclear-genetic-code=11 --taxid=861299 --full-name="Gemmatirosa kalamazoonesis" --short-name="Gkal"

Loaded 6369 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sacidiphila  --remote-name="singulisphaera_acidiphila_dsm_18658" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=886293 --full-name="Singulisphaera acidiphila DSM 18658" --short-name="Saci"

Loaded 7251 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ipallida  --remote-name="isosphaera_pallida_atcc_43644" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=575540 --full-name="Isosphaera pallida ATCC 43644" --short-name="Ipal"

Loaded 3722 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Plimnophila  --remote-name="planctopirus_limnophila_dsm_3776" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=521674 --full-name="Planctopirus limnophila DSM 3776" --short-name="Plim"

Loaded 4258 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Snegevensis  --remote-name="simkania_negevensis_z" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=331113 --full-name="Simkania negevensis Z" --short-name="Sneg"

Warning: 30 entries skipped and 0 entries not found
Loaded 2488 CDS genes...
Skipped genes: ['CCB88129', 'CCB88157', 'CCB88158', 'CCB88164', 'CCB88225', 'CCB88466', 'CCB88468', 'CCB88628', 'CCB88634', 'CCB88692', 'CCB88749', 'CCB89012', 'CCB89090', 'CCB89332', 'CCB89475', 'CCB89524', 'CCB89561', 'CCB89712', 'CCB89794', 'CCB89796', 'CCB89802', 'CCB89805', 'CCB89811', 'CCB89816', 'CCB89987', 'CCB90138', 'CCB90142', 'CCB87744', 'CCB87745', 'CCB87747']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rbaltica  --remote-name="rhodopirellula_baltica_sh_1" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=243090 --full-name="Rhodopirellula baltica SH 1" --short-name="Rbal"

Loaded 7325 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pmikurensis  --remote-name="phycisphaera_mikurensis_nbrc_102666" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=1142394 --full-name="Phycisphaera mikurensis NBRC 102666" --short-name="Pmik"

Loaded 3284 CDS genes...

--------------------------------------
#ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_nucleariidaeandfonticulagroup1_collection/fonticula_alba/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Falba --remote-name="fonticula_alba" --section="protists" --subsection="protists_nucleariidaeandfonticulagroup1_collection" --nuclear-genetic-code=1 --taxid=691883 --full-name="Fonticula alba" --short-name="Falb"

Loaded 3284 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"


--21--

>>> Upsert for group 17

> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.


> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

expected=frozenset((743299,754035,264462,862908,1121915,398767,1185651,388396,326298,439292,1427984,240015,234267,1303518,511051,653733,522772,639282,768670,1379858,515635,309799,445932,379066,1379270,313628,29290,330214,289376,525903,866499,580340,891968,289377,667014,1129897,479434,349741,481448,452637,583355,484019,660470,204536,608538,547144,648996,1319815,572544,596323,526218,519441,552811,324602,926550,765420,383372,316274,485913,1182568,751945,319795,443906,1529318,1292022,145458,281090,288705,762948,703613,753081,280463,1236689,333146,1454006,983544,1046627,411154))

{280463: 756546, 753081: 307671, 485913: 240177, 234267: 164325, 29290: 123249, 754035: 121485, 316274: 110838, 313628: 105798, 452637: 96810, 383372: 90930, 1185651: 89796, 330214: 89502, 526218: 86646, 926550: 86499, 388396: 84798, 1129897: 82992, 379066: 82614, 324602: 80892, 264462: 75201, 411154: 75033, 288705: 73605, 479434: 73164, 1379270: 71148, 240015: 70896, 1292022: 70665, 765420: 67851, 398767: 66990, 583355: 65478, 743299: 64890, 1046627: 64785, 443906: 64197, 319795: 64071, 1529318: 63924, 522772: 62244, 983544: 62223, 1121915: 60837, 1319815: 60648, 572544: 60270, 439292: 59052, 1303518: 58905, 862908: 58506, 1454006: 57981, 653733: 53970, 660470: 53865, 481448: 51471, 639282: 49854, 1182568: 48321, 596323: 47544, 762948: 46473, 667014: 46095, 349741: 44877, 1379858: 44604, 751945: 44289, 768670: 44079, 326298: 44016, 289376: 42609, 281090: 42399, 891968: 42273, 484019: 41034, 333146: 40782, 309799: 40068, 608538: 39774, 580340: 39354, 648996: 38052, 515635: 36624, 145458: 36540, 525903: 36393, 204536: 36099, 552811: 34755, 1236689: 34461, 511051: 33138, 547144: 33096, 703613: 32277, 445932: 32046, 289377: 30513, 519441: 29799, 866499: 22701, 1427984: 11865}

# None found; updates by genome (5800242 rows total after deleting bad ones):

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 10 groups of ~600000 rows each

% group 1/5
% dummy_id between       1 and  600000
% group 2/5
% dummy_id between  600001 and 1200000
% group 3/5
% dummy_id between 1200001 and 1800000
% group 4/5
% dummy_id between 1800001 and 2400000
% group 5/10
% dummy_id between 2400001 and 3000000
% group 6/10
% dummy_id between 3000001 and 3600000
% group 7/10
% dummy_id between 3600001 and 4200000
% group 8/10
% dummy_id between 4200001 and 4800000
% group 9/10
% dummy_id between 4800001 and 5400000
% group 10/10
% dummy_id between 5400001 and 5961376

> Note: We will mark all updates included here as ext_index=17

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=17 where source=102;
Rows matched: 5800242  Changed: 5800242  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        17 |  5800242 |
+--------+-----------+----------+
1 row in set (1 min 1.03 sec)

> Perform the upsert, for group 1/10 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between       1 and  600000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=17 and dummy_id between 1 and 5961376;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
|    102 |        13 |  2763727 |
|    102 |        14 |  1892457 |
|    102 |        15 |  2602488 |
|    102 |        16 |  3036537 |
|    102 |        17 |  5800242 |
+--------+-----------+----------+
16 rows in set (1 hour 31 min 14.66 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 37348544 |
+--------+----------+
1 row in set (3 min 46.66 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  1497971 |
|     10 | 18533026 |
|     11 | 21851628 |
+--------+----------+
3 rows in set (23 min 41.18 sec)

> Hurray - all done!



--17--

>>> Upsert for group 16

> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

expected = [29656, 3067, 3046, 564608, 574566, 642492, 347257, 403833, 753081, 641309, 195065, 905079, 2898, 635003, 1519565, 523841, 362976, 797304, 420890]

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

(3036537, Counter(), Counter({905079: 508872, 1519565: 427665, 29656: 408639, 3046: 336063, 3067: 299061, 564608: 222831, 574566: 201663, 753081: 144060, 642492: 87486, 523841: 80325, 797304: 76629, 635003: 58590, 362976: 53508, 420890: 41202, 403833: 39816, 347257: 15771, 641309: 13986, 195065: 10605, 2898: 9765}))

# None found; updates by genome (3036537 rows total after deleting bad ones):

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 5 groups of ~600000 rows each

% group 1/5
% dummy_id between       1 and  600000
% group 2/5
% dummy_id between  600001 and 1200000
% group 3/5
% dummy_id between 1200001 and 1800000
% group 4/5
% dummy_id between 1800001 and 2400000
% group 5/5
% dummy_id between 2400001 and 3036538

> Note: We will mark all updates included here as ext_index=16

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=16 where source=102;
Rows matched: 3036537  Changed: 3036537  Warnings: 0

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        16 |  3036537 |
+--------+-----------+----------+
1 row in set (35.50 sec)

> Perform the upsert, for group 1/5 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between       1 and  600000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=16 and dummy_id between 1 and 3057621;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
|    102 |        13 |  2763727 |
|    102 |        14 |  1892457 |
|    102 |        15 |  2602488 |
|    102 |        16 |  3036537 |
+--------+-----------+----------+
15 rows in set (1 hour 3 min 5.76 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 31548302 |
+--------+----------+
1 row in set (50.31 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  1268982 |
|     10 | 18533026 |
|     11 | 16552826 |
+--------+----------+
3 rows in set (6 min 43.52 sec)

> Hurray - all done!



>>> Load new genomes

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hcrinochetorum --remote-name="candidatus_hepatoplasma_crinochetorum_av" --subsection="bacteria_49_collection" --nuclear-genetic-code=4 --taxid=1427984 --full-name="Candidatus Hepatoplasma crinochetorum Av" --short-name="Hcri"

Loaded 582 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Acapsulatum --remote-name="acidobacterium_capsulatum_atcc_51196" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=240015 --full-name="Acidobacterium capsulatum ATCC 51196" --short-name="Acap"

Loaded 3382 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Susitatus --remote-name="candidatus_solibacter_usitatus_ellin6076" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=234267 --full-name="Candidatus Solibacter usitatus Ellin6076" --short-name="Susi"

Loaded 7826 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ccalidirosea  --remote-name="chthonomonas_calidirosea_t49" --subsection="bacteria_41_collection" --nuclear-genetic-code=11 --taxid=1303518 --full-name="Chthonomonas calidirosea T49" --short-name="Ccal"

Loaded 2807 CDS genes...
Skipped genes: ['CCW34774', 'CCW35238', 'CCW35342', 'CCW36615']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cexile  --remote-name="caldisericum_exile_azm16c01" --subsection="bacteria_1_collection" --nuclear-genetic-code=11 --taxid=511051 --full-name="Caldisericum exile AZM16c01" --short-name="Cexi"

Loaded 1582 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dindicum  --remote-name="desulfurispirillum_indicum_s5" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=653733 --full-name="Desulfurispirillum indicum S5" --short-name="Dind"

Loaded 2571 CDS genes...

--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dacetiphilus --remote-name="denitrovibrio_acetiphilus_dsm_12809" --subsection="bacteria_9_collection" --nuclear-genetic-code=11 --taxid=522772 --full-name="Denitrovibrio acetiphilus DSM 12809" --short-name="Dace"

Loaded 2964 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ddesulfuricans  --remote-name="deferribacter_desulfuricans_ssm1" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=639282 --full-name="Deferribacter desulfuricans SSM1" --short-name="Ddes"

Loaded 2374 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cnitroreducens  --remote-name="calditerrivibrio_nitroreducens_dsm_19672" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=768670 --full-name="Calditerrivibrio nitroreducens DSM 19672" --short-name="Cnit"

Loaded 2100 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dturgidum --remote-name="dictyoglomus_turgidum_dsm_6724" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=515635 --full-name="Dictyoglomus turgidum DSM 6724" --short-name="Dtur"

Loaded 1744 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dthermophilum --remote-name="dictyoglomus_thermophilum_h_6_12" --subsection="bacteria_25_collection" --nuclear-genetic-code=11 --taxid=309799 --full-name="Dictyoglomus thermophilum H-6-12" --short-name="Dithe"

Loaded 1912 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Eminutum  --remote-name="elusimicrobium_minutum_pei191" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=445932 --full-name="Elusimicrobium minutum Pei191" --short-name="Emin"

Loaded 1529 CDS genes...


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gaurantiaca --remote-name="gemmatimonas_aurantiaca_t_27" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=379066 --full-name="Gemmatimonas aurantiaca T-27" --short-name="Gaur"

Loaded 3935 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gphototrophica --remote-name="gemmatimonas_phototrophica" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=1379270 --full-name="Gemmatimonas phototrophica" --short-name="Gpho"

Loaded 3388 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Laraneosa  --remote-name="lentisphaera_araneosa_htcc2155" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=313628 --full-name="Lentisphaera araneosa HTCC2155" --short-name="Lara"

Loaded 5104 CDS genes...
--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ndefluvii --remote-name="nitrospira_defluvii" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=330214 --full-name="Nitrospira defluvii" --short-name="Ndef"

Loaded 4268 CDS genes...

--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tacidaminovorans  --remote-name="thermanaerovibrio_acidaminovorans_dsm_6589" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=525903 --full-name="Thermanaerovibrio acidaminovorans DSM 6589" --short-name="Tvaci"

Loaded 1738 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tcommune  --remote-name="thermodesulfobacterium_commune_dsm_2178" --subsection="bacteria_70_collection" --nuclear-genetic-code=11 --taxid=289377 --full-name="Thermodesulfobacterium commune DSM 2178" --short-name="Tcom"

Loaded 1453 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tindicus  --remote-name="thermodesulfatator_indicus_dsm_15286" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=667014 --full-name="Thermodesulfatator indicus DSM 15286" --short-name="Tind"

Loaded 2195 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nhollandica  --remote-name="nitrolancea_hollandica_lb" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=1129897 --full-name="Nitrolancea hollandica Lb" --short-name="Nhol"

Loaded 3969 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sthermophilus --remote-name="sphaerobacter_thermophilus_dsm_20745" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=479434 --full-name="Sphaerobacter thermophilus DSM 20745" --short-name="Spth"

Loaded 3485 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Amuciniphila --remote-name="akkermansia_muciniphila_atcc_baa_835" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=349741 --full-name="Akkermansia muciniphila ATCC BAA-835" --short-name="Amuc"

Loaded 2138 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Minfernorum  --remote-name="methylacidiphilum_infernorum_v4" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=481448 --full-name="Methylacidiphilum infernorum V4" --short-name="Minf"

Loaded 2472 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mschaedleri  --remote-name="mucispirillum_schaedleri_asf457" --subsection="bacteria_45_collection" --nuclear-genetic-code=11 --taxid=1379858 --full-name="Mucispirillum schaedleri ASF457" --short-name="Msch"

Loaded 2144 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mbavaricum --remote-name="candidatus_magnetobacterium_bavaricum" --subsection="bacteria_115_collection" --nuclear-genetic-code=11 --taxid=29290 --full-name="Candidatus Magnetobacterium bavaricum" --short-name="Mbav"

Loaded 6537 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tyellowstonii  --remote-name="thermodesulfovibrio_yellowstonii_dsm_11347" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=289376 --full-name="Thermodesulfovibrio yellowstonii DSM 11347" --short-name="Tyel"

Loaded 2033 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cevryensis  --remote-name="cloacibacillus_evryensis_dsm_19522" --subsection="bacteria_60_collection" --nuclear-genetic-code=11 --taxid=866499 --full-name="Cloacibacillus evryensis DSM 19522" --short-name="Cevr"

Loaded 1082 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tlienii  --remote-name="thermovirga_lienii_dsm_17291" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=580340 --full-name="Thermovirga lienii DSM 17291" --short-name="Tlie"

Loaded 1875 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Amobile  --remote-name="anaerobaculum_mobile_dsm_13181" --subsection="bacteria_16_collection" --nuclear-genetic-code=11 --taxid=891968 --full-name="Anaerobaculum mobile DSM 13181" --short-name="Amob"

Loaded 2017 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Oterrae  --remote-name="opitutus_terrae_pb90_1" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=452637 --full-name="Opitutus terrae PB90-1" --short-name="Oter"

Loaded 4612 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cakajimensis  --remote-name="coraliomargarita_akajimensis_dsm_45221" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=583355 --full-name="Coraliomargarita akajimensis DSM 45221" --short-name="Caka"

Loaded 3120 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tafricanus  --remote-name="thermosipho_africanus_tcf52b" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=484019 --full-name="Thermosipho africanus TCF52B" --short-name="Tafr"

Loaded 1956 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mprima --remote-name="mesotoga_prima_mesg1_ag_4_2" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=660470 --full-name="Mesotoga prima MesG1.Ag.4.2" --short-name="Mpri"

Loaded 2574 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Caurantiacus  --remote-name="chloroflexus_aurantiacus_j_10_fl" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=324602 --full-name="Chloroflexus aurantiacus J-10-fl" --short-name="Caur"

Loaded 3853 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Csomerae --remote-name="cetobacterium_somerae_atcc_baa_474" --subsection="bacteria_44_collection" --nuclear-genetic-code=11 --taxid=1319815 --full-name="Cetobacterium somerae ATCC BAA-474" --short-name="Csom"

Loaded 2975 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ipolytropus  --remote-name="ilyobacter_polytropus_dsm_2926" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=572544 --full-name="Ilyobacter polytropus DSM 2926" --short-name="Ipol"

Loaded 2880 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lgoodfellowii  --remote-name="leptotrichia_goodfellowii_f0264" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=596323 --full-name="Leptotrichia goodfellowii F0264" --short-name="Lgoo"

Loaded 2374 CDS genes...
Skipped genes: ['EEY35095']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Stermitidis  --remote-name="sebaldella_termitidis_atcc_33386" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=526218 --full-name="Sebaldella termitidis ATCC 33386" --short-name="Ster"

Loaded 4150 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Smoniliformis  --remote-name="streptobacillus_moniliformis_dsm_12112" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=519441 --full-name="Streptobacillus moniliformis DSM 12112" --short-name="Smon"

Loaded 1442 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Maustralicum  --remote-name="mesorhizobium_australicum_wsm2073" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=754035 --full-name="Mesorhizobium australicum WSM2073" --short-name="Maus"

Loaded 5792 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bselenitireducens  --remote-name="_bacillus_selenitireducens_mls10" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=439292 --full-name="Bacillus selenitireducens MLS10" --short-name="Bsel"

Loaded 3255 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aferrivorans  --remote-name="acidithiobacillus_ferrivorans_ss3" --subsection="bacteria_1_collection" --nuclear-genetic-code=11 --taxid=743299 --full-name="Acidithiobacillus ferrivorans SS3" --short-name="Afvo"

Loaded 3093 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bbacteriovorus  --remote-name="bdellovibrio_bacteriovorus_hd100" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=264462 --full-name="Bdellovibrio bacteriovorus HD100" --short-name="Bbac"

Loaded 3583 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hmarinus  --remote-name="halobacteriovorax_marinus_sj" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=862908 --full-name="Halobacteriovorax marinus SJ" --short-name="Hmar"

Loaded 3231 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gferrihydriticus  --remote-name="geoalkalibacter_ferrihydriticus_dsm_17813" --subsection="bacteria_91_collection" --nuclear-genetic-code=11 --taxid=1121915 --full-name="Geoalkalibacter ferrihydriticus DSM 17813" --short-name="Gfer"

Loaded 2898 CDS genes...
Skipped genes: ['KIH75343', 'KIH75344', 'KIH77146', 'KIH77861', 'KIH77862', 'KIH77877', 'KIH77878', 'KIH77897', 'KIH78006', 'KIH78007', 'KIH78011', 'KIH78085', 'KIH78151', 'KIH78152', 'KIH75345', 'KIH75350', 'KIH75355', 'KIH75341', 'KIH75389', 'KIH75856', 'KIH75857', 'KIH75858', 'KIH75495', 'KIH75630', 'KIH75599', 'KIH76026', 'KIH76165', 'KIH75347', 'KIH76001', 'KIH76002']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Glovleyi  --remote-name="geobacter_lovleyi_sz" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=398767 --full-name="Geobacter lovleyi SZ" --short-name="Glov"

Loaded 3685 CDS genes...

--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Enorvegicus --remote-name="enterovibrio_norvegicus_ff_454" --subsection="bacteria_179_collection" --nuclear-genetic-code=11 --taxid=1185651 --full-name="Enterovibrio norvegicus FF-454" --short-name="Enor"

Loaded 4282 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Vfischeri  --remote-name="vibrio_fischeri_mj11" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=388396 --full-name="Vibrio fischeri MJ11" --short-name="Vfis"

Loaded 4039 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sdenitrificans  --remote-name="sulfurimonas_denitrificans_dsm_1251" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=326298 --full-name="Sulfurimonas denitrificans DSM 1251" --short-name="Sden"

Loaded 2096 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dpuniceus --remote-name="deinococcus_puniceus" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=1182568 --full-name="Deinococcus puniceus" --short-name="Dpun"

Loaded 2617 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Toshimai  --remote-name="thermus_oshimai_jl_2" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=751945 --full-name="Thermus oshimai JL-2" --short-name="Tosh"

Loaded 2435 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dgeothermalis  --remote-name="deinococcus_geothermalis_dsm_11300" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=319795 --full-name="Deinococcus geothermalis DSM 11300 str. DSM11300" --short-name="Dgeo"

Loaded 3054 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cmichiganensis  --remote-name="clavibacter_michiganensis_subsp_michiganensis_ncppb_382" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=443906 --full-name="Clavibacter michiganensis subsp. michiganensis NCPPB 382" --short-name="Cmic"

Loaded 3079 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Csp.MLB32 --remote-name="cryobacterium_sp_mlb_32" --subsection="bacteria_84_collection" --nuclear-genetic-code=11 --taxid=1529318 --full-name="Cryobacterium sp. MLB-32" --short-name="CMLB32"

Loaded 3210 CDS genes...
Skipped genes: ['KFF58126', 'KFF59703', 'KFF58862', 'KFF58863']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cflaccumfaciens --remote-name="curtobacterium_flaccumfaciens_ucd_aku" --subsection="bacteria_49_collection" --nuclear-genetic-code=11 --taxid=1292022 --full-name="Curtobacterium flaccumfaciens UCD-AKU" --short-name="Cfla"

Loaded 3386 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rtoxicus --remote-name="rathayibacter_toxicus" --subsection="bacteria_95_collection" --nuclear-genetic-code=11 --taxid=145458 --full-name="Rathayibacter toxicus" --short-name="Rtox"

Loaded 1740 CDS genes...
--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lxyli --remote-name="leifsonia_xyli_subsp_xyli_str_ctcb07" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=281090 --full-name="Leifsonia xyli subsp. xyli str. CTCB07" --short-name="Lxyl"

Loaded 2030 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rsalmoninarum  --remote-name="renibacterium_salmoninarum_atcc_33209" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=288705 --full-name="Renibacterium salmoninarum ATCC 33209" --short-name="Rsal"

Loaded 3507 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rdentocariosa  --remote-name="rothia_dentocariosa_atcc_17931" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=762948 --full-name="Rothia dentocariosa ATCC 17931" --short-name="Rden"

Loaded 2217 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Banimalis  --remote-name="bifidobacterium_animalis_subsp_animalis_atcc_25527" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=703613 --full-name="Bifidobacterium animalis subsp. animalis ATCC 25527" --short-name="Bani"

Loaded 1538 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Malvus  --remote-name="candidatus_methanomethylophilus_alvus_mx1201" --subsection="bacteria_29_collection" --nuclear-genetic-code=11 --taxid=1236689 --full-name="Candidatus Methanomethylophilus alvus Mx1201" --short-name="Malv"

Loaded 1645 CDS genes...
Skipped genes: ['AGI85277']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Facidarmanus --remote-name="ferroplasma_acidarmanus_fer1" --subsection="bacteria_35_collection" --nuclear-genetic-code=11 --taxid=333146 --full-name="Ferroplasma acidarmanus fer1" --short-name="Faci"

Loaded 1949 CDS genes...
Skipped genes: ['AGO61923', 'AGO61924']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Szeaxanthinifaciens  --remote-name="siansivirga_zeaxanthinifaciens_cc_samt_1" --subsection="bacteria_93_collection" --nuclear-genetic-code=11 --taxid=1454006 --full-name="Siansivirga zeaxanthinifaciens CC-SAMT-1" --short-name="Szea"

Loaded 2761 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lsp5H374 --remote-name="lacinutrix_sp_5h_3_7_4" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=983544 --full-name="Lacinutrix sp. 5H-3-7-4" --short-name="L5H374"

Loaded 2967 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bargentinensis  --remote-name="bizionia_argentinensis_jub59" --subsection="bacteria_13_collection" --nuclear-genetic-code=11  --taxid=1046627 --full-name="Bizionia argentinensis JUB59" --short-name="Barg"

Loaded 3095 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gforsetii  --remote-name="gramella_forsetii_kt0803" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=411154 --full-name="Gramella forsetii KT0803" --short-name="Gfor"

Loaded 3584 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hthermophilus  --remote-name="hydrogenobacter_thermophilus_tk_6" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=608538 --full-name="Hydrogenobacter thermophilus TK-6" --short-name="Hthe"

Loaded 1894 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=HspHO --remote-name="hydrogenobaculum_sp_ho" --subsection="bacteria_32_collection" --nuclear-genetic-code=11 --taxid=547144 --full-name="Hydrogenobaculum sp. HO" --short-name="HyHO"

Loaded 1579 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sazorense --remote-name="sulfurihydrogenibium_azorense_az_fu1" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=204536 --full-name="Sulfurihydrogenibium azorense Az-Fu1" --short-name="Sazo"

Loaded 1724 CDS genes...
Skipped genes: ['ACN99392']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tammonificans  --remote-name="thermovibrio_ammonificans_hb_1" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=648996 --full-name="Thermovibrio ammonificans HB-1" --short-name="Tamm"

Loaded 1813 CDS genes...



--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Caerophila  --remote-name="caldilinea_aerophila_dsm_14535_nbrc_104270" --subsection="bacteria_2_collection" --nuclear-genetic-code=11 --taxid=926550 --full-name="Caldilinea aerophila DSM 14535 = NBRC 104270" --short-name="Caer"

Loaded 4119 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Otrichoides --remote-name="oscillochloris_trichoides_dg_6" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=765420 --full-name="Oscillochloris trichoides DG-6" --short-name="Otri"

Loaded 3231 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rcastenholzii  --remote-name="roseiflexus_castenholzii_dsm_13941" --subsection="bacteria_9_collection" --nuclear-genetic-code=11 --taxid=383372 --full-name="Roseiflexus castenholzii DSM 13941" --short-name="Rcas"

Loaded 4330 CDS genes...
--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Haurantiacus  --remote-name="herpetosiphon_aurantiacus_dsm_785" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=316274 --full-name="Herpetosiphon aurantiacus DSM 785" --short-name="Haur"

Loaded 5278 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kracemifer  --remote-name="ktedonobacter_racemifer_dsm_44963" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=485913 --full-name="Ktedonobacter racemifer DSM 44963" --short-name="Krac"

Loaded 11452 CDS genes...
Skipped genes: ['EFH89685']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dlykanthroporepellens  --remote-name="dehalogenimonas_lykanthroporepellens_bl_dc_9" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=552811 --full-name="Dehalogenimonas lykanthroporepellens BL-DC-9" --short-name="Dlyk"

Loaded 1659 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"



--11--

--------------------------------------

# testing:
#~/anaconda2/bin/python2 gff3_extract_coding_genes.py --gff3=./data/JGI/PhytozomeV12/MpusillaCCMP1545/annotation/MpusillaCCMP1545_228_v3.0.gene.gff3.gz --variant=JGI --output-gene-ids=/a/home/cc/students/enginer/mich1/rnafold/data/Ensembl//coding_genes_list.Mpus.list --transl-table=1


~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=564608 --full-name="Micromonas pusilla CCMP1545" --short-name="Mpus" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/PhytozomeV12/MpusillaCCMP1545/annotation/MpusillaCCMP1545_228_v3.0.gene.gff3.gz --cds=./data/JGI/PhytozomeV12/MpusillaCCMP1545/annotation/MpusillaCCMP1545_228_v3.0.cds_primaryTranscriptOnly.fa.gz --ignore-id-check

Loaded 10645 CDS genes...
Skipped genes: ['60082', '60120', '60207', '52802', '71079', '39637', '70281', '57995', '46013', '53988', '49838', '49891', '40042', '127899', '52238']


--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=3046 --full-name="Dunaliella salina" --short-name="Dsal" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/PhytozomeV12/Dsalina/annotation/Dsalina_325_v1.0.gene.gff3.gz  --cds=./data/JGI/PhytozomeV12/Dsalina/annotation/Dsalina_325_v1.0.cds_primaryTranscriptOnly.fa.gz

Loaded 16020 CDS genes...
Skipped genes: ['Dusal.0225s00005.1', 'Dusal.0838s00004.1', 'Dusal.0694s00003.1', 'Dusal.0694s00004.1', 'Dusal.0718s00005.1', 'Dusal.0093s00014.1', 'Dusal.2903s00001.1', 'Dusal.0026s00023.1', 'Dusal.0236s00018.1',
...
...
...
, 'Dusal.0078s00009.1', 'Dusal.0529s00008.1', 'Dusal.0338s00011.1', 'Dusal.0406s00010.1', 'Dusal.3352s00001.1', 'Dusal.0080s00004.1', 'Dusal.1027s00005.1']

--------------------------------------



~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=3067 --full-name="Volvox carteri" --short-name="Vcar" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/PhytozomeV12/Vcarteri/annotation/Vcarteri_317_v2.1.gene.gff3.gz --cds=./data/JGI/PhytozomeV12/Vcarteri/annotation/Vcarteri_317_v2.1.cds_primaryTranscriptOnly.fa.gz 

Loaded 14246 CDS genes...
Skipped genes: ['Vocar.0008s0115.1']


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=70448 --full-name="Ostreococcus tauri" --short-name="Otau" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/Ostta1115_2/Ostta1115_2_GeneCatalog_20170131.gff3.gz  --cds=./data/JGI/Ostta1115_2/Ostta1115_2_GeneCatalog_CDS_20170131.fasta.gz 


# This on doesn't work (unusual id matching rule...)

--------------------------------------

nice ~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=574566 --full-name="Coccomyxa subellipsoidea C-169" --short-name="Csub" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/PhytozomeV12/CsubellipsoideaC169/annotation/CsubellipsoideaC_169_227_v2.0.gene.gff3.gz --cds=./data/JGI/PhytozomeV12/CsubellipsoideaC169/annotation/CsubellipsoideaC_169_227_v2.0.cds_primaryTranscriptOnly.fa.gz

Loaded 9629 CDS genes...

nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 574566  --from-shuffle 0 --to-shuffle 19 --window-step 10 --completion-notification=True --insert-sequences-only=True

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=29656 --full-name="Spirodela polyrhiza" --short-name="Spol" --variant=JGI --fetch-ftp-files=False --gff3=./data/JGI/PhytozomeV12/Spolyrhiza/annotation/Spolyrhiza_290_v2.gene.gff3.gz --cds=./data/JGI/PhytozomeV12/Spolyrhiza/annotation/Spolyrhiza_290_v2.cds_primaryTranscriptOnly.fa.gz

Warning: 141 entries skipped and 0 entries not found
Processed 19482 CDS entries
(out of 19482 CDS entries for this species)
Loaded 19482 CDS genes...
Skipped genes: ['Spipo12G0049600', 'Spipo12G0031500', 'Spipo12G0063100', 'Spipo12G0053400', 'Spipo12G0018700', 'Spipo4G0000700', 'Spipo4G0108300', 'Spipo4G0115300', 'Spipo4G0097100', 'Spipo4G0016800', 'Spipo4G0042000', 'Spipo4G0065000', 'Spipo4G0052200', 'Spipo4G0003900', 'Spipo4G0030700', 'Spipo22G0009900', 'Spipo21G0036800', 'Spipo21G0035400', 'Spipo21G0042300', 'Spipo6G0026500', 'Spipo6G0033800', 'Spipo6G0049200', 'Spipo6G0025300', 'Spipo6G0037700',
...
...
...
, 'Spipo10G0010900', 'Spipo10G0008300', 'Spipo31G0002900', 'Spipo31G0013100', 'Spipo1G0020900', 'Spipo1G0009800', 'Spipo1G0032700', 'Spipo1G0085300', 'Spipo1G0104400', 'Spipo1G0125900', 'Spipo11G0054900', 'Spipo11G0012400', 'Spipo11G0021200']

--------------------------------------

ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_stramenopiles1_collection/thalassiosira_oceanica_ccmp1005/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Toceanica  --remote-name="thalassiosira_oceanica_ccmp1005" --subsection="protists_stramenopiles1_collection" --nuclear-genetic-code=1 --taxid=159749 --full-name="Thalassiosira oceanica CCMP1005" --short-name="Toce"


Success, but file content is too small to be used (142 proteins)

--------------------------------------

#~/anaconda2/bin/python2 gff3_extract_coding_genes.py --gff3=./data/NCBI/Fcylindrus/GCA_001750085.1_Fracy1_genomic.gff.gz --variant=NCBI --output-gene-ids=/a/home/cc/students/enginer/mich1/rnafold/data/Ensembl/coding_genes_list.Fcyl.list --transl-table=1


~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=635003 --full-name="Fragilariopsis cylindrus CCMP1102" --short-name="Fcyl" --variant=NCBI --fetch-ftp-files=False --gff3=./data/NCBI/Fcylindrus/GCA_001750085.1_Fracy1_genomic.gff.gz  --cds=./data/NCBI/Fcylindrus/GCA_001750085.1_Fracy1_cds_from_genomic.fna.gz


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --nuclear-genetic-code=1 --taxid=1519565 --full-name="Fistulifera solaris" --short-name="Fsol" --variant=NCBI --fetch-ftp-files=False --gff3=./data/NCBI/Fsolaris/   --cds=./data/NCBI/Fsolaris/ 

Loaded 20379 CDS genes...
Skipped genes


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Clentocellum --remote-name="clostridium_lentocellum_dsm_5427" --subsection="bacteria_5_collection" --nuclear-genetic-code=11 --taxid=642492 --full-name="Clostridium lentocellum DSM 5427" --short-name="Clen"

Loaded 4182 CDS genes...

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 642492 --from-shuffle 0 --to-shuffle 19 --window-step 10 --insert-sequences-only=True --completion-notification=True

--------------------------------------


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Lgarvieae --remote-name="lactococcus_garvieae_lg2" --subsection="bacteria_22_collection" --nuclear-genetic-code=11 --taxid=420890 --full-name="Lactococcus garvieae Lg2" --short-name="Lgar"

Loaded 1968 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Uparvum --remote-name="ureaplasma_parvum_serovar_3_str_atcc_27815" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=505682 --full-name="Ureaplasma parvum serovar 3 str. ATCC 27815" --short-name="Upar"

Loaded 609 CDS genes...

Error - loaded using code 11!!! TODO - redo this...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Magalactiae --remote-name="mycoplasma_agalactiae_pg2" --subsection="bacteria_7_collection" --nuclear-genetic-code=4 --taxid=347257 --full-name="Mycoplasma agalactiae PG2" --short-name="Maga"

Loaded 751 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pmobilis  --remote-name="petrotoga_mobilis_sj95" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=403833 --full-name="Petrotoga mobilis SJ95" --short-name="Pmob"

Loaded 1898 CDS genes...

--------------------------------------

ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/bigelowiella_natans/dna/
                            /pub/protists/release-36/fasta//bigelowiella_natans/dna/Bigelowiella_natans.GCA_000320545.1.dna_rm.toplevel.fa.gz
Note: Irregular path (no subsection)

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bnatans --remote-name="bigelowiella_natans" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=753081 --full-name="Bigelowiella natans" --short-name="Bnat"

Loaded 21693 CDS genes...
Skipped genes: ['JGI_V11_130201', 'JGI_V11_91574', 'JGI_V11_130620', 'JGI_V11_65565', 'JGI_V11_130629', 'JGI_V11_134464', 'JGI_V11_136073', 'JGI_V11_140626', 'JGI_V11_141610', 'JGI_V11_141730', 'JGI_V11_143802', 'JGI_V11_145141', 'JGI_V11_145410']

--------------------------------------

ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_rhizaria1_collection/lotharella_oceanica/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Loceanica --remote-name="lotharella_oceanica" --section="protists" --subsection="protists_rhizaria1_collection" --nuclear-genetic-code=1 --taxid=641309 --full-name="Lotharella oceanica" --short-name="Loce"

Loaded 668 CDS genes...


--------------------------------------

ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/emiliania_huxleyi/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ehuxleyi --remote-name="emiliania_huxleyi" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=280463 --full-name="Emiliania huxleyi CCMP1516" --short-name="Ehux"

Loaded 38550 CDS genes...
Skipped genes: ['EOD14772', 'EOD07513', 'EOD38369', 'EOD13985']


--------------------------------------

ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/protists_cryptophyta1_collection/chroomonas_mesostigmatica_ccmp1168/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cmesostigmatica  --remote-name="chroomonas_mesostigmatica_ccmp1168" --section="protists" --subsection="protists_cryptophyta1_collection" --nuclear-genetic-code=1 --taxid=195065 --full-name="Chroomonas mesostigmatica CCMP1168" --short-name="Cmes"

Loaded 505 CDS genes...

--------------------------------------


ftp://ftp.ensemblgenomes.org/pub/protists/release-36/fasta/guillardia_theta/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gtheta  --remote-name="guillardia_theta" --section="protists" --subsection="" --nuclear-genetic-code=1 --taxid=905079 --full-name="Guillardia theta CCMP2712" --short-name="Gthe"

Loaded 24968 CDS genes...
Skipped genes: ['EKX37680']

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cparamecium --remote-name="cryptomonas_paramecium" --section="protists" --subsection="protists_cryptophyta1_collection" --nuclear-genetic-code=1 --taxid=2898 --full-name="Cryptomonas paramecium" --short-name="Cpara"

Loaded 466 CDS genes...


--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hmediterranei  --remote-name="haloferax_mediterranei_atcc_33500" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=523841 --full-name="Haloferax mediterranei ATCC 33500" --short-name="Hmed"

Loaded 3828 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hwalsbyi --remote-name="haloquadratum_walsbyi_dsm_16790" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=362976 --full-name="Haloquadratum walsbyi DSM 16790" --short-name="Hwal"

Loaded 2551 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ngregoryi --remote-name="natronobacterium_gregoryi_sp2" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=797304 --full-name="Natronobacterium gregoryi SP2" --short-name="Ngre"

Loaded 3656 CDS genes...

--------------------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"


--06--

>>> Upsert for group 15

> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

expected = [123214, 153151, 263820, 272567, 309801, 326427, 391009, 414004, 429572, 432331, 436308, 443254, 452652, 469599, 469615, 491915, 498848, 504728, 507754, 521045, 572478, 583356, 589924, 638303, 649638, 670487, 768679, 859192, 868864, 869210, 926569, 937777, 1056495, 1072681, 1121088, 1123384, 1198449, 1229908, 1237085, 1273541, 1295009, 1298851, 1330330, 1343739, 1432656, 1469144, 1577684, 1630693, 1737403]

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

(2602488, Counter(), Counter({1630693: 161511, 452652: 156870, 937777: 87696, 153151: 79317, 326427: 78330, 1469144: 76104, 1237085: 74739, 272567: 69363, 1121088: 67956, 926569: 66507, 504728: 63294, 649638: 61740, 309801: 59976, 491915: 59304, 429572: 57435, 498848: 52941, 572478: 52311, 589924: 52038, 859192: 51009, 670487: 49728, 469599: 48804, 869210: 46242, 521045: 44415, 1123384: 43974, 1432656: 43764, 768679: 43008, 123214: 43008, 1273541: 42735, 443254: 42693, 414004: 42210, 1343739: 41727, 583356: 40467, 1330330: 39837, 1229908: 39543, 391009: 39375, 1072681: 39102, 1295009: 38346, 436308: 37632, 1298851: 36897, 507754: 34923, 1198449: 34524, 469615: 33600, 638303: 33453, 432331: 32970, 263820: 32214, 868864: 31626, 1056495: 30975, 298386: 29253, 1737403: 24822, 1577684: 12180}))

# None found; updates by genome (2602488 rows total after deleting bad ones):

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 5 groups of ~550000 rows each

% group 1/5
% dummy_id between       1 and  550000
% group 2/5
% dummy_id between  550001 and 1100000
% group 3/5
% dummy_id between 1100001 and 1650000
% group 4/5
% dummy_id between 1650001 and 2200000
% group 5/5
% dummy_id between 2200001 and 2631237

> Note: We will mark all updates included here as ext_index=15

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=15 where source=102;
Rows matched: 2602488  Changed: 2602488  Warnings: 0


select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        15 |  2602488 |
+--------+-----------+----------+


> Perform the upsert, for group 1/5 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between       1 and  550000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=15 and dummy_id between 1 and 2631237;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
|    102 |        13 |  2763727 |
|    102 |        14 |  1892457 |
|    102 |        15 |  2602488 |
+--------+-----------+----------+
14 rows in set (23 min 58.14 sec)


mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 28511765 |
+--------+----------+
1 row in set (2 min 53.59 sec)


mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |  1069497 |
|     10 | 18533026 |
|     11 | 13367860 |
+--------+----------+
3 rows in set (10 min 33.75 sec)

> Hurray - all done!



--03--

>>> Loading additional species 


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Csymbiosum  --remote-name="cenarchaeum_symbiosum_a" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=414004 --full-name="Cenarchaeum symbiosum A" --short-name="Csym"

Loaded 2011 CDS genes...
Skipped genes: ['ABK76798', 'ABK76800', 'ABK76801', 'ABK76803', 'ABK78012', 'ABK78667']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nmaritimus --remote-name="nitrosopumilus_maritimus_scm1" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=436308 --full-name="Nitrosopumilus maritimus SCM1" --short-name="Nmar"

Loaded 1795 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nlimnia --remote-name="candidatus_nitrosoarchaeum_limnia_bg20" --subsection="bacteria_34_collection" --nuclear-genetic-code=11 --taxid=859192 --full-name="Candidatus Nitrosoarchaeum limnia BG20" --short-name="Nlim"

Loaded 2634 CDS genes...



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nkoreensis --remote-name="candidatus_nitrosopumilus_koreensis_ar1" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=1229908 --full-name="Candidatus Nitrosopumilus koreensis AR1" --short-name="Nkor"

Loaded 1890 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aaeolicum --remote-name="acidiplasma_aeolicum" --subsection="bacteria_131_collection" --nuclear-genetic-code=11 --taxid=507754 --full-name="Acidiplasma aeolicum str. VT" --short-name="Aaeom"

Loaded 1696 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ptorridus --remote-name="picrophilus_torridus_dsm_9790" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=263820 --full-name="Picrophilus torridus DSM 9790" --short-name="Ptor"

Loaded 1535 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Iaggregans --remote-name="ignisphaera_aggregans_dsm_17230" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=583356 --full-name="Ignisphaera aggregans DSM 17230" --short-name="Iagg"

Loaded 1930 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Vdistributa  --remote-name="vulcanisaeta_distributa_dsm_14429" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=572478 --full-name="Vulcanisaeta distributa DSM 14429" --short-name="Vdis"

Loaded 2493 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ttenax --remote-name="thermoproteus_tenax_kra_1" --subsection="bacteria_25_collection" --nuclear-genetic-code=11 --taxid=768679 --full-name="Thermoproteus tenax Kra 1" --short-name="Tten"

Loaded 2049 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sislandicus  --remote-name="sulfolobus_islandicus_l_s_2_15" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=429572 --full-name="Sulfolobus islandicus L.S.2.15" --short-name="Sisl"

Loaded 2738 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fplacidus  --remote-name="ferroglobus_placidus_dsm_10642" --subsection="bacteria_16_collection" --nuclear-genetic-code=11 --taxid=589924 --full-name="Ferroglobus placidus DSM 10642" --short-name="Fpla"

Loaded 2480 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Clagunensis  --remote-name="caldisphaera_lagunensis_dsm_15908" --subsection="bacteria_11_collection" --nuclear-genetic-code=11 --taxid=1056495 --full-name="Caldisphaera lagunensis DSM 15908" --short-name="Clag"

Loaded 1478 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pmarina --remote-name="persephonella_marina_ex_h1" --subsection="bacteria_7_collection" --nuclear-genetic-code=11 --taxid=123214 --full-name="Persephonella marina EX-H1" --short-name="Pmar"

Loaded 2051 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Talbus  --remote-name="thermocrinis_albus_dsm_14484" --subsection="bacteria_23_collection" --nuclear-genetic-code=11 --taxid=638303 --full-name="Thermocrinis albus DSM 14484" --short-name="Talb"

Loaded 1593 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ttakaii --remote-name="thermosulfidibacter_takaii_abi70s6" --subsection="bacteria_182_collection" --nuclear-genetic-code=11 --taxid=1298851 --full-name="Thermosulfidibacter takaii ABI70S6" --short-name="Ttak"

Loaded 1757 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dthermolithotrophum  --remote-name="desulfurobacterium_thermolithotrophum_dsm_11699" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=868864 --full-name="Desulfurobacterium thermolithotrophum DSM 11699" --short-name="Dthe"

Loaded 1509 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Caggregans  --remote-name="chloroflexus_aggregans_dsm_9485" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=326427 --full-name="Chloroflexus aggregans DSM 9485" --short-name="Cagg"

Loaded 3730 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Troseum  --remote-name="thermomicrobium_roseum_dsm_5159" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=309801 --full-name="Thermomicrobium roseum DSM 5159" --short-name="Tros"

Loaded 2857 CDS genes...
Skipped genes: ['ACM06321', 'ACM05768']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Athermophila  --remote-name="anaerolinea_thermophila_uni_1" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=926569 --full-name="Anaerolinea thermophila UNI-1" --short-name="Athe"

Loaded 3167 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Syellowstonense  --remote-name="sulfurihydrogenibium_yellowstonense_ss_5" --subsection="bacteria_12_collection" --nuclear-genetic-code=11 --taxid=432331 --full-name="Sulfurihydrogenibium yellowstonense SS-5" --short-name="Syel"

Loaded 1690 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Acamini  --remote-name="aeropyrum_camini_sy1_jcm_12091" --subsection="bacteria_52_collection" --nuclear-genetic-code=11 --taxid=1198449 --full-name="Aeropyrum camini SY1 = JCM 12091" --short-name="Acam"

Loaded 1645 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pdelaneyi --remote-name="pyrodictium_delaneyi" --subsection="bacteria_176_collection" --nuclear-genetic-code=11 --taxid=1273541 --full-name="Pyrodictium delaneyi" --short-name="Pdel"

Loaded 2036 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tguaymasensis  --remote-name="thermococcus_guaymasensis_dsm_11113" --subsection="bacteria_170_collection" --nuclear-genetic-code=11 --taxid=1432656 --full-name="Thermococcus guaymasensis DSM 11113" --short-name="Tgua"

Loaded 2092 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ppacificus  --remote-name="palaeococcus_pacificus_dy20341" --subsection="bacteria_67_collection" --nuclear-genetic-code=11 --taxid=1343739 --full-name="Palaeococcus pacificus DY20341" --short-name="Ppac"

Loaded 1991 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Narchaeon --remote-name="nanohaloarchaea_archaeon_sg9" --subsection="bacteria_181_collection" --nuclear-genetic-code=11 --taxid=1737403 --full-name="Nanohaloarchaea archaeon SG9" --short-name="Narc"

Loaded 1183 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Nacidilobi --remote-name="candidatus_nanopusillus_acidilobi" --subsection="bacteria_179_collection" --nuclear-genetic-code=11 --taxid=1577684 --full-name="Candidatus Nanopusillus acidilobi" --short-name="Naci"

Loaded 587 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=HspG17 --remote-name="candidatus_haloredivivus_sp_g17" --subsection="bacteria_17_collection" --nuclear-genetic-code=11 --taxid=1072681 --full-name="Candidatus Haloredivivus sp. G17" --short-name="HG17"

Loaded 2063 CDS genes...
Skipped genes: ['EHK01414', 'EHK01921', 'EHK01924', 'EHK02188', 'EHK02189', 'EHK02206', 'EHK02219', 'EHK01352', 'EHK00820', 'EHK01320', 'EHK02374', 'EHK01705', 'EHK01709', 'EHK00743', 'EHK01361', 'EHK02592', 'EHK01759', 'EHK01663', 'EHK01664', 'EHK01665', 'EHK02058', 'EHK02059', 'EHK01471', 'EHK01909', 'EHK00908', 'EHK01549', 'EHK01241', 'EHK01716', 'EHK01722', 'EHK01723', 'EHK00844', 'EHK02010', 'EHK02014', 'EHK02171', 'EHK02172', 'EHK02175', 'EHK02291', 'EHK01345', 'EHK01347', 'EHK02470', 'EHK02628', 'EHK00641', 'EHK01934', 'EHK01935', 'EHK01762', 'EHK00762', 'EHK01054', 'EHK01419', 'EHK02422', 'EHK01111', 'EHK01658', 'EHK01659', 'EHK01999', 'EHK01725', 'EHK01045', 'EHK01048', 'EHK00822', 'EHK01099', 'EHK01456', 'EHK01800', 'EHK01805', 'EHK02583', 'EHK02584', 'EHK00909', 'EHK01524', 'EHK01564', 'EHK01567', 'EHK01203', 'EHK02497', 'EHK01318', 'EHK01322', 'EHK01323', 'EHK00895', 'EHK01626', 'EHK01629', 'EHK00773', 'EHK01735', 'EHK01236', 'EHK01158', 'EHK01573', 'EHK02493', 'EHK02494', 'EHK01404', 'EHK01405', 'EHK00548', 'EHK02105', 'EHK01023', 'EHK01031', 'EHK01248', 'EHK01251', 'EHK01453', 'EHK01455', 'EHK00900', 'EHK00796', 'EHK01792', 'EHK01542', 'EHK00961', 'EHK00935', 'EHK00904', 'EHK01117', 'EHK01654', 'EHK00511', 'EHK01303', 'EHK00992', 'EHK02034', 'EHK00578', 'EHK01132', 'EHK01574', 'EHK01576', 'EHK01380', 'EHK01381', 'EHK02064', 'EHK02065', 'EHK02073', 'EHK00983', 'EHK01307', 'EHK02223', 'EHK01892', 'EHK01071', 'EHK02646', 'EHK00926', 'EHK01593', 'EHK00624', 'EHK00633', 'EHK02575', 'EHK00839', 'EHK02029', 'EHK01153', 'EHK00916', 'EHK00780', 'EHK00781', 'EHK01422', 'EHK01424', 'EHK00587', 'EHK01896', 'EHK01213', 'EHK01932', 'EHK02246', 'EHK02253', 'EHK01093', 'EHK02111', 'EHK02116', 'EHK01830', 'EHK01885', 'EHK01886', 'EHK01398', 'EHK01635', 'EHK02149', 'EHK01781', 'EHK01784', 'EHK01786', 'EHK00645', 'EHK01691', 'EHK01827', 'EHK02298', 'EHK01115', 'EHK01359', 'EHK00922', 'EHK00923', 'EHK00924', 'EHK02030', 'EHK02472', 'EHK02651', 'EHK01642', 'EHK01460']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=GspSHPL17 --remote-name="gemmata_sp_sh_pl17" --subsection="bacteria_180_collection" --nuclear-genetic-code=11 --taxid=1630693 --full-name="Gemmata sp. SH-PL17" --short-name="GSHP"

Loaded 7704 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mruber  --remote-name="meiothermus_ruber_dsm_1279" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=504728 --full-name="Meiothermus ruber DSM 1279" --short-name="Mrub"

Loaded 3014 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tradiovictrix  --remote-name="truepera_radiovictrix_dsm_17093" --subsection="bacteria_4_collection" --nuclear-genetic-code=11 --taxid=649638 --full-name="Truepera radiovictrix DSM 17093" --short-name="Trad"

Loaded 2945 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mhydrothermalis  --remote-name="marinithermus_hydrothermalis_dsm_14884" --subsection="bacteria_5_collection" --nuclear-genetic-code=11 --taxid=869210 --full-name="Marinithermus hydrothermalis DSM 14884" --short-name="Mhyd"

Loaded 2205 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Oprofundus  --remote-name="oceanithermus_profundus_dsm_14977" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=670487 --full-name="Oceanithermus profundus DSM 14977" --short-name="Opro"

Loaded 2373 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Dperaridilitoris --remote-name="deinococcus_peraridilitoris_dsm_19664" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=937777 --full-name="Deinococcus peraridilitoris DSM 19664" --short-name="Dper"

Loaded 4183 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Taquaticus --remote-name="thermus_aquaticus_y51mc23" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=498848 --full-name="Thermus aquaticus Y51MC23" --short-name="Taqu"

Loaded 2539 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sthermoautotrophicus --remote-name="streptomyces_thermoautotrophicus" --subsection="bacteria_175_collection" --nuclear-genetic-code=11 --taxid=1469144 --full-name="Streptomyces thermoautotrophicus" --short-name="Sthe"

Loaded 4086 CDS genes...
Skipped genes: ['KWX08679']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ksetae --remote-name="kitasatospora_setae_km_6054" --subsection="bacteria_3_collection" --nuclear-genetic-code=11 --taxid=452652 --full-name="Kitasatospora setae KM-6054" --short-name="Kset"

Loaded 7569 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kpacifica --remote-name="kosmotoga_pacifica" --subsection="bacteria_118_collection" --nuclear-genetic-code=11 --taxid=1330330 --full-name="Kosmotoga pacifica" --short-name="Kpac"

Loaded 1897 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Kolearia --remote-name="kosmotoga_olearia_tbf_19_5_1" --subsection="bacteria_1_collection" --nuclear-genetic-code=11 --taxid=521045 --full-name="Kosmotoga olearia TBF 19.5.1" --short-name="Kole"

Loaded 2118 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Tmelanesiensis --remote-name="thermosipho_melanesiensis_bi429" --subsection="bacteria_19_collection" --nuclear-genetic-code=11 --taxid=391009 --full-name="Thermosipho melanesiensis BI429" --short-name="Tmel"

Loaded 1879 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Phypogea  --remote-name="pseudothermotoga_hypogea_dsm_11164_nbrc_106472" --subsection="bacteria_172_collection" --nuclear-genetic-code=11 --taxid=1123384 --full-name="Pseudothermotoga hypogea DSM 11164 = NBRC 106472" --short-name="Phyp"

Loaded 2097 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mpiezophila  --remote-name="marinitoga_piezophila_ka3" --subsection="bacteria_9_collection" --nuclear-genetic-code=11 --taxid=443254 --full-name="Marinitoga piezophila KA3" --short-name="Mpie"

Loaded 2046 CDS genes...



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bcoagulans --remote-name="bacillus_coagulans_dsm_1_atcc_7050" --subsection="bacteria_95_collection" --nuclear-genetic-code=11 --taxid=1121088 --full-name="Bacillus coagulans DSM 1 = ATCC 7050" --short-name="Bcoa"

Loaded 3253 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aflavithermus  --remote-name="anoxybacillus_flavithermus_wk1" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=491915 --full-name="Anoxybacillus flavithermus WK1" --short-name="Afla"

Loaded 2832 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ptoebii --remote-name="parageobacillus_toebii" --subsection="bacteria_173_collection" --nuclear-genetic-code=11 --taxid=153151 --full-name="Parageobacillus toebii" --short-name="Ptoe"

Loaded 3800 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Gstearothermophilus  --remote-name="geobacillus_stearothermophilus_10" --subsection="bacteria_178_collection" --nuclear-genetic-code=11 --taxid=272567 --full-name="Geobacillus stearothermophilus 10" --short-name="Gste"

Loaded 3304 CDS genes...



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ngargensis --remote-name="candidatus_nitrososphaera_gargensis_ga9_2" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=1237085 --full-name="Candidatus Nitrososphaera gargensis Ga9.2" --short-name="Ngar"

Loaded 3565 CDS genes...



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mintestinalis  --remote-name="candidatus_methanomassiliicoccus_intestinalis_issoire_mx1" --subsection="bacteria_37_collection" --nuclear-genetic-code=11 --taxid=1295009 --full-name="Candidatus Methanomassiliicoccus intestinalis Issoire-Mx1 str. Mx1-Issoire" --short-name="Mint"

Loaded 1826 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fperiodonticum --remote-name="fusobacterium_periodonticum_2_1_31" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=469599 --full-name="Fusobacterium periodonticum 2_1_31" --short-name="Fper"

Loaded 2375 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Fgonidiaformans  --remote-name="fusobacterium_gonidiaformans_atcc_25563" --subsection="bacteria_127_collection" --nuclear-genetic-code=11 --taxid=469615 --full-name="Fusobacterium gonidiaformans ATCC 25563" --short-name="Fgon"

Loaded 1618 CDS genes...

----------------------------

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"



--01--

>>> Upsert for group 14
> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

(1892457, Counter(), Counter({696747: 139104, 266834: 130788, 1435057: 113820, 196600: 105504, 226186: 101325, 258594: 101094, 243265: 98280, 1208660: 87654, 298386: 85596, 190650: 78267, 1304892: 68586, 226185: 68040, 224914: 67074, 211586: 64407, 190485: 64302, 196627: 64113, 272626: 63840, 160492: 59283, 1432562: 52185, 176280: 50946, 431947: 43701, 273121: 42924, 747: 42756, 233412: 35574, 138677: 22428, 272635: 16275, 203907: 12201, 107806: 12054, 3218: 336}))

# None found; updates by genome (1892457 rows total after deleting bad ones):

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 4 groups of ~500000 rows each

% group 1/4
% dummy_id between       1 and  500000
% group 2/4
% dummy_id between  500001 and 1000000
% group 3/4
% dummy_id between 1000001 and 1500000
% group 4/4
% dummy_id between 1500001 and 2000000

> Note: We will mark all updates included here as ext_index=14

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=14 where source=102;
Rows matched: 1892457  Changed: 1892457  Warnings: 0


select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        14 |  1892457 |
+--------+-----------+----------+
1 row in set (31.09 sec)


> Perform the upsert, for group 1/4 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 1 and 500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=14 and dummy_id between 1 and 2000000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
|    102 |        13 |  2763727 |
|    102 |        14 |  1892457 |
+--------+-----------+----------+
13 rows in set (28 min 14.18 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 25909277 |
+--------+----------+
1 row in set (3 min 6.59 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |   945589 |
|     10 | 18533026 |
|     11 | 10917124 |
+--------+----------+
3 rows in set (9 min 28.42 sec)


> Hurray - all done!



July

--29--

>>> Loading additional species -- this time (for the first time) using ingest_new_genome.py...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Wsuccinogenes --remote-name="wolinella_succinogenes_dsm_1740" --nuclear-genetic-code=11 --taxid=273121 --full-name="Wolinella succinogenes DSM 1740" --short-name="Wsuc"


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Vvulnificus --remote-name="vibrio_vulnificus_yj016" --subsection="bacteria_24_collection" --nuclear-genetic-code=11 --taxid=196600 --full-name="Vibrio vulnificus YJ016" --short-name="Vvul"



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pluminescens --remote-name="photorhabdus_luminescens_subsp_laumondii_tto1" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=243265 --full-name="Photorhabdus luminescens subsp. laumondii TTO1" --short-name="Plum"

Loaded 4683 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bparapertussis --remote-name="bordetella_parapertussis_bpp5" --subsection="bacteria_13_collection" --nuclear-genetic-code=11 --taxid=1208660 --full-name="Bordetella parapertussis Bpp5" --short-name="Bpar"

Loaded 4184 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Atumefaciens --remote-name="agrobacterium_tumefaciens_lba4213_ach5_" --subsection="bacteria_65_collection" --nuclear-genetic-code=11 --taxid=1435057 --full-name="Agrobacterium tumefaciens LBA4213 (Ach5)" --short-name="Atum"

Loaded 5425 CDS genes...
Skipped genes: ['AHK04822', 'AHK02705', 'AHK02711', 'AHK04590', 'AHK04595', 'AHJ99959', 'AHK02181']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Xfastidiosa --remote-name="xylella_fastidiosa_9a5c" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=160492 --full-name="Xylella fastidiosa 9a5c" --short-name="Xfas"
Loaded 2832 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Xaxonopodis --remote-name="xanthomonas_axonopodis_xac29_1" --subsection="bacteria_27_collection" --nuclear-genetic-code=11 --taxid=1304892 --full-name="Xanthomonas axonopodis Xac29-1" --short-name="Xaxo"

Loaded 4404 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Xcampestris --remote-name="xanthomonas_campestris_pv_campestris_str_atcc_33913" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=190485 --full-name="Xanthomonas campestris pv. campestris str. ATCC 33913" --short-name="Xcam"

Loaded 4180 CDS genes...
Skipped genes: ['AAM39820']



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Soneidensis --remote-name="shewanella_oneidensis_mr_1" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=211586 --full-name="Shewanella oneidensis MR-1" --short-name="Sone"

Loaded 4193 CDS genes...
Skipped genes: ['AAN56440', 'AAN56591', 'AAN57651']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pprofundum --remote-name="photobacterium_profundum_ss9" --subsection="bacteria_9_collection" --nuclear-genetic-code=11 --taxid=298386 --full-name="Photobacterium profundum SS9" --short-name="Ppro"

Loaded 5469 CDS genes...
Skipped genes: ['CAG22210', 'CAG22628', 'CAG22807', 'CAG22946', 'CAG23086', 'CAG23113', 'CAG23455', 'CAG18592', 'CAG20299', 'CAG20300', 'CAG21724']



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Hducreyi --remote-name="haemophilus_ducreyi_35000hp" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=233412 --full-name="Haemophilus ducreyi 35000HP" --short-name="Hduc"

Loaded 1717 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pmultocida --remote-name="pasteurella_multocida_gca_000754275" --subsection="bacteria_85_collection" --nuclear-genetic-code=11 --taxid=747 --full-name="Pasteurella multocida str. ATCC 43137" --short-name="Pmul"

Loaded 2041 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bfloridanus --remote-name="candidatus_blochmannia_floridanus" --subsection="bacteria_8_collection" --nuclear-genetic-code=11 --taxid=203907 --full-name="Candidatus Blochmannia floridanus" --short-name="Bflo"

Loaded 583 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Baphidicola --remote-name="buchnera_aphidicola_str_aps_acyrthosiphon_pisum_" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=107806 --full-name="Buchnera aphidicola str. APS (Acyrthosiphon pisum)" --short-name="Baph"
Loaded 574 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bmelitensis --remote-name="brucella_melitensis_bv_1_str_16m" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=224914 --full-name="Brucella melitensis bv. 1 str. 16M" --short-name="Bmel"

Loaded 3195 CDS genes...
Skipped genes: ['AAL51821', 'AAL52787', 'AAL53087']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Smeliloti --remote-name="sinorhizobium_meliloti_1021" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=266834 --full-name="Sinorhizobium meliloti 1021" --short-name="Smel"

Loaded 6231 CDS genes...
Skipped genes: ['AAK64898', 'AAK65550']


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Rpalustris --remote-name="rhodopseudomonas_palustris_cga009" --subsection="bacteria_18_collection" --nuclear-genetic-code=11 --taxid=258594 --full-name="Rhodopseudomonas palustris CGA009" --short-name="Rpal"

Loaded 4822 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ccrescentus --remote-name="caulobacter_crescentus_cb15" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=190650 --full-name="Caulobacter crescentus CB15" --short-name="Ccre"

Loaded 3737 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Sepidermidis  --remote-name="staphylococcus_epidermidis_atcc_12228" --subsection="bacteria_14_collection" --nuclear-genetic-code=11 --taxid=176280 --full-name="Staphylococcus epidermidis ATCC 12228" --short-name="Sepi"

Loaded 2485 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Efaecalis --remote-name="enterococcus_faecalis_v583" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=226185 --full-name="Enterococcus faecalis V583" --short-name="Efae"

Loaded 3265 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Mpulmonis --remote-name="mycoplasma_pulmonis_uab_ctip" --subsection="bacteria_21_collection" --nuclear-genetic-code=11 --taxid=272635 --full-name="Mycoplasma pulmonis UAB CTIP" --short-name="Mpul"

Loaded 782 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Cglutamicum  --remote-name="corynebacterium_glutamicum_atcc_13032" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=196627 --full-name="Corynebacterium glutamicum ATCC 13032" --short-name="Cglu"

Loaded 3057 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Ssediminis --remote-name="salinicoccus_sediminis" --subsection="bacteria_110_collection" --nuclear-genetic-code=11 --taxid=1432562 --full-name="Salinicoccus sediminis" --short-name="Ssed"

Loaded 2489 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Linnocua --remote-name="listeria_innocua_clip11262" --subsection="bacteria_15_collection" --nuclear-genetic-code=11 --taxid=272626 --full-name="Listeria innocua Clip11262" --short-name="Linn"

Loaded 3043 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Aplatensis --remote-name="arthrospira_platensis_nies_39" --subsection="bacteria_2_collection" --nuclear-genetic-code=11 --taxid=696747 --full-name="Arthrospira platensis NIES-39" --short-name="Apla"

Loaded 6630 CDS genes...


~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Pgingivalis --remote-name="porphyromonas_gingivalis_atcc_33277" --subsection="bacteria_20_collection" --nuclear-genetic-code=11 --taxid=431947 --full-name="Porphyromonas gingivalis ATCC 33277" --short-name="Pgin"

Loaded 2090 CDS genes...

ftp://ftp.ensemblgenomes.org/pub/bacteria/release-36/fasta/bacteria_0_collection/bacteroides_thetaiotaomicron_vpi_5482/dna/

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=Bthetaiotaomicron --remote-name="bacteroides_thetaiotaomicron_vpi_5482" --subsection="bacteria_0_collection" --nuclear-genetic-code=11 --taxid=226186 --full-name="Bacteroides thetaiotaomicron VPI-5482" --short-name="Bthe"

Loaded 4825 CDS genes...

~/anaconda2/bin/python2 ingest_new_genome.py --local-name=CpneumoniaeJ138 --remote-name="chlamydophila_pneumoniae_j138" --subsection="bacteria_10_collection" --nuclear-genetic-code=11 --taxid=138677 --full-name="Chlamydophila pneumoniae J138" --short-name="Cpne.J138"

Loaded 1068 CDS genes...
Skipped genes: ['BAA98519']

----------------------------



~/anaconda2/bin/python2 ingest_new_genome.py --local-name=XX --remote-name="" --subsection="" --nuclear-genetic-code=11 --taxid=X --full-name="" --short-name="X"




--28--

>>> Upsert for group 13
> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True
Total update records: 2782185

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

(2763727, Counter(), Counter({104782: 327852, 27923: 326635, 164328: 317226, 1397361: 216048, 347515: 174279, 1245935: 143724, 4927: 131481, 1574623: 119364, 436907: 111951, 267608: 107016, 203124: 93156, 243365: 92379, 272558: 84798, 345663: 75327, 221109: 73290, 220668: 65121, 407035: 55503, 228410: 51702, 212717: 51072, 1165094: 47397, 190304: 42714, 283166: 31248, 272634: 14448, 243273: 9996}))

# None found; updates by genome (2763727 rows total after deleting bad ones):

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 5 groups of ~550000 rows each

% group 1/5
% dummy_id between       1 and  550000
% group 2/5
% dummy_id between  550001 and 1100000
% group 3/5
% dummy_id between 1100001 and 1650000
% group 4/5
% dummy_id between 1650001 and 2200000
% group 5/5
% dummy_id between 2200001 and 2800000

> Note: We will mark all updates included here as ext_index=13

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=13 where source=102;

Rows matched: 2763727  Changed: 2763727  Warnings: 0


select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        13 |  2763727 |
+--------+-----------+----------+
1 row in set (42.19 sec)


> Perform the upsert, for group 1/4 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 1 and 550000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=13 and dummy_id between 1 and 2800000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
|    102 |        13 |  2763727 |
+--------+-----------+----------+
12 rows in set (26 min 30.61 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 24016820 |
+--------+----------+
1 row in set (59.69 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |   850513 |
|     10 | 18533026 |
|     11 |  9019806 |
+--------+----------+
3 rows in set (7 min 36.30 sec)


> Hurray - all done!



--24--

>>> Queue management:

> list workers
qstat -u mich1 | grep mich1 | grep worker | sort -k 11 | less

> remove workers (longest running first)
qstat -u mich1 | grep mich1 | grep worker | sort -k 11 | tail -n 20 | perl -pe "s/.power8.*//" | xargs qdel

> start workers (normal, e.g. for rnafold)
for i in `seq 01 76`; do qsub -q tamirs3 -N worker$i -l mem=1800mb,pmem=1800mb,vmem=4000mb,pvmem=4000mb,cput=4:00:00 job_dask_worker.sh ; done

> start workers (high-mem, for data processing)
for i in `seq 01 76`; do qsub -q tamirs3 -N worker$i -l mem=3200mb,pmem=3200mb,vmem=6000mb,pvmem=6000mb,cput=4:00:00 job_dask_worker.sh ; done

> start an interactive job (console):
screen qsub -q tamirs3 -N inter -l mem=8000mb,pmem=8000mb,vmem=16000mb,pvmem=16000mb,cput=8:00:00 -I

--22--

>>> Upsert recent results (second batch of result based on new Dask-based "2/7" code)
> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

# None found; updates by genome (2029043 rows total after deleting bad ones):

(2029043, Counter(), Counter({5693: 387555, 104782: 342846, 352472: 269662, 10228: 240135, 1047168: 219955, 214684: 137928, 46234: 94500, 353152: 78981, 243159: 65709, 169963: 59703, 300852: 46620, 192222: 33789, 1432061: 29967, 272633: 21693}))

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 4 groups of ~500000 rows each

% group 1/4
% dummy_id between       1 and  550000
% group 2/4
% dummy_id between  550001 and 1100000
% group 3/4
% dummy_id between 1100001 and 1650000
% group 4/4
% dummy_id between 1650001 and 2200000

> Note: We will mark all updates included here as ext_index=12

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=12 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        12 |  2029043 |
+--------+-----------+----------+
1 row in set (22.94 sec)

> Perform the upsert, for group 1/4 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 1 and 500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=12 and dummy_id between 1 and 2600000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
|    102 |        12 |  2029043 |
+--------+-----------+----------+
11 rows in set (39 min 53.59 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 21253093 |
+--------+----------+
1 row in set (7 min 3.53 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |   732885 |
|     10 | 18533026 |
|     11 |  6699830 |
+--------+----------+
3 rows in set (5 min 2.96 sec)


> Hurray - all done!



--19--

>>> Upsert recent results (second batch of result based on new Dask-based "2/7" code)
> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

# None found; updates by genome (29 genomes, 2059324 rows total after deleting bad ones):

418459: 335139, 5061: 287931, 242507: 267645, 3218: 181314, 227882: 160797, 184922: 153552, 36329: 112476, 176299: 112392, 59374: 64659, 243230: 64050, 196164: 62916, 243275: 57246, 272623: 47418, 194439: 46578, 259536: 44478, 227377: 38388, 257314: 38178, 381764: 36666, 272631: 33705, 224324: 32613, 115713: 22092, 203267: 16968, 262768: 15603

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 4 groups of ~550000 rows each

% group 1/4
% dummy_id between       1 and  550000
% group 2/4
% dummy_id between  550001 and 1400000
% group 3/4
% dummy_id between 1400001 and 2000000
% group 4/4
% dummy_id between 2000001 and 2600000

> Note: We will mark all updates included here as ext_index=11

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=11 where source=102;

select source, ext_index, count(*) from sequence_series2_updates group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |        11 |  2232804 |
+--------+-----------+----------+
1 row in set (33.90 sec)

> Perform the upsert, for group 1/4 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 1 and 500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=11 and dummy_id between 1 and 2600000;
-- select count(*) from sequence_series2_updates;
-- truncate table sequence_series2_updates;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |
|    102 |        11 |  2232804 |
+--------+-----------+----------+
10 rows in set (17 min 0.23 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 19224050 |
+--------+----------+
1 row in set (43.98 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |   618101 |
|     10 | 18533026 |
|     11 |  4144729 |
+--------+----------+
3 rows in set (5 min 12.49 sec)


> Hurray - all done!



--18--

>>> Plotting some data (for testing) - old script
~/anaconda2/bin/python2 test_process_series_data.py --taxid=267671 --num-shuffles=20 --profile=600:10:begin:0 --codonw=True

>>> Plotting some data (for testing) - new script
~/anaconda2/bin/python2 profile_plots.py --all-taxa=True --codonw=True --distributed=True --profile=600:10:begin:0
~/anaconda2/bin/python2 profile_plots.py --all-taxax=True --codonw=True --distributed=False --profile=600:10:begin:150
~/anaconda2/bin/python2 profile_plots.py --taxid=511145 --codonw=True --distributed=False --profile=600:10:begin:150


~/anaconda2/bin/python2 plot_xy.py gcdata_v2_taxid_*_profile_600_10_begin_150.h5


~/anaconda2/bin/python2 taxonomy.py --use-profile-data "gcdata_v2_taxid_*_profile_150_10_begin_0.h5"


--16--

----------------------------------------------------------------------------------------------------------------------------------

Aniger (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aniger/Aspergillus_niger.ASM285v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Anig.list --transl-table 1

redis-cli -h power5 -a rnafold set "species:taxid:5061:name" "Aspergillus niger"

redis-cli -h power5 -a rnafold set "species:name:Aspergillus niger:taxid" "5061"

redis-cli -h power5 -a rnafold set "species:taxid:5061:genomic-transl-table"  "1"

redis-cli -h power5 -a rnafold set "species:taxid:5061:tax-group"  "Fungi"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 5061 --input ./data/Ensembl/Aniger/Aspergillus_niger.ASM285v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Aniger/Aspergillus_niger.ASM285v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Anig.list

----------------------------------------------------------------------------------------------------------------------------------

Pgraminis (1) 15979

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pgraminis/Puccinia_graminis.ASM14992v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pgra.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:418459:name" "Puccinia graminis f. sp. tritici"

redis-cli -h power5 -a rnafold set "species:name:Puccinia graminis f. sp. tritici:taxid" "418459"

redis-cli -h power5 -a rnafold set "species:taxid:418459:genomic-transl-table"  "1"

redis-cli -h power5 -a rnafold set "species:taxid:418459:tax-group"  "Fungi"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 418459 --input ./data/Ensembl/Pgraminis/Puccinia_graminis.ASM14992v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Pgraminis/Puccinia_graminis.ASM14992v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Pgra.list

----------------------------------------------------------------------------------------------------------------------------------

Moryzae (1) 12989

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Moryzae/Magnaporthe_oryzae.MG8.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mory.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:242507:name" "Magnaporthe oryzae"

redis-cli -h power5 -a rnafold set "species:name:Magnaporthe oryzae:taxid" "242507"

redis-cli -h power5 -a rnafold set "species:taxid:242507:genomic-transl-table"  "1"

redis-cli -h power5 -a rnafold set "species:taxid:242507:tax-group"  "Fungi"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 242507 --input ./data/Ensembl/Moryzae/Magnaporthe_oryzae.MG8.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Moryzae/Magnaporthe_oryzae.MG8.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mory.list

----------------------------------------------------------------------------------------------------------------------------------

Onion yellow (11) 743

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ponion/Onion_yellows_phytoplasma_oy_m.ASM984v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Poni.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:262768:name" "Onion yellows phytoplasma OY-M"

redis-cli -h power5 -a rnafold set "species:name:Onion yellows phytoplasma OY-M:taxid" "262768"

redis-cli -h power5 -a rnafold set "species:taxid:262768:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:262768:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 262768 --input ./data/Ensembl/Ponion/Onion_yellows_phytoplasma_oy_m.ASM984v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Ponion/Onion_yellows_phytoplasma_oy_m.ASM984v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Poni.list


----------------------------------------------------------------------------------------------------------------------------------

Mmycoides (4)

----- RUN USING 11 BY MISTAKE - REPEAT WITH 4!! -----------
(already changed below)


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mmycoides/Mycoplasma_mycoides_subsp_mycoides_sc_str_pg1.ASM1144v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mmyc.list --transl-table 4


redis-cli -h power5 -a rnafold set "species:taxid:272632:name" "Mycoplasma mycoides subsp. mycoides SC str. PG1"

redis-cli -h power5 -a rnafold set "species:name:Mycoplasma mycoides subsp. mycoides SC str. PG1:taxid" "272632"

redis-cli -h power5 -a rnafold set "species:taxid:272632:genomic-transl-table"  "4"

redis-cli -h power5 -a rnafold set "species:taxid:272632:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272632 --input ./data/Ensembl/Mmycoides/Mycoplasma_mycoides_subsp_mycoides_sc_str_pg1.ASM1144v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mmycoides/Mycoplasma_mycoides_subsp_mycoides_sc_str_pg1.ASM1144v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mmyc.list

----------------------------------------------------------------------------------------------------------------------------------

Dradiodurans (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Dradiodurans/Deinococcus_radiodurans_r1.ASM856v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Drad.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:243230:name" "Deinococcus radiodurans R1"

redis-cli -h power5 -a rnafold set "species:name:Deinococcus radiodurans R1:taxid" "243230"

redis-cli -h power5 -a rnafold set "species:taxid:243230:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:243230:tax-group"  "Bacteria"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243230 --input ./data/Ensembl/Dradiodurans/Deinococcus_radiodurans_r1.ASM856v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Dradiodurans/Deinococcus_radiodurans_r1.ASM856v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Drad.list

----------------------------------------------------------------------------------------------------------------------------------

Aaeolicus (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aaeolicus/Aquifex_aeolicus_vf5.ASM862v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aaeo.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:224324:name" "Aquifex aeolicus VF5"

redis-cli -h power5 -a rnafold set "species:name:Aquifex aeolicus VF5:taxid" "224324"

redis-cli -h power5 -a rnafold set "species:taxid:224324:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:224324:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 224324 --input ./data/Ensembl/Aaeolicus/Aquifex_aeolicus_vf5.ASM862v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Aaeolicus/Aquifex_aeolicus_vf5.ASM862v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Aaeo.list

----------------------------------------------------------------------------------------------------------------------------------

Fnodosum (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aaeolicus/Aquifex_aeolicus_vf5.ASM862v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aaeo.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:381764:name" "Fervidobacterium nodosum Rt17-B1"

redis-cli -h power5 -a rnafold set "species:name:Fervidobacterium nodosum Rt17-B1:taxid" "381764"

redis-cli -h power5 -a rnafold set "species:taxid:381764:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:381764:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 381764 --input ./data/Ensembl/Fnodosum/Fervidobacterium_nodosum_rt17_b1.ASM1754v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Fnodosum/Fervidobacterium_nodosum_rt17_b1.ASM1754v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Fnod.list

----------------------------------------------------------------------------------------------------------------------------------

Tdenticola (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tdenticola/Treponema_denticola_atcc_35405.ASM818v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tden.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:243275:name" "Treponema denticola ATCC 35405"

redis-cli -h power5 -a rnafold set "species:name:Treponema denticola ATCC 35405:taxid" "243275"

redis-cli -h power5 -a rnafold set "species:taxid:243275:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:243275:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243275 --input ./data/Ensembl/Tdenticola//Treponema_denticola_atcc_35405.ASM818v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tdenticola/Treponema_denticola_atcc_35405.ASM818v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tden.list

----------------------------------------------------------------------------------------------------------------------------------

Ctepidum (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ctepidum/Chlorobium_tepidum_tls.ASM698v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ctep.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:194439:name" "Chlorobium tepidum TLS"

redis-cli -h power5 -a rnafold set "species:name:Chlorobium tepidum TLS:taxid" "194439"

redis-cli -h power5 -a rnafold set "species:taxid:194439:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:194439:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 194439 --input ./data/Ensembl/Ctepidum/Chlorobium_tepidum_tls.ASM698v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Ctepidum/Chlorobium_tepidum_tls.ASM698v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ctep.list

----------------------------------------------------------------------------------------------------------------------------------

Llactis (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Llactis/Lactococcus_lactis_subsp_lactis_il1403.ASM686v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Llac.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:272623:name" "Lactococcus lactis subsp. lactis Il1403"

redis-cli -h power5 -a rnafold set "species:name:Lactococcus lactis subsp. lactis Il1403:taxid" "272623"

redis-cli -h power5 -a rnafold set "species:taxid:272623:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:272623:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272623 --input ./data/Ensembl/Llactis/Lactococcus_lactis_subsp_lactis_il1403.ASM686v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Llactis/Lactococcus_lactis_subsp_lactis_il1403.ASM686v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Llac.list

----------------------------------------------------------------------------------------------------------------------------------

Fsucciogenes (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Fsuccionogenes/Fibrobacter_succinogenes_subsp_succinogenes_s85.ASM2466v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Fsuc.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:59374:name" "Fibrobacter succinogenes subsp. succinogenes S85"

redis-cli -h power5 -a rnafold set "species:name:Fibrobacter succinogenes subsp. succinogenes S85:taxid" "59374"

redis-cli -h power5 -a rnafold set "species:taxid:59374:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:59374:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 59374 --input ./data/Ensembl/Fsuccionogenes/Fibrobacter_succinogenes_subsp_succinogenes_s85.ASM2466v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Fsuccionogenes/Fibrobacter_succinogenes_subsp_succinogenes_s85.ASM2466v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Fsuc.list

----------------------------------------------------------------------------------------------------------------------------------

Cpneumoniae (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cpneumoniae/Chlamydophila_pneumoniae_cwl029.ASM874v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cpne.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:115713:name" "Chlamydophila pneumoniae CWL029"

redis-cli -h power5 -a rnafold set "species:name:Chlamydophila pneumoniae CWL029:taxid" "115713"

redis-cli -h power5 -a rnafold set "species:taxid:115713:genomic-transl-table"  "11"

redis-cli -h power5 -a rnafold set "species:taxid:115713:tax-group"  "Bacteria"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 115713 --input ./data/Ensembl/Cpneumoniae/Chlamydophila_pneumoniae_cwl029.ASM874v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Cpneumoniae/Chlamydophila_pneumoniae_cwl029.ASM874v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cpne.list

----------------------------------------------------------------------------------------------------------------------------------

Glamblia (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Glamblia/Giardia_lamblia.GCA_000002435.1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Glam.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:184922:name" "Giardia lamblia ATCC 50803"

redis-cli -h power5 -a rnafold set "species:name:Giardia lamblia ATCC 50803:taxid" "184922"

redis-cli -h power5 -a rnafold set "species:taxid:184922:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 184922 --input ./data/Ensembl/Glamblia/Giardia_lamblia.GCA_000002435.1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Glamblia/Giardia_lamblia.GCA_000002435.1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Glam.list

----------------------------------------------------------------------------------------------------------------------------------

Twhipplei (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Twhipplei/Tropheryma_whipplei_str_twist.ASM748v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Twhi.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:203267:name" "Tropheryma whipplei str. Twist"

redis-cli -h power5 -a rnafold set "species:name:Tropheryma whipplei str. Twist:taxid" "203267"

redis-cli -h power5 -a rnafold set "species:taxid:203267:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 203267 --input ./data/Ensembl/Twhipplei/Tropheryma_whipplei_str_twist.ASM748v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Twhipplei/Tropheryma_whipplei_str_twist.ASM748v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Twhi.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Savermitilis (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Savermitilis/Streptomyces_avermitilis_ma_4680_nbrc_14893.ASM976v2.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Save.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:227882:name" "Streptomyces avermitilis MA-4680 = NBRC 14893"

redis-cli -h power5 -a rnafold set "species:name:Streptomyces avermitilis MA-4680 = NBRC 14893:taxid" "227882"

redis-cli -h power5 -a rnafold set "species:taxid:227882:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 227882 --input ./data/Ensembl/Savermitilis/Streptomyces_avermitilis_ma_4680_nbrc_14893.ASM976v2.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Savermitilis/Streptomyces_avermitilis_ma_4680_nbrc_14893.ASM976v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Save.list

----------------------------------------------------------------------------------------------------------------------------------

Cefficiens (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cefficiens/Corynebacterium_efficiens_ys_314.ASM1130v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ceff.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:196164:name" "Corynebacterium efficiens YS-314"

redis-cli -h power5 -a rnafold set "species:name:Corynebacterium efficiens YS-314:taxid" "196164"

redis-cli -h power5 -a rnafold set "species:taxid:196164:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 196164 --input ./data/Ensembl/Cefficiens/Corynebacterium_efficiens_ys_314.ASM1130v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cefficiens/Corynebacterium_efficiens_ys_314.ASM1130v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ceff.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Mleprae (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mleprae/Mycobacterium_leprae_tn.ASM19585v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mlep.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:272631:name" "Mycobacterium leprae TN"

redis-cli -h power5 -a rnafold set "species:name:Mycobacterium leprae TN:taxid" "272631"

redis-cli -h power5 -a rnafold set "species:taxid:272631:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272631 --input ./data/Ensembl/Cefficiens/Corynebacterium_efficiens_ys_314.ASM1130v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cefficiens/Corynebacterium_efficiens_ys_314.ASM1130v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ceff.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Pfalciparum (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pfalciparum/Plasmodium_falciparum.EPr1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pfal.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:36329:name" "Plasmodium falciparum 3D7"

redis-cli -h power5 -a rnafold set "species:name:Plasmodium falciparum 3D7:taxid" "36329"

redis-cli -h power5 -a rnafold set "species:taxid:36329:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 36329 --input ./data/Ensembl/Pfalciparum/Plasmodium_falciparum.EPr1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Pfalciparum/Plasmodium_falciparum.EPr1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Pfal.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Cburnetii (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cburnetii/Coxiella_burnetii_rsa_493.ASM776v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cbur.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:227377:name" "Coxiella burnetii RSA 493"

redis-cli -h power5 -a rnafold set "species:name:Coxiella burnetii RSA 493:taxid" "227377"

redis-cli -h power5 -a rnafold set "species:taxid:227377:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 227377 --input ./data/Ensembl/Cburnetii/Coxiella_burnetii_rsa_493.ASM776v2.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cburnetii/Coxiella_burnetii_rsa_493.ASM776v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cbur.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Afabrum (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Afabrum/Agrobacterium_fabrum_str_c58.ASM9202v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Afab.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:176299:name" "Agrobacterium fabrum str. C58"

redis-cli -h power5 -a rnafold set "species:name:Agrobacterium fabrum str. C58:taxid" "176299"

redis-cli -h power5 -a rnafold set "species:taxid:176299:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 176299 --input ./data/Ensembl/Afabrum/Agrobacterium_fabrum_str_c58.ASM9202v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Afabrum/Agrobacterium_fabrum_str_c58.ASM9202v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Afab.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Parcticus (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Parcticus/Psychrobacter_arcticus_273_4.ASM1230v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Parc.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:259536:name" "Psychrobacter arcticus 273-4"

redis-cli -h power5 -a rnafold set "species:name:Psychrobacter arcticus 273-4:taxid" "259536"

redis-cli -h power5 -a rnafold set "species:taxid:259536:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 259536 --input ./data/Ensembl/Parcticus/Psychrobacter_arcticus_273_4.ASM1230v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Parcticus/Psychrobacter_arcticus_273_4.ASM1230v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Parc.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Ljohnsonii (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ljohnsonii/Lactobacillus_johnsonii_ncc_533.ASM806v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ljoh.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:257314:name" "Lactobacillus johnsonii NCC 533"

redis-cli -h power5 -a rnafold set "species:name:Lactobacillus johnsonii NCC 533:taxid" "257314"

redis-cli -h power5 -a rnafold set "species:taxid:257314:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 257314 --input ./data/Ensembl/Parcticus/Psychrobacter_arcticus_273_4.ASM1230v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Parcticus/Psychrobacter_arcticus_273_4.ASM1230v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Parc.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Tadhaerens (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tadhaerens/Trichoplax_adhaerens.ASM15027v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tadh.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:10228:name" "Trichoplax adhaerens"

redis-cli -h power5 -a rnafold set "species:name:Trichoplax adhaerens:taxid" "10228"

redis-cli -h power5 -a rnafold set "species:taxid:10228:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 10228 --input ./data/Ensembl/Tadhaerens/Trichoplax_adhaerens.ASM15027v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Tadhaerens/Trichoplax_adhaerens.ASM15027v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tadh.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Mpenetrans (4)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mpenetrans/Mycoplasma_penetrans_hf_2.ASM1122v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mpen.list --transl-table 4


redis-cli -h power5 -a rnafold set "species:taxid:272633:name" "Mycoplasma penetrans HF-2"

redis-cli -h power5 -a rnafold set "species:name:Mycoplasma penetrans HF-2:taxid" "272633"

redis-cli -h power5 -a rnafold set "species:taxid:272633:genomic-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272633 --input ./data/Ensembl/Mpenetrans/Mycoplasma_penetrans_hf_2.ASM1122v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Mpenetrans/Mycoplasma_penetrans_hf_2.ASM1122v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mpen.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Lmonocytogenes (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Lmonocytogenes/Listeria_monocytogenes_egd_e.ASM19603v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Lmon.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:169963:name" "Listeria monocytogenes EGD-e"

redis-cli -h power5 -a rnafold set "species:name:Listeria monocytogenes EGD-e:taxid" "169963"

redis-cli -h power5 -a rnafold set "species:taxid:169963:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 169963 --input ./data/Ensembl/Lmonocytogenes/Listeria_monocytogenes_egd_e.ASM19603v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Lmonocytogenes/Listeria_monocytogenes_egd_e.ASM19603v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Lmon.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Avaga (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Avaga/Adineta_vaga.AMS_PRJEB1171_v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Avag.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:104782:name" "Adineta vaga"

redis-cli -h power5 -a rnafold set "species:name:Adineta vaga:taxid" "104782"

redis-cli -h power5 -a rnafold set "species:taxid:104782:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 104782 --input ./data/Ensembl/Avaga/Adineta_vaga.AMS_PRJEB1171_v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Avaga/Adineta_vaga.AMS_PRJEB1171_v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Avag.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Cneoformans (1)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cneoformans/Cryptococcus_neoformans.GCA_000091045.1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cneo.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:214684:name" "Cryptococcus neoformans var. neoformans JEC21"

redis-cli -h power5 -a rnafold set "species:name:Cryptococcus neoformans var. neoformans JEC21:taxid" "214684"

redis-cli -h power5 -a rnafold set "species:taxid:214684:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 214684 --input ./data/Ensembl/Cneoformans/Cryptococcus_neoformans.GCA_000091045.1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cneoformans/Cryptococcus_neoformans.GCA_000091045.1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cneo.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Zbrevis (1)

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Zbrevis/Zymoseptoria_brevis.ASM96659v1.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Zbre.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:1047168:name" "Zymoseptoria brevis"

redis-cli -h power5 -a rnafold set "species:name:Zymoseptoria brevis:taxid" "1047168"

redis-cli -h power5 -a rnafold set "species:taxid:1047168:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1047168 --input ./data/Ensembl/Zbrevis/Zymoseptoria_brevis.ASM96659v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Zbrevis/Zymoseptoria_brevis.ASM96659v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Zbre.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Cjejuni (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cjejuni/Campylobacter_jejuni_subsp_jejuni_nctc_11168_atcc_700819.ASM908v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cjej.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:192222:name" "Campylobacter jejuni subsp. jejuni NCTC 11168 = ATCC 700819"

redis-cli -h power5 -a rnafold set "species:name:Campylobacter jejuni subsp. jejuni NCTC 11168 = ATCC 700819:taxid" "192222"

redis-cli -h power5 -a rnafold set "species:taxid:192222:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 192222 --input ./data/Ensembl/Cjejuni/Campylobacter_jejuni_subsp_jejuni_nctc_11168_atcc_700819.ASM908v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cjejuni/Campylobacter_jejuni_subsp_jejuni_nctc_11168_atcc_700819.ASM908v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cjej.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Aferrooxidans (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aferrooxidans/Acidithiobacillus_ferrooxidans_atcc_23270.ASM2148v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Afer.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:243159:name" "Acidithiobacillus ferrooxidans ATCC 23270"

redis-cli -h power5 -a rnafold set "species:name:Acidithiobacillus ferrooxidans ATCC 23270:taxid" "243159"

redis-cli -h power5 -a rnafold set "species:taxid:243159:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243159 --input ./data/Ensembl/Aferrooxidans/Acidithiobacillus_ferrooxidans_atcc_23270.ASM2148v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Aferrooxidans/Acidithiobacillus_ferrooxidans_atcc_23270.ASM2148v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Afer.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Dmccartyi (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Dmccartyi/Dehalococcoides_mccartyi_cg5.ASM83088v1.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Dmcc.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:1432061:name" "Dehalococcoides mccartyi CG5"

redis-cli -h power5 -a rnafold set "species:name:Dehalococcoides mccartyi CG5:taxid" "1432061"

redis-cli -h power5 -a rnafold set "species:taxid:1432061:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1432061 --input ./data/Ensembl/Dmccartyi/Dehalococcoides_mccartyi_cg5.ASM83088v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Dmccartyi/Dehalococcoides_mccartyi_cg5.ASM83088v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Dmcc.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Tthermophilus (11)

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tthermophilus/Thermus_thermophilus_hb8.ASM9154v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tthe.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:300852:name" "Thermus thermophilus HB8"

redis-cli -h power5 -a rnafold set "species:name:Thermus thermophilus HB8:taxid" "300852"

redis-cli -h power5 -a rnafold set "species:taxid:300852:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 300852 --input ./data/Ensembl/Tthermophilus/Thermus_thermophilus_hb8.ASM9154v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Tthermophilus/Thermus_thermophilus_hb8.ASM9154v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tthe.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Tcruzi (1) 19000

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tcruzi/Trypanosoma_cruzi.ASM20906v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tcru.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:5693:name" "Trypanosoma cruzi"

redis-cli -h power5 -a rnafold set "species:name:Trypanosoma cruzi:taxid" "5693"

redis-cli -h power5 -a rnafold set "species:taxid:5693:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 5693 --input ./data/Ensembl/Tcruzi/Trypanosoma_cruzi.ASM20906v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Tcruzi/Trypanosoma_cruzi.ASM20906v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tcru.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Ddiscoideum (1) 13000

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ddiscoideum/Dictyostelium_discoideum.dicty_2.7.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ddis.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:352472:name" "Dictyostelium discoideum AX4"

redis-cli -h power5 -a rnafold set "species:name:Dictyostelium discoideum AX4:taxid" "352472"

redis-cli -h power5 -a rnafold set "species:taxid:352472:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 352472 --input ./data/Ensembl/Ddiscoideum/Dictyostelium_discoideum.dicty_2.7.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Ddiscoideum/Dictyostelium_discoideum.dicty_2.7.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ddis.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Anabaena sp. 90 (11) 4531

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Asp90/Anabaena_sp_90.ASM31270v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Asp90.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:46234:name" "Anabaena sp. 90"

redis-cli -h power5 -a rnafold set "species:name:Anabaena sp. 90:taxid" "46234"

redis-cli -h power5 -a rnafold set "species:taxid:46234:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 46234 --input ./data/Ensembl/Asp90/Anabaena_sp_90.ASM31270v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Asp90/Anabaena_sp_90.ASM31270v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Asp90.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Cparvum (1) 3800

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cparvum/Cryptosporidium_parvum_iowa_ii.ASM16534v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cpar.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:353152:name" "Cryptosporidium parvum Iowa II"

redis-cli -h power5 -a rnafold set "species:name:Cryptosporidium parvum Iowa II:taxid" "353152"

redis-cli -h power5 -a rnafold set "species:taxid:353152:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 353152 --input ./data/Ensembl/Cparvum/Cryptosporidium_parvum_iowa_ii.ASM16534v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cparvum/Cryptosporidium_parvum_iowa_ii.ASM16534v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cpar.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Ctetani (11) 2400

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ctetani/Clostridium_tetani_e88.ASM762v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ctet.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:212717:name" "Clostridium tetani E88"

redis-cli -h power5 -a rnafold set "species:name:Clostridium tetani E88:taxid" "212717"

redis-cli -h power5 -a rnafold set "species:taxid:212717:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 212717 --input ./data/Ensembl/Ctetani/Clostridium_tetani_e88.ASM762v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Ctetani/Clostridium_tetani_e88.ASM762v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ctet.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Bhalodurans (11) 3950

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bhalodurans/Bacillus_halodurans_c_125.ASM1114v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bhal.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:272558:name" "Bacillus halodurans C-125"

redis-cli -h power5 -a rnafold set "species:name:Bacillus halodurans C-125:taxid" "272558"

redis-cli -h power5 -a rnafold set "species:taxid:272558:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272558 --input ./data/Ensembl/Bhalodurans/Bacillus_halodurans_c_125.ASM1114v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Bhalodurans/Bacillus_halodurans_c_125.ASM1114v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Bhal.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Lplantarum (11) 3060

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Lplantarum/Lactobacillus_plantarum_wcfs1.ASM20385v3.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Lpla.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:220668:name" "Lactobacillus plantarum WCFS1"

redis-cli -h power5 -a rnafold set "species:name:Lactobacillus plantarum WCFS1:taxid" "220668"

redis-cli -h power5 -a rnafold set "species:taxid:220668:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 220668 --input ./data/Ensembl/Lplantarum/Lactobacillus_plantarum_wcfs1.ASM20385v3.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Lplantarum/Lactobacillus_plantarum_wcfs1.ASM20385v3.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Lpla.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Mgenitalium (4) 515

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mgenitalium/Mycoplasma_genitalium_g37.ASM2732v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mgen.list --transl-table 4


redis-cli -h power5 -a rnafold set "species:taxid:243273:name" "Mycoplasma genitalium G37"

redis-cli -h power5 -a rnafold set "species:name:Mycoplasma genitalium G37:taxid" "243273"

redis-cli -h power5 -a rnafold set "species:taxid:243273:genomic-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243273 --input ./data/Ensembl/Mgenitalium/Mycoplasma_genitalium_g37.ASM2732v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Mgenitalium/Mycoplasma_genitalium_g37.ASM2732v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mgen.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Mpneumoniae (4) 691

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mpneumoniae/Mycoplasma_pneumoniae_m129.ASM2734v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mpne.list --transl-table 4


redis-cli -h power5 -a rnafold set "species:taxid:272634:name" "Mycoplasma pneumoniae M129"

redis-cli -h power5 -a rnafold set "species:name:Mycoplasma pneumoniae M129:taxid" "272634"

redis-cli -h power5 -a rnafold set "species:taxid:272634:genomic-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272634 --input ./data/Ensembl/Mpneumoniae/Mycoplasma_pneumoniae_m129.ASM2734v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Mpneumoniae/Mycoplasma_pneumoniae_m129.ASM2734v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mpne.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Wanomalus (1) 6421

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mpneumoniae/Mycoplasma_pneumoniae_m129.ASM2734v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mpne.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:4927:name" "Wickerhamomyces anomalus NRRL Y-366-8"

redis-cli -h power5 -a rnafold set "species:name:Wickerhamomyces anomalus NRRL Y-366-8:taxid" "4927"

redis-cli -h power5 -a rnafold set "species:taxid:4927:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 4927 --input ./data/Ensembl/Wanomalus/Wickerhamomyces_anomalus_nrrl_y_366_8.Wican1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Wanomalus/Wickerhamomyces_anomalus_nrrl_y_366_8.Wican1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Wano.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Vpolyspora (1) 5367

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Vpolyspora/Vanderwaltozyma_polyspora_dsm_70294.ASM15003v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Vpol.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:436907:name" "Vanderwaltozyma polyspora DSM 70294"

redis-cli -h power5 -a rnafold set "species:name:Vanderwaltozyma polyspora DSM 70294:taxid" "436907"

redis-cli -h power5 -a rnafold set "species:taxid:436907:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 436907 --input ./data/Ensembl/Vpolyspora/Vanderwaltozyma_polyspora_dsm_70294.ASM15003v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Vpolyspora/Vanderwaltozyma_polyspora_dsm_70294.ASM15003v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Vpol.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Sschenckii (1) 10293

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Sschenckii/Sporothrix_schenckii_1099_18.S_schenckii_v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ssch.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:1397361:name" "Sporothrix schenckii 1099-18"

redis-cli -h power5 -a rnafold set "species:name:Sporothrix schenckii 1099-18:taxid" "1397361"

redis-cli -h power5 -a rnafold set "species:taxid:1397361:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1397361 --input ./data/Ensembl/Sschenckii/Sporothrix_schenckii_1099_18.S_schenckii_v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Sschenckii/Sporothrix_schenckii_1099_18.S_schenckii_v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ssch.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Lmajor (1) 8300

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Lmajor/Leishmania_major.ASM272v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Lmaj.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:347515:name" "Leishmania major strain Friedlin"

redis-cli -h power5 -a rnafold set "species:name:Leishmania major strain Friedlin:taxid" "347515"

redis-cli -h power5 -a rnafold set "species:taxid:347515:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 347515 --input ./data/Ensembl/Lmajor/Leishmania_major.ASM272v2.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Lmajor/Leishmania_major.ASM272v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Lmaj.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Tcampylonemoides (11) 7510

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tcampylonemoides/Tolypothrix_campylonemoides_vb511288.ASM82807v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tcam.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:1245935:name" "Tolypothrix campylonemoides VB511288"

redis-cli -h power5 -a rnafold set "species:name:Tolypothrix campylonemoides VB511288:taxid" "1245935"

redis-cli -h power5 -a rnafold set "species:taxid:1245935:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1245935 --input ./data/Ensembl/Tcampylonemoides/Tolypothrix_campylonemoides_vb511288.ASM82807v2.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Tcampylonemoides/Tolypothrix_campylonemoides_vb511288.ASM82807v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tcam.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Fnucleatum (11) 1983

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Fnucleatum/Fusobacterium_nucleatum_subsp_nucleatum_atcc_25586.ASM732v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Fnuc.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:190304:name" "Fusobacterium nucleatum subsp. nucleatum ATCC 25586"

redis-cli -h power5 -a rnafold set "species:name:Fusobacterium nucleatum subsp. nucleatum ATCC 25586:taxid" "190304"

redis-cli -h power5 -a rnafold set "species:taxid:190304:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 190304 --input ./data/Ensembl/Fnucleatum/Fusobacterium_nucleatum_subsp_nucleatum_atcc_25586.ASM732v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Fnucleatum/Fusobacterium_nucleatum_subsp_nucleatum_atcc_25586.ASM732v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Fnuc.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Mleidyi (1) 

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mleidyi/Mnemiopsis_leidyi.GCA_000226015.1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mlei.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:27923:name" "Mnemiopsis leidyi"

redis-cli -h power5 -a rnafold set "species:name:Mnemiopsis leidyi:taxid" "27923"

redis-cli -h power5 -a rnafold set "species:taxid:27923:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 27923 --input ./data/Ensembl/Mleidyi/Mnemiopsis_leidyi.GCA_000226015.1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Mleidyi/Mnemiopsis_leidyi.GCA_000226015.1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mlei.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Bhenselae (11) 1520

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bhenselae/Bartonella_henselae_str_houston_1.ASM4670v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bhen.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:283166:name" "Bartonella henselae str. Houston-1"

redis-cli -h power5 -a rnafold set "species:name:Bartonella henselae str. Houston-1:taxid" "283166"

redis-cli -h power5 -a rnafold set "species:taxid:283166:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 283166 --input ./data/Ensembl/Bhenselae/Bartonella_henselae_str_houston_1.ASM4670v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Bhenselae/Bartonella_henselae_str_houston_1.ASM4670v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Bhen.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Cgreenlandense (11) 3599

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cgreenlandense/Chryseobacterium_greenlandense.ASM150732v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cgre.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:345663:name" "Chryseobacterium greenlandense"

redis-cli -h power5 -a rnafold set "species:name:Chryseobacterium greenlandense:taxid" "345663"

redis-cli -h power5 -a rnafold set "species:taxid:345663:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 345663 --input ./data/Ensembl/Cgreenlandense/Chryseobacterium_greenlandense.ASM150732v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cgreenlandense/Chryseobacterium_greenlandense.ASM150732v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cgre.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Lconfervoides (11) 6378

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Lconfervoides/Lyngbya_confervoides_bdu141951.ASM81777v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Lcon.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:1574623:name" "Lyngbya confervoides BDU141951"

redis-cli -h power5 -a rnafold set "species:name:Lyngbya confervoides BDU141951:taxid" "1574623"

redis-cli -h power5 -a rnafold set "species:taxid:1574623:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1574623 --input ./data/Ensembl/Lconfervoides/Lyngbya_confervoides_bdu141951.ASM81777v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Lconfervoides/Lyngbya_confervoides_bdu141951.ASM81777v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Lcon.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Shalodurans (11) 2709

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Shalodurans/Salinicoccus_halodurans.ASM100590v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Shal.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:407035:name" "Salinicoccus halodurans"

redis-cli -h power5 -a rnafold set "species:name:Salinicoccus halodurans:taxid" "407035"

redis-cli -h power5 -a rnafold set "species:taxid:407035:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 407035 --input ./data/Ensembl/Shalodurans/Salinicoccus_halodurans.ASM100590v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Shalodurans/Salinicoccus_halodurans.ASM100590v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Shal.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Oiheyensis (11) 3464

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Oiheyensis/Oceanobacillus_iheyensis_hte831.ASM1124v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Oihe.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:221109:name" "Oceanobacillus iheyensis HTE831"

redis-cli -h power5 -a rnafold set "species:name:Oceanobacillus iheyensis HTE831:taxid" "221109"

redis-cli -h power5 -a rnafold set "species:taxid:221109:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 221109 --input ./data/Ensembl/Oiheyensis/Oceanobacillus_iheyensis_hte831.ASM1124v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Oiheyensis/Oceanobacillus_iheyensis_hte831.ASM1124v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Oihe.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Pramorum (1) 

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pramorum/Phytophthora_ramorum.ASM14973v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pram.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:164328:name" "Phytophthora ramorum"

redis-cli -h power5 -a rnafold set "species:name:Phytophthora ramorum:taxid" "164328"

redis-cli -h power5 -a rnafold set "species:taxid:164328:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 164328 --input ./data/Ensembl/Pramorum/Phytophthora_ramorum.ASM14973v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Pramorum/Phytophthora_ramorum.ASM14973v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Pram.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Rintracellularis (11) 1879

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Rintracellularis/Richelia_intracellularis_hh01.ASM35010v1.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Rint.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:1165094:name" "Richelia intracellularis HH01"

redis-cli -h power5 -a rnafold set "species:name:Richelia intracellularis HH01:taxid" "1165094"

redis-cli -h power5 -a rnafold set "species:taxid:1165094:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1165094 --input ./data/Ensembl/Rintracellularis/Richelia_intracellularis_hh01.ASM35010v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Rintracellularis/Richelia_intracellularis_hh01.ASM35010v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Rint.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Terythraeum (11) 4549

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Terythraeum/Trichodesmium_erythraeum_ims101.ASM1426v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tery.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:203124:name" "Trichodesmium erythraeum IMS101"

redis-cli -h power5 -a rnafold set "species:name:Trichodesmium erythraeum IMS101:taxid" "203124"

redis-cli -h power5 -a rnafold set "species:taxid:203124:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 203124 --input ./data/Ensembl/Terythraeum/Trichodesmium_erythraeum_ims101.ASM1426v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Terythraeum/Trichodesmium_erythraeum_ims101.ASM1426v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tery.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Neuropaea (11)
2462

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Neuropaea/Nitrosomonas_europaea_atcc_19718.ASM914v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Neur.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:228410:name" "Nitrosomonas europaea ATCC 19718"

redis-cli -h power5 -a rnafold set "species:name:Nitrosomonas europaea ATCC 19718:taxid" "228410"

redis-cli -h power5 -a rnafold set "species:taxid:228410:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 228410 --input ./data/Ensembl/Neuropaea/Nitrosomonas_europaea_atcc_19718.ASM914v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Neuropaea/Nitrosomonas_europaea_atcc_19718.ASM914v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Neur.list --dry-run

----------------------------------------------------------------------------------------------------------------------------------

Cviolaceum (11)
4407

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cviolaceum/Chromobacterium_violaceum_atcc_12472.ASM770v1.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cvio.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:243365:name" "Chromobacterium violaceum ATCC 12472"

redis-cli -h power5 -a rnafold set "species:name:Chromobacterium violaceum ATCC 12472:taxid" "243365"

redis-cli -h power5 -a rnafold set "species:taxid:243365:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243365 --input ./data/Ensembl/Cviolaceum/Chromobacterium_violaceum_atcc_12472.ASM770v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Cviolaceum/Chromobacterium_violaceum_atcc_12472.ASM770v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Cvio.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------

Rsolanacearum (11)
5120

~/anaconda2/bin/python test_gff_extract_coding_genes.py --gff ./data/Ensembl/Rsolanacearum/Ralstonia_solanacearum_gmi1000.ASM912v1.36.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Rsol.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:267608:name" "Ralstonia solanacearum GMI1000"

redis-cli -h power5 -a rnafold set "species:name:Ralstonia solanacearum GMI1000:taxid" "267608"

redis-cli -h power5 -a rnafold set "species:taxid:267608:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 267608 --input ./data/Ensembl/Rsolanacearum/Ralstonia_solanacearum_gmi1000.ASM912v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Rsolanacearum/Ralstonia_solanacearum_gmi1000.ASM912v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Rsol.list --dry-run


----------------------------------------------------------------------------------------------------------------------------------


--15--

>>> Upsert recent results (29 genomes based on new Dask-based "2/7" code)
> Note: These are all "new" records for fresh genomes, so just a
 simple INSERT INTO should work; I will nevertheless use the normal
 upsert method.

> Delete "bad" updates (almost exclusively redundant calculations created, for some reason, by dask):
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True --perform-delete=True

> Check again for bad updates after deletion:
~/anaconda2/bin/python2 compare_updates.py --find-duplicates=True

# None found; updates by genome (29 genomes, 2059324 rows total after deleting bad ones):
3218: 492576, 449447: 132426, 284812: 107961, 99287: 95445, 188937: 95319, 83332: 84336, 267671: 76818, 1148: 74844, 882: 73689, 213585: 70036, 273063: 59031, 178306: 54453, 64091: 54285, 224325: 50505, 593117: 45276, 70601: 43281, 186497: 43260, 122586: 42966, 187420: 39207, 272844: 37422, 243232: 36855, 267377: 35952, 272557: 35595, 190192: 35427, 160490: 35406, 85962: 32634, 273116: 32025, 273075: 31038, 228908: 11256

> Start an interactive mysql session
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-229 -D rnafold -P 14404

> Split into 5 groups of ~450000 rows each

% group 1/5
% dummy_id between       1 and  500000
% group 2/5
% dummy_id between  500001 and 1000000
% group 3/5
% dummy_id between 1000001 and 1500000
% group 4/5
% dummy_id between 1500001 and 2000000
% group 5/5
% dummy_id between 2000001 and 2584407

> Note: We will mark all updates included here as ext_index=10

> Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=10 where source=102;

> Perform the upsert, for group 1/5 (other groups omitted):
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 1 and 500000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

> Clear the updates table
delete from sequence_series2_updates
where source=102 and ext_index=10 and dummy_id between 1 and 2584407;

> Check data after the update:
select source, ext_index, count(*) from sequence_series2 group by source, ext_index;
+--------+-----------+----------+
| source | ext_index | count(*) |
+--------+-----------+----------+
|    102 |         0 |  8504383 |
|    102 |         1 |   597191 |
|    102 |         3 |      798 |
|    102 |         5 |  3056235 |
|    102 |         6 |  1428505 |
|    102 |         7 |   466052 |
|    102 |         8 |   397341 |
|    102 |         9 |   481417 |
|    102 |        10 |  2059324 |    <- New records created now - looks good!
+--------+-----------+----------+
9 rows in set (8 min 2.79 sec)

mysql> select source, count(*) from sequence_series2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|    102 | 16991246 |
+--------+----------+
1 row in set (4 min 29.05 sec)

mysql> select source, count(*) from sequences2 group by source;
+--------+----------+
| source | count(*) |
+--------+----------+
|      1 |   503652 |
|     10 | 18533026 |
|     11 |  2189815 |
+--------+----------+
3 rows in set (4 min 18.97 sec)

> Hurray - all done!

--08--




>>> Starting _distributed environment


>>> Start mysql server (hosted on an interactive node session)
screen qsub -q tamirs3 -N db -l mem=22000mb,pmem=22000mb,vmem=22000mb,pvmem=22000mb,cput=30:00:00,ncpus=2 -I

cd ~/lib/mysql/
mysqld_safe --user=mich1 --basedir=/tamir1/mich1/anaconda2N/ --datadir=/tamir1/mich1/lib/mysql/ --log-error=/tamir1/mich1/lib/mysql/log/error --pid-file=/tamir1/mich1/lib/mysql/mysql.pid --port=14404 --socket=/tamir1/mich1/lib/mysql/socket --innodb-thread-concurrency=2

#~/anaconda2/bin/mysqld_safe --user=mich1 --basedir=/a/home/cc/students/enginer/mich1/anaconda2/ --datadir=/a/home/cc/students/enginer/mich1/lib/mysql/ --log-error=/a/home/cc/students/enginer/mich1/lib/mysql/log/error --pid-file=/a/home/cc/students/enginer/mich1/lib/mysql/mysql.pid --port=14404 --socket=/a/home/cc/students/enginer/mich1/lib/mysql/socket

#$old/anaconda2/bin/mysqld_safe --user=mich1  --basedir=$old/anaconda2/ --datadir=/tamir1/mich1/lib/mysql/ --log-error=/tamir1/mich1/lib/mysql/log/error --pid-file=/tamir1/mich1/lib/mysql/mysql.pid --port=14404 --socket=/tamir1/mich1/lib/mysql/socket


# Now update config.py...

>>> Start dask scheduler (hosted on an interactive node session)
screen qsub -q tamirs3 -N dasksched -l mem=12000mb,pmem=12000mb,vmem=16000mb,pvmem=16000mb,cput=9:00:00 -I
cd ~/rnafold
dask-scheduler --scheduler-file ~/rnafold/dask-scheduler.json


>>> Start redis server (hosted on power5)
ssh power5
redis-server ~/etc/redis.conf


>>> Launch worker processes
for i in `seq 01 30`; do qsub -q tamirs3 -N worker$i -l mem=1800mb,pmem=1800mb,vmem=4000mb,pvmem=4000mb,cput=4:00:00 job_dask_worker.sh ; done


>>> Clear mysql server hosts black-list
~/anaconda2/bin/mysqladmin  -u root -p -h compute-0-211 -P 14404 flush-hosts


>>> Delete the 20 longest-running jobs named 'worker' (this needs more testing - is the sorting done right?)
qstat -u mich1 | grep mich1 | grep worker | sort -k 11 | tail -n 20 | perl -pe "s/.power8.*//" | xargs qdel

----------------------------------------------------------------------------------------------------------------------------------

Hsal (11) 2671

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Hsalinarum/Halobacterium_salinarum_nrc_1.ASM680v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Hsal.list --transl-table 11



redis-cli -h power5 -a rnafold set "species:taxid:64091:name" "Halobacterium salinarum NRC-1"

redis-cli -h power5 -a rnafold set "species:name:Halobacterium salinarum NRC-1:taxid" "64091"

redis-cli -h power5 -a rnafold set "species:taxid:64091:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 64091 --input ./data/Ensembl/Hsalinarum/Halobacterium_salinarum_nrc_1.ASM680v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Hsalinarum/Halobacterium_salinarum_nrc_1.ASM680v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Hsal.list


----------------------------------------------------------------------------------------------------------------------------------

Tgam (11) 2111

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tgammatolerans/Thermococcus_gammatolerans_ej3.ASM2236v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tgam.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:593117:name" "Thermococcus gammatolerans EJ3"

redis-cli -h power5 -a rnafold set "species:name:Thermococcus gammatolerans EJ3:taxid" "593117"

redis-cli -h power5 -a rnafold set "species:taxid:593117:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 593117 --input ./data/Ensembl/Tgammatolerans/Thermococcus_gammatolerans_ej3.ASM2236v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tgammatolerans/Thermococcus_gammatolerans_ej3.ASM2236v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tgam.list 

----------------------------------------------------------------------------------------------------------------------------------

Nequitans (11) 536

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Nequitans/Nanoarchaeum_equitans_kin4_m.ASM808v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Nequ.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:228908:name" "Nanoarchaeum equitans"

redis-cli -h power5 -a rnafold set "species:name:Nanoarchaeum equitans:taxid" "228908"

redis-cli -h power5 -a rnafold set "species:taxid:228908:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 228908 --input ./data/Ensembl/Nequitans/Nanoarchaeum_equitans_kin4_m.ASM808v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Nequitans/Nanoarchaeum_equitans_kin4_m.ASM808v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Nequ.list

----------------------------------------------------------------------------------------------------------------------------------

Apernix (11) 1700

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Apernix/Aeropyrum_pernix_k1.ASM1112v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aper.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:272557:name" "Aeropyrum pernix K1"

redis-cli -h power5 -a rnafold set "species:name:Aeropyrum pernix K1:taxid" "272557"

redis-cli -h power5 -a rnafold set "species:taxid:272557:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272557 --input ./data/Ensembl/Apernix/Aeropyrum_pernix_k1.ASM1112v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Apernix/Aeropyrum_pernix_k1.ASM1112v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Aper.list 

----------------------------------------------------------------------------------------------------------------------------------

Paerophilum (11) 2605

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Paerophilum/Pyrobaculum_aerophilum_str_im2.ASM722v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Paer.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:178306:name" "Pyrobaculum aerophilum str. IM2"

redis-cli -h power5 -a rnafold set "species:name:Pyrobaculum aerophilum str. IM2:taxid" "178306"

redis-cli -h power5 -a rnafold set "species:taxid:178306:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 178306 --input ./data/Ensembl/Paerophilum/Pyrobaculum_aerophilum_str_im2.ASM722v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Paerophilum/Pyrobaculum_aerophilum_str_im2.ASM722v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Paer.list

----------------------------------------------------------------------------------------------------------------------------------

Stokadaii (11) 2770

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Stokadaii/Sulfolobus_tokodaii_str_7.ASM1120v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Stok.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:273063:name" "Sulfolobus tokodaii str. 7"

redis-cli -h power5 -a rnafold set "species:name:Sulfolobus tokodaii str. 7:taxid" "273063"

redis-cli -h power5 -a rnafold set "species:taxid:273063:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 273063 --input ./data/Ensembl/Stokadaii/Sulfolobus_tokodaii_str_7.ASM1120v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Stokadaii/Sulfolobus_tokodaii_str_7.ASM1120v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Stok.list


----------------------------------------------------------------------------------------------------------------------------------

Tvolcanium (11) 1545

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tvolcanium/Thermoplasma_volcanium_gss1.ASM1118v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tvol.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:273116:name" "Thermoplasma volcanium GSS1"

redis-cli -h power5 -a rnafold set "species:name:Thermoplasma volcanium GSS1:taxid" "273116"

redis-cli -h power5 -a rnafold set "species:taxid:273116:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 273116 --input ./data/Ensembl/Tvolcanium/Thermoplasma_volcanium_gss1.ASM1118v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tvolcanium/Thermoplasma_volcanium_gss1.ASM1118v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tvol.list


----------------------------------------------------------------------------------------------------------------------------------

Tacidophilum (11) 1521

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tacidophilum/Thermoplasma_acidophilum_dsm_1728.ASM19591v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Taci.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:273075:name" "Thermoplasma acidophilum DSM 1728"

redis-cli -h power5 -a rnafold set "species:name:Thermoplasma acidophilum DSM 1728:taxid" "273075"

redis-cli -h power5 -a rnafold set "species:taxid:273075:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 273075 --input ./data/Ensembl/Tacidophilum/Thermoplasma_acidophilum_dsm_1728.ASM19591v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tacidophilum/Thermoplasma_acidophilum_dsm_1728.ASM19591v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Taci.list

----------------------------------------------------------------------------------------------------------------------------------

Afulgidus (11) 2369

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Afulgidus/Archaeoglobus_fulgidus_dsm_4304.ASM866v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aful.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:224325:name" "Archaeoglobus fulgidus DSM 4304"

redis-cli -h power5 -a rnafold set "species:name:Archaeoglobus fulgidus DSM 4304:taxid" "224325"

redis-cli -h power5 -a rnafold set "species:taxid:224325:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 224325 --input ./data/Ensembl/Afulgidus/Archaeoglobus_fulgidus_dsm_4304.ASM866v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Afulgidus/Archaeoglobus_fulgidus_dsm_4304.ASM866v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Aful.list

----------------------------------------------------------------------------------------------------------------------------------

Macetivorans (11) 4567

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Macetivorans/Methanosarcina_acetivorans_c2a.ASM734v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mace.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:188937:name" "Methanosarcina acetivorans C2A"

redis-cli -h power5 -a rnafold set "species:name:Methanosarcina acetivorans C2A:taxid" "188937"

redis-cli -h power5 -a rnafold set "species:taxid:188937:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 188937 --input ./data/Ensembl/Macetivorans/Methanosarcina_acetivorans_c2a.ASM734v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Macetivorans/Methanosarcina_acetivorans_c2a.ASM734v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mace.list

----------------------------------------------------------------------------------------------------------------------------------

Mmazei (11) 3359

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mmaz.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:213585:name" "Methanosarcina mazei S-6"

redis-cli -h power5 -a rnafold set "species:name:Methanosarcina mazei S-6:taxid" "213585"

redis-cli -h power5 -a rnafold set "species:taxid:213585:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 213585 --input ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mmaz.list

----------------------------------------------------------------------------------------------------------------------------------

Spombe (1) 5133

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Spom.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:284812:name" "Schizosaccharomyces pombe (strain 972 / ATCC 24843)"

redis-cli -h power5 -a rnafold set "species:name:Schizosaccharomyces pombe strain 972 / ATCC 24843:taxid" "284812"

redis-cli -h power5 -a rnafold set "species:taxid:284812:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 284812 --input ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Spom.list

----------------------------------------------------------------------------------------------------------------------------------

Pfuriosas (11) 3359

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mmaz.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:213585:name" "Methanosarcina mazei S-6"

redis-cli -h power5 -a rnafold set "species:name:Methanosarcina mazei S-6:taxid" "213585"

redis-cli -h power5 -a rnafold set "species:taxid:213585:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 213585 --input ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mmazei/Methanosarcina_mazei_s_6.ASM97020v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mmaz.list

----------------------------------------------------------------------------------------------------------------------------------

Ppatens (1) 35934

nice time ~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ppatens/Physcomitrella_patens.ASM242v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ppat.list --transl-table 1

redis-cli -h power5 -a rnafold set "species:taxid:3218:name" "Physcomitrella patens"

redis-cli -h power5 -a rnafold set "species:name:Physcomitrella patens:taxid" "3218"

redis-cli -h power5 -a rnafold set "species:taxid:3218:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 3218 --input ./data/Ensembl/Ppatens/Physcomitrella_patens.ASM242v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Ppatens/Physcomitrella_patens.ASM242v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Ppat.list

----------------------------------------------------------------------------------------------------------------------------------

Dvulgaris (11) 3535

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Dvulgaris/Desulfovibrio_vulgaris_str_hildenborough.ASM19575v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Dvul.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:882:name" "Desulfovibrio vulgaris str. Hildenborough"

redis-cli -h power5 -a rnafold set "species:name:Desulfovibrio vulgaris str. Hildenborough:taxid" "882"

redis-cli -h power5 -a rnafold set "species:taxid:882:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 882 --input ./data/Ensembl/Dvulgaris/Desulfovibrio_vulgaris_str_hildenborough.ASM19575v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Dvulgaris/Desulfovibrio_vulgaris_str_hildenborough.ASM19575v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Dvul.list

----------------------------------------------------------------------------------------------------------------------------------

Pfuriosus (11) 1979

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pfuriosus/Pyrococcus_furiosus_dsm_3638.ASM730v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pfur.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:186497:name" "Pyrococcus furiosus DSM 3638"

redis-cli -h power5 -a rnafold set "species:name:Pyrococcus furiosus DSM 3638:taxid" "186497"

redis-cli -h power5 -a rnafold set "species:taxid:186497:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 186497 --input ./data/Ensembl/Pfuriosus/Pyrococcus_furiosus_dsm_3638.ASM730v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Pfuriosus/Pyrococcus_furiosus_dsm_3638.ASM730v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Pfur.list

----------------------------------------------------------------------------------------------------------------------------------

Phorikoshii (11) 1801

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Phorikoshii/Pyrococcus_horikoshii_ot3.ASM1110v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Phor.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:70601:name" "Pyrococcus horikoshii OT3"

redis-cli -h power5 -a rnafold set "species:name:Pyrococcus horikoshii OT3:taxid" "70601"

redis-cli -h power5 -a rnafold set "species:taxid:70601:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 70601 --input ./data/Ensembl/Phorikoshii/Pyrococcus_horikoshii_ot3.ASM1110v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Phorikoshii/Pyrococcus_horikoshii_ot3.ASM1110v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Phor.list

----------------------------------------------------------------------------------------------------------------------------------

Pabyssi (11) 1862

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pabyssi/Pyrococcus_abyssi_ge5.ASM19593v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Paby.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:272844:name" "Pyrococcus abyssi GE5"

redis-cli -h power5 -a rnafold set "species:name:Pyrococcus abyssi GE5:taxid" "272844"

redis-cli -h power5 -a rnafold set "species:taxid:272844:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 272844 --input ./data/Ensembl/Pabyssi/Pyrococcus_abyssi_ge5.ASM19593v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Pabyssi/Pyrococcus_abyssi_ge5.ASM19593v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Paby.list


----------------------------------------------------------------------------------------------------------------------------------

Mthermautotrophicus (11) 1756

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mthermautotrophicus/Methanothermobacter_thermautotrophicus_str_delta_h.ASM864v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mthe.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:187420:name" "Methanothermobacter thermautotrophicus str. Delta H"

redis-cli -h power5 -a rnafold set "species:name:Methanothermobacter thermautotrophicus str. Delta H:taxid" "187420"

redis-cli -h power5 -a rnafold set "species:taxid:187420:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 187420 --input ./data/Ensembl/Mthermautotrophicus/Methanothermobacter_thermautotrophicus_str_delta_h.ASM864v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mthermautotrophicus/Methanothermobacter_thermautotrophicus_str_delta_h.ASM864v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mthe.list

----------------------------------------------------------------------------------------------------------------------------------

Mkandleri (11) 1687

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mkandleri/Methanopyrus_kandleri_av19.ASM718v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mkan.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:190192:name" "Methanopyrus kandleri AV19"

redis-cli -h power5 -a rnafold set "species:name:Methanopyrus kandleri AV19:taxid" "190192"

redis-cli -h power5 -a rnafold set "species:taxid:190192:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 190192 --input ./data/Ensembl/Mkandleri/Methanopyrus_kandleri_av19.ASM718v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mkandleri/Methanopyrus_kandleri_av19.ASM718v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mkan.list

----------------------------------------------------------------------------------------------------------------------------------

Mmaripaludis (11) 1797

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mmaripaludis/Methanococcus_maripaludis_s2.ASM1158v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mmar.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:267377:name" "Methanococcus maripaludis S2"

redis-cli -h power5 -a rnafold set "species:name:Methanococcus maripaludis S2:taxid" "267377"

redis-cli -h power5 -a rnafold set "species:taxid:267377:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 267377 --input ./data/Ensembl/Mmaripaludis/Methanococcus_maripaludis_s2.ASM1158v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mmaripaludis/Methanococcus_maripaludis_s2.ASM1158v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mmar.list

----------------------------------------------------------------------------------------------------------------------------------

Mjannaschii (11) 1762

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mjannaschii/Methanocaldococcus_jannaschii_dsm_2661.ASM9166v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mjan.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:243232:name" "Methanocaldococcus jannaschii DSM 2661"

redis-cli -h power5 -a rnafold set "species:name:Methanocaldococcus jannaschii DSM 2661:taxid" "243232"

redis-cli -h power5 -a rnafold set "species:taxid:243232:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243232 --input ./data/Ensembl/Mjannaschii/Methanocaldococcus_jannaschii_dsm_2661.ASM9166v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mjannaschii/Methanocaldococcus_jannaschii_dsm_2661.ASM9166v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mjan.list

----------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------


--01--

> Start interactive mysql session (using `mysql` command-line client), with server hosted on power node:
~/anaconda2/bin/mysql -u rnafold -p -h compute-0-216 -D rnafold -P 14404


> Query to find duplicate update rows, i.e., pairs of updates referring to the same sequence and this containing conflicting or duplicate updates
(this was integrated into compare_updates.py)

select A.dummy_id as idA, B.dummy_id as idB, A.sequence_id, length(A.content), length(B.content) from sequence_series2_updates A, sequence_series2_updates B where A.dummy_id<B.dummy_id and A.sequence_id=B.sequence_id and A.source=B.source limit 10;


> Ingest new genomes

----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Spom.list --transl-table 1


redis-cli -h power5 -a rnafold set "species:taxid:284812:name" "Schizosaccharomyces pombe"

redis-cli -h power5 -a rnafold set "species:name:Schizosaccharomyces pombe:taxid" "284812"

redis-cli -h power5 -a rnafold set "species:taxid:284812:genomic-transl-table"  "1"

>>>>>>>>>

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 284812 --input ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Spombe/Schizosaccharomyces_pombe.ASM294v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Spom.list




for i in `seq 1 52`; do qsub -q tamirs -N shuf.Sau -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Saur.sh; done


cd ./data/Ensembl/Saureus/
ls Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list


cat ./data/Ensembl/Saureus/Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Saur.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadSau00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSau0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadSau$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_0$i.job.sh; done



>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 93061 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 30`; do qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_rnafold_sliding_window.sh; done


----------------------------------------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Senterica/Salmonella_enterica_subsp_enterica_serovar_typhimurium_str_lt2.ASM694v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Sent.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:99287:name" "Salmonella enterica subsp. enterica serovar Typhimurium str. LT2"

redis-cli -h power5 -a rnafold set "species:name:Salmonella enterica subsp. enterica:taxid" "99287"

redis-cli -h power5 -a rnafold set "species:taxid:99287:genomic-transl-table"  "11"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 99287 --input ./data/Ensembl/Senterica/Salmonella_enterica_subsp_enterica_serovar_typhimurium_str_lt2.ASM694v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Senterica/Salmonella_enterica_subsp_enterica_serovar_typhimurium_str_lt2.ASM694v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Sent.list


----------------------------------------------------------------------------------------------------------------------------------

nice time ~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Hpylori/Helicobacter_pylori_26695_gca_000307795.ASM30779v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Hpyl.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:85962:name" "Helicobacter pylori 26695"

redis-cli -h power5 -a rnafold set "species:name:Helicobacter pylori 26695:taxid" "85962"

redis-cli -h power5 -a rnafold set "species:taxid:85962:genomic-transl-table"  "11"


nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 85962 --input ./data/Ensembl/Hpylori/Helicobacter_pylori_26695_gca_000307795.ASM30779v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Hpylori/Helicobacter_pylori_26695_gca_000307795.ASM30779v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Hpyl.list

nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 85962 --from-shuffle 0 --to-shuffle 19 --window-step 10

----------------------------------------------------------------------------------------------------------------------------------

nice time ~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Nmeningitidis/Neisseria_meningitidis_mc58.ASM880v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Nmen.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:122586:name" "Neisseria meningitidis MC58"

redis-cli -h power5 -a rnafold set "species:name:Neisseria meningitidis MC58:taxid" "122586"

redis-cli -h power5 -a rnafold set "species:taxid:122586:genomic-transl-table"  "11"


nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 122586 --input ./data/Ensembl/Nmeningitidis/Neisseria_meningitidis_mc58.ASM880v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Nmeningitidis/Neisseria_meningitidis_mc58.ASM880v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Nmen.list


nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 122586 --from-shuffle 0 --to-shuffle 19 --window-step 10

----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Spyogenes/Streptococcus_pyogenes_m1_gas.ASM678v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Spyo.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:160490:name" "Streptococcus pyogenes M1 GAS"

redis-cli -h power5 -a rnafold set "species:name:Streptococcus pyogenes M1 GAS:taxid" "160490"

redis-cli -h power5 -a rnafold set "species:taxid:160490:genomic-transl-table"  "11"

nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 160490 --input ./data/Ensembl/Spyogenes/Streptococcus_pyogenes_m1_gas.ASM678v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Spyogenes/Streptococcus_pyogenes_m1_gas.ASM678v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Spyo.list

nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 160490 --from-shuffle 0 --to-shuffle 19 --window-step 10


----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mtuberculosis/Mycobacterium_tuberculosis_h37rv.ASM19595v2.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mtub.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:83332:name" "Mycobacterium tuberculosis H37Rv"

redis-cli -h power5 -a rnafold set "species:name:Mycobacterium tuberculosis H37Rv:taxid" "83332"

redis-cli -h power5 -a rnafold set "species:taxid:83332:genomic-transl-table"  "11"


nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 83332 --input ./data/Ensembl/Mtuberculosis/Mycobacterium_tuberculosis_h37rv.ASM19595v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Mtuberculosis/Mycobacterium_tuberculosis_h37rv.ASM19595v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Mtub.list


nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 83332 --from-shuffle 0 --to-shuffle 19 --window-step 10

----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Linterrogans/Leptospira_interrogans_serovar_copenhageni_str_fiocruz_l1_130.ASM768v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Lint.list --transl-table 11

redis-cli -h power5 -a rnafold set "species:taxid:267671:name" "Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130"

redis-cli -h power5 -a rnafold set "species:name:Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130:taxid" "267671"

redis-cli -h power5 -a rnafold set "species:taxid:267671:genomic-transl-table"  "11"

nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 267671 --input ./data/Ensembl/Linterrogans/Leptospira_interrogans_serovar_copenhageni_str_fiocruz_l1_130.ASM768v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Linterrogans/Leptospira_interrogans_serovar_copenhageni_str_fiocruz_l1_130.ASM768v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Lint.list

nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 267671 --from-shuffle 0 --to-shuffle 19 --window-step 10

----------------------------------------------------------------------------------------------------------------------------------
~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/SPCC/Synechocystis_sp_pcc_6803.ASM972v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.SPCC.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:1148:name" "Synechocystis sp. PCC 6803"

redis-cli -h power5 -a rnafold set "species:name:Synechocystis sp. PCC 6803:taxid" "1148"

redis-cli -h power5 -a rnafold set "species:taxid:1148:genomic-transl-table"  "11"

nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1148 --input ./data/Ensembl/SPCC/Synechocystis_sp_pcc_6803.ASM972v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/SPCC/Synechocystis_sp_pcc_6803.ASM972v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.SPCC.list


nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 1148 --from-shuffle 0 --to-shuffle 19 --window-step 10

----------------------------------------------------------------------------------------------------------------------------------
~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/SPCC/Synechocystis_sp_pcc_6803.ASM972v1.36.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.SPCC.list --transl-table 11


redis-cli -h power5 -a rnafold set "species:taxid:449447:name" "Microcystis aeruginosa NIES-843"

redis-cli -h power5 -a rnafold set "species:name:Microcystis aeruginosa NIES-843:taxid" "449447"

redis-cli -h power5 -a rnafold set "species:taxid:449447:genomic-transl-table"  "11"

nice time ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 449447 --input ./data/Ensembl/Maeruginosa/Microcystis_aeruginosa_nies_843.ASM1062v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Maeruginosa/Microcystis_aeruginosa_nies_843.ASM1062v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Maer.list

nice time ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 449447 --from-shuffle 0 --to-shuffle 19 --window-step 10


----------------------------------------------------------------------------------------------------------------------------------



June

--01--

>>>
> Launch scheduler
screen ~/anaconda2/bin/dask-scheduler --scheduler-file ~/rnafold/dask-scheduler.json

> Launch workers
for i in `seq 01 05`; do qsub -q tamirs -N worker$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_dask_worker.sh ; done






for i in `seq 30 39`;   do qsub -q tamirs -N loadOlu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Oluc.sh.template_0$i.job.sh; done


May

--07--


>>> Start mysql server instance on cluster node

cd ~/lib/mysql/
~/anaconda2/bin/mysqld_safe --user=mich1 --basedir=/a/home/cc/students/enginer/mich1/anaconda2/ --datadir=/a/home/cc/students/enginer/mich1/lib/mysql/ --log-error=/a/home/cc/students/enginer/mich1/lib/mysql/log/error --pid-file=/a/home/cc/students/enginer/mich1/lib/mysql/mysql.pid --port=14404 --socket=/a/home/cc/students/enginer/mich1/lib/mysql/socket


>>> Free up disk-space caching unused docker containers and images

docker ps --filter status=dead --filter status=exited -aq   | xargs docker rm -v
docker images --no-trunc | grep '<none>' | awk '{ print $3 }'     | xargs -r docker rmi





April

--17--
>>> Create non-root MySQL user for rnafold
CREATE USER 'rnafold'@'%';
%%SET PASSWORD FOR 'rnafold'@'localhost' = PASSWORD('ro3Phielaxeuph2Nchi7Pii');
SET PASSWORD   FOR 'rnafold'@'localhost' = PASSWORD('ro3Phielaxeuph2Nchi7Pii');
GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE, CREATE TEMPORARY TABLES, TRIGGER ON rnafold.* to 'rnafold'@'%' IDENTIFIED BY 'ro3Phielaxeuph2Nchi7Pii';
GRANT SHOW DATABASES, SHUTDOWN ON *.* to 'rnafold'@'%' IDENTIFIED BY 'ro3Phielaxeuph2Nchi7Pii';
--RENAME USER 'rnafold'@'localhost' TO 'rnafold'@'%';

--16--

>>> Migrate rnafold database to local instance

> Export script to create database objects
mysqldump --no-data --routines --events --ignore-table=rnafold.sequences --ignore-table=rnafold.sequence_series --ignore-table=rnafold.sequence_series2_updates --ignore-table=rnafold.sequence_floats2 --ignore-table=rnafold.sequence_checksums --lock-all-tables -u root -p rnafold | bzip2 >rnafold_scripts.sql.bz2


> Dump table data
cd <mysql_secure_dir>
mysqldump --no-create-info --tab=. --fields-escaped-by=\\ --hex-blob --ignore-table=rnafold.sequences --ignore-table=rnafold.sequence_series --ignore-table=rnafold.sequence_series2_updates --ignore-table=rnafold.sequence_floats2 --ignore-table=rnafold.sequence_checksums --lock-all-tables -u root -p rnafold


> Create an empty DB
CREATE DATABASE rnafold;

> Run the script to create database objects
~/anaconda2/bin/mysql -u root -p -h compute-0-227 -P 14404 --database rnafold <rnafold_scripts.sql

> Run the script to import the data
~/anaconda2/bin/mysqlimport --lock-tables --user root -p --host compute-0-227 --port 14404 --fields-escaped-by=\\ rnafold sequences2.txt
rnafold.sequences2: Records: 18172955  Deleted: 0  Skipped: 0  Warnings: 0

~/anaconda2/bin/mysqlimport --lock-tables --user root -p --host compute-0-227 --port 14404 --fields-escaped-by=\\ rnafold sequence_series2.txt
rnafold.sequence_series2: Records: 14931922  Deleted: 0  Skipped: 0  Warnings: 0

> Shutdown the mysql server
~/anaconda2/bin/mysqladmin -u root -p --host compute-0-227 --port 14404 shutdown


--12--

>>> Starting mysqld server (test instance) from command-line
~/anaconda2/bin/mysqld_safe --user=mich1 --basedir=/a/home/cc/students/enginer/mich1/anaconda2/ --datadir=/a/home/cc/students/enginer/mich1/lib/mysql/ --log-error=/a/home/cc/students/enginer/mich1/lib/mysql/log/error --pid-file=/a/home/cc/students/enginer/mich1/lib/mysql/mysql.pid --port=14404 --socket=/a/home/cc/students/enginer/mich1/lib/mysql/socket

Set root password:

SET PASSWORD = PASSWORD('vjDF8odnf/a');
SET PASSWORD = PASSWORD('vjDF8odnf/a');


>>> Monitor running queries:
mysqladmin -u root -p -i 5 -h compute-0-218 -P 14404 processlist




--04--

nice time ~/anaconda2/bin/python2 test_process_series_data.py --taxid=559292 --profile=1750:10:begin:150 --codonw=True --pax-db=./data/paxdb/559292/4932-WHOLE_ORGANISM-integrated.txt.v2.converted.csv >out.txt



>>> qsub for interactive matlab session:
qsub -q tamirs -N intractv1 -l mem=3000mb,pmem=3000mb,vmem=7000mb,pvmem=7000mb,cput=9:00:00 -I




March

--19--

>>> Reference implementations of ENc (effective number of codons) for comparison:
1. CodonW 
https://codonw.sourceforge.net

should be here but I can't find it anywhere...
https://galaxy.pasteyr.fr

2. Chips (EMBOSS)
https://www.bioinformatics.nl/cgi-bin/emboss/help/chips



--5--

>>>Combine PDF to create NxN document
pdfnup --nup 4x4 mfe_v2_40nt_genelevel_logpval_vs_gc_*.pdf


>>> Rerun
ls gcdata_v2_taxid_*.h5 | perl -pe "s/gcdata_v2_taxid_//" | perl -pe "s/_profile.*//" | sort | uniq | perl -ne "chomp $_; print(\$_,',');" | head



~/anaconda2/bin/python2 plot_xy.py gcdata_v2_taxid_*_profile_50_1_begin_10.h5
mv scatter_xy.pdf scatter_xy_profile_50_1_begin_10.pdf



February


--21--

>>> Prepare pax-db data -- convert identifiers, and transform abundances to percentiles.
nice ~/anaconda2/bin/python2 paxdb-test.py --pax-file ./data/paxdb/559292/4932-WHOLE_ORGANISM-integrated.txt --taxid 559292 --convert-ids yeast >./data/paxdb/559292/4932-WHOLE_ORGANISM-integrated.txt.converted.v2.csv

>>> Test the distribution of percentiles (should be uniform between 0.0-1.0):
# Histogram using gnuplot (clever trick from: http://stackoverflow.com/a/2538846)
binwidth=0.005
bin(x,width)=width*floor(x/width) + width/2.0
set style fill solid noborder
set boxwidth binwidth*0.75
set datafile separator ','
plot "4932-WHOLE_ORGANISM-integrated.txt.v2.converted.csv" using (bin($2,binwidth)):(1.0) smooth freq with boxes





--11--
>>>Second upsert

Range (1428505 rows):
dummy_id between 3892395 and 5320899

split into groups of ~ 0.5M
dummy_id between 3892395 and 4400000

dummy_id between 4400000 and 4900000

dummy_id between 4000000 and 5320899




-- Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=6 where dummy_id between 3892395 and 5320899 and source=102;

-- Perform the upsert, for group 1/3:
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id between 3892395 and 4400000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;

-- Update source to mark the processed updates as 'done'
update sequence_series2_updates set source=222
where source=102 and dummy_id between 3892395 and 4400000;



>>> Plot data

time ~/anaconda2/bin/python2 test_process_series_data.py --taxid=511145 --profile=2000:10:begin

plot_xy.py ......





-------------------------------------------------------------------------------------------------------------------------

--09--

>>> Perform upsert for accumulated table updates generated by calculating MFE profiles for region >150bp


-- Mark all updates (for future debugging/information). This will be propagated into the main table during the upsert
update sequence_series2_updates set ext_index=5 where source=102;

-- Perform the upsert, for rows<4000000 (used to divide the operation)
insert into sequence_series2 (sequence_id, source, content, ext_index)
select sequence_series2_updates.sequence_id, sequence_series2_updates.source, sequence_series2_updates.content, sequence_series2_updates.ext_index
from sequence_series2_updates
where sequence_series2_updates.source = 102
and sequence_series2_updates.dummy_id < 4000000
on duplicate key update content=sequence_series2_updates.content, ext_index=sequence_series2_updates.ext_index;
-- Update source to mark the processed updates as 'done'
update sequence_series2_updates set source=212
where source=102 and dummy_id < 4000000;

-- Note: On second thought, adding a minimal limit on dummy_id (in addition to the maximal limit) should allow the db to entirely ignore old sections of the db (since this is a monotonic clustered index)... but it works pretty fast as it is.




>>> Enqueue additional species for processing

 ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 511145 --from-shuffle 0 --to-shuffle 21 --window-step 10

~/anaconda2/bin/python2 compare_updates.py



January

--16--

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 511145 --from-shuffle 0 --to-shuffle 21 --window-step 10 


> Create staging table to optimize 'upsert' operation


CREATE TABLE `sequence_series2_updates` (
  `dummy_id` int(11) NOT NULL AUTO_INCREMENT,   -- 'dummy' monotonic primary key (equivalent to having no explicit primary key). Used to ensure insert operations happen at the end of the list.
  `sequence_id` int(11) NOT NULL,               -- keys for parallel item in the main table (but no constraints enforced)
  `content` blob,                               -- data to update in the main table
  `source` mediumint(9) NOT NULL,               -- keys for parallel item in the main table (but no constraints enforced)
  `ext_index` mediumint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`dummy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=ascii;
GRANT select, insert, delete, update on table `sequence_series2_updates` to `rnafold`;


> Enqueue missing sequence, using window-step=10:
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py --species 511145 --from-shuffle 0 --to-shuffle 21 --window-step 10

redis-cli -a rnafold -h power5 lrange "queue:tag:awaiting-rna-fold-window-40-0:members" 0 -1 | perl -pe "s/\/.*//" | sort | uniq -c




CREATE TABLE `sequence_series2_updates` (
  `dummy_id` int(11) NOT NULL AUTO_INCREMENT,
  `sequence_id` int(11) NOT NULL,
  `content` blob,
  `source` mediumint(9) NOT NULL,
  `ext_index` mediumint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`dummy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=ascii;
GRANT all on table `sequence_series2_updates` to `rnafold`;




2016

September

~/anaconda2/bin/conda install --channel https://conda.anaconda.org/etetoolkit ete3

> WDL test

java -Dconfig.file=/a/home/cc/students/enginer/mich1/wdl/application.conf -jar cromwell-0.19.3.jar


redis-cli -a rnafold keys "species:taxid:*:CDS" | perl -pe "s/species:taxid://" | perl -pe "s/:CDS//" | perl -ne 'chomp($_); print($_, ",");'


redis-cli -a rnafold keys "species:taxid:*:CDS" | perl -pe "s/species:taxid://" | perl -pe "s/:CDS//" | perl -ne 'chomp($_); print($_, "\n");' | ~/anaconda2/bin/python2 auto_qsub.py convert3.template

qsub -q tamirs -N plot00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 convert3.template_000.job.sh
for i in `seq 1 9`; do qsub -q tamirs -N plot0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 convert3.template_00$i.job.sh; done
for i in `seq 10 25`; do qsub -q tamirs -N plot$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 convert3.template_0$i.job.sh; done


# Find queue items by organism:
redis-cli -a rnafold lrange "queue:tag:awaiting-rna-fold-window-40-0:members" 0 -1 | perl -pe "s/\/.*//" | sort | uniq -c

# Get list of all plotted taxids:
ls gcdata_taxid_*.h5 | perl -pe "s/gcdata_taxid_//" | perl -pe "s/[.]h5//"

nice ~/anaconda2/bin/python2 convert_data_for_plotting3.py 295405,93061,284811,339860,3055
OK

nice ~/anaconda2/bin/python2 convert_data_for_plotting3.py 391623,65357,420247,45670,997884
OK

nice ~/anaconda2/bin/python2 convert_data_for_plotting3.py 402612,511145,1125630,243274,695850
OK

nice ~/anaconda2/bin/python2 convert_data_for_plotting3.py 556484,63737,163003,400667,208964
IP

nice ~/anaconda2/bin/python2 convert_data_for_plotting3.py 1116230,44056,223926,559292


~/anaconda2/bin/python2 plot_xy.py test.h5

 1) "species:taxid:511145:tax-group"  +
 2) "species:taxid:391623:tax-group"  +
 3) "species:taxid:400667:tax-group"
 4) "species:taxid:559292:tax-group"  +
 5) "species:taxid:45670:tax-group"  Fixed
 6) "species:taxid:284811:tax-group"  +
 7) "species:taxid:208964:tax-group"  +
 8) "species:taxid:163003:tax-group" Fixed
 9) "species:taxid:93061:tax-group"  +
10) "species:taxid:3055:tax-group"   +
11) "species:taxid:295405:tax-group"  +
12) "species:taxid:420247:tax-group"  +



> Start worker processes
for i in `seq 1 30`; do qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_rnafold_sliding_window.sh; done



Paeruginosa
Egossypii
Bfragilis
Creinhardtii
Tbarophilus
Msmithii
Ecoli
Scerevisiae
Saureus

~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 400667 rna-fold-window-40-0 1

----------------------------------------------------------------------------------------------------------------------------------



~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aanophagefferens/Aureococcus_anophagefferens.v_1_0.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aano.list --transl-table 1

redis 127.0.0.1:6379> set "species:taxid:44056:name" "Aureococcus anophagefferens"
OK
redis 127.0.0.1:6379> set "species:name:Aureococcus anophagefferens:taxid" "44056"
OK
redis 127.0.0.1:6379> set "species:taxid:44056:genomic-transl-table"  "1"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 44056 --input ./data/Ensembl/Aanophagefferens/Aureococcus_anophagefferens.v_1_0.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Aanophagefferens/Aureococcus_anophagefferens.v_1_0.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Aano.list 


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Aan -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Aano.sh; done

Problem during shuffling!!!
Some proteins start with L instead of M! are they partial? why does this cause translation to change?



>>> Submit generated scripts
qsub -q tamirs -N loadAan00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aano.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadAan0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aano.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadAan$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aano.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Acandida/Albugo_candida.ASM107853v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Acan.list --transl-table 1

redis 127.0.0.1:6379> set "species:taxid:65357:name" "Albugo candida"
OK
redis 127.0.0.1:6379> set "species:name:Albugo candida:taxid" "65357"
OK
redis 127.0.0.1:6379> set "species:taxid:65357:genomic-transl-table"  "1"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 65357 --input ./data/Ensembl/Acandida/Albugo_candida.ASM107853v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Acandida/Albugo_candida.ASM107853v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Acan.list 

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Aca -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Acan.sh; done


qsub -q tamirs -N loadAca00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Acan.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadAca0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Acan.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadAca$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Acan.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Saureus/Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Saur.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:93061:name" "Staphylococcus aureus subsp. aureus NCTC 8325"
OK
redis 127.0.0.1:6379> set "species:name:Staphylococcus aureus subsp. aureus NCTC 8325:taxid" "93061"
OK
redis 127.0.0.1:6379> set "species:taxid:93061:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 93061 --input ./data/Ensembl/Saureus/Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Saureus/Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Saur.list

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Sau -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Saur.sh; done


cd ./data/Ensembl/Saureus/
ls Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list


cat ./data/Ensembl/Saureus/Staphylococcus_aureus_subsp_aureus_nctc_8325.ASM1342v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Saur.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadSau00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSau0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadSau$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Saur.sh.template_0$i.job.sh; done



>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 93061 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 30`; do qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_rnafold_sliding_window.sh; done



----------------------------------------------------------------------------------------------------------------------------------

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Sroseus/Salinicoccus_roseus.ASM81990v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Sros.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:45670:name" "Salinicoccus roseus"
OK
redis 127.0.0.1:6379> set "species:name:Salinicoccus roseus:taxid" "45670"
OK
redis 127.0.0.1:6379> set "species:taxid:45670:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 45670 --input ./data/Ensembl/Sroseus/Salinicoccus_roseus.ASM81990v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Sroseus/Salinicoccus_roseus.ASM81990v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Sros.list

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Sro -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Sros.sh; done

cd ./data/Ensembl/Sroseus/
mich1@power5:~/rnafold/data/Ensembl/Sroseus$ ls Salinicoccus_roseus.ASM81990v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Salinicoccus_roseus.ASM81990v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list 


cat ./data/Ensembl/Sroseus/Salinicoccus_roseus.ASM81990v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Sros.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadSro00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sros.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSro0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sros.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadSro$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sros.sh.template_0$i.job.sh; done


>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 45670 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 30`; do qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_rnafold_sliding_window.sh; done




----------------------------------------------------------------------------------------------------------------------------------



test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tbarophilus/Thermococcus_barophilus_mp.ASM15110v2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tbar.list --transl-table 11


redis 127.0.0.1:6379> set "species:taxid:391623:name" "Thermococcus barophilus MP"
OK
redis 127.0.0.1:6379> set "species:name:Thermococcus barophilus MP:taxid" "391623"
OK
redis 127.0.0.1:6379> set "species:taxid:391623:genomic-transl-table"  "11"
OK

 ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 391623 --input ./data/Ensembl/Tbarophilus/Thermococcus_barophilus_mp.ASM15110v2.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tbarophilus/Thermococcus_barophilus_mp.ASM15110v2.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tbar.list

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Tba -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Tbar.sh; done



cd ./data/Ensembl/Tbarophilus/
mich1@power5:~/rnafold/data/Ensembl/Tbarophilus$ ls Thermococcus_barophilus_mp.ASM15110v2.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Thermococcus_barophilus_mp.ASM15110v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list


cat ./data/Ensembl/Tbarophilus/Thermococcus_barophilus_mp.ASM15110v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Tbar.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadTba00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tbar.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadTba0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tbar.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadTba$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tbar.sh.template_0$i.job.sh; done


>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 391623 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 30`; do qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_rnafold_sliding_window.sh; done



----------------------------------------------------------------------------------------------------------------------------------


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Msmithii/Methanobrevibacter_smithii_atcc_35061.ASM1652v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Msmi.list --transl-table 11


redis 127.0.0.1:6379> set "species:taxid:420247:name" "Methanobrevibacter smithii ATCC 35061"
OK
redis 127.0.0.1:6379> set "species:name:Methanobrevibacter smithii ATCC 35061:taxid" "420247"
OK
redis 127.0.0.1:6379> set "species:taxid:420247:genomic-transl-table"  "11"
OK


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 420247 --input ./data/Ensembl/Msmithii/Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Msmithii/Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Msmi.list


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Msm -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Msmi.sh; done

cd ./data/Ensembl/Msmithii/
mich1@power5:~/rnafold/data/Ensembl/Msmithii$ ls Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list

cat ./data/Ensembl/Msmithii/Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Msmi.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadMsm00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msmi.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadMsm0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msmi.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadMsm$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msmi.sh.template_0$i.job.sh; done


~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 420247 rna-fold-window-40-0 1




----------------------------------------------------------------------------------------------------------------------------------


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tcleftensis/Thermococcus_cleftensis.ASM26552v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tcle.list --transl-table 11


redis 127.0.0.1:6379> set "species:taxid:163003:name" "Thermococcus cleftensis"
OK
redis 127.0.0.1:6379> set "species:name:Thermococcus cleftensis:taxid" "163003"
OK
redis 127.0.0.1:6379> set "species:taxid:163003:genomic-transl-table"  "11"
OK


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 163003 --input ./data/Ensembl/Tcleftensis/Thermococcus_cleftensis.ASM26552v1.cds.all.fa.gz --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Tcleftensis/Thermococcus_cleftensis.ASM26552v1.cds.all.fa.gz.filtered.fna --gene-ids-file ./data/Ensembl/coding_genes_list.Tcle.list

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Tcl -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_shuffle_fasta_Tcle.sh; done

ls Thermococcus_cleftensis.ASM26552v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Thermococcus_cleftensis.ASM26552v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list

cat ./data/Ensembl/Msmithii/Methanobrevibacter_smithii_atcc_35061.ASM1652v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Msmi.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadTcl00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tcle.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadTcl0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tcle.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadTcl$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tcle.sh.template_0$i.job.sh; done


~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 163003 rna-fold-window-40-0 1


----------------------------------------------------------------------------------------------------------------------------------
PT

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ptricornutum/Phaeodactylum_tricornutum.ASM15095v2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ptri.list --transl-table 1

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 556484 --input ./data/Ensembl/Ptricornutum/Phaeodactylum_tricornutum.ASM15095v2.cds.all.fa.gz  --variant Ensembl --type cds --dry-run --output-fasta ./data/Ensembl/Ptricornutum/Phaeodactylum/Phaeodactylum_tricornutum.ASM15095v2.cds.all.fa.gz.filtered.fna


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Ptr -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Ptri.sh; done


cat ./data/Ensembl/Ptricornutum/Phaeodactylum_tricornutum.ASM15095v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Ptri.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadPtr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ptri.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadPtr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ptri.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadPtr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ptri.sh.template_0$i.job.sh; done 


----------------------------------------------------------------------------------------------------------------------------------
Bfragilis

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bfragilis/Bacteroides_fragilis_ych46.ASM992v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bfra.list --transl-table 11

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 295405 --input ./data/Ensembl/Bfragilis/Bacteroides_fragilis_ych46.ASM992v1.cds.all.fa.gz --variant Ensembl --type cds --output-fasta ./data/Ensembl/Bfragilis/Bacteroides_fragilis_ych46.ASM992v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Bfr -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Bfra.sh; done


ls Bacteroides_fragilis_ych46.ASM992v1.cds.all.fa.gz.filtered.fna.shuffled.v2.compute-0-*.fna >Bacteroides_fragilis_ych46.ASM992v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list

cat ./data/Ensembl/Bfragilis/Bacteroides_fragilis_ych46.ASM992v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Bfra.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadBfr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bfra.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadBfr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bfra.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadBfr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bfra.sh.template_0$i.job.sh; done


screen ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 295405 rna-fold-window-40-0 1


----------------------------------------------------------------------------------------------------------------------------------
Kpneumoniae


test_gff_extract_coding_genes.py --gff ./data/Ensembl/Kpneumoniae/Klebsiella_pneumoniae_subsp_pneumoniae_hs11286.ASM24018v2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Kpne.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:1125630:name" "Klebsiella pneumoniae subsp. pneumoniae HS11286"
OK
redis 127.0.0.1:6379> set "species:name:Klebsiella pneumoniae subsp. pneumoniae HS11286:taxid" "1125630"
OK
redis 127.0.0.1:6379> set "species:taxid:1125630:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1125630 --input ./data/Ensembl/Kpneumoniae/Klebsiella_pneumoniae_subsp_pneumoniae_hs11286.ASM24018v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Kpne.list --output-fasta ./data/Ensembl/Kpneumoniae/Klebsiella_pneumoniae_subsp_pneumoniae_hs11286.ASM24018v2.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Kpn -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Kpne.sh; done

cat ./data/Ensembl/Kpneumoniae/Klebsiella_pneumoniae_subsp_pneumoniae_hs11286.ASM24018v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Kpne.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadKpn00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Kpne.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadKpn0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Kpne.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadKpn$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Kpne.sh.template_0$i.job.sh; done


screen ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 1125630 rna-fold-window-40-0 1 >requeue.1125630




----------------------------------------------------------------------------------------------------------------------------------
Vparahaemolyticus


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Vparahaemolyticus/Vibrio_parahaemolyticus_rimd_2210633.ASM19609v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Vpar.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:223926:name" "Vibrio parahaemolyticus RIMD 2210633"
OK
redis 127.0.0.1:6379> set "species:name:Vibrio parahaemolyticus RIMD 2210633:taxid" "223926"
OK
redis 127.0.0.1:6379> set "species:taxid:223926:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 223926 --input ./data/Ensembl/Vparahaemolyticus/Vibrio_parahaemolyticus_rimd_2210633.ASM19609v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Vpar.list --output-fasta ./data/Ensembl/Vparahaemolyticus/Vibrio_parahaemolyticus_rimd_2210633.ASM19609v1.cds.all.fa.gz.filtered.fna 

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Vpar -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Vpar.sh; done


cat ./data/Ensembl/Vparahaemolyticus/Vibrio_parahaemolyticus_rimd_2210633.ASM19609v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Vpar.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadVpa00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Vpar.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadVpa0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Vpar.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadVpa$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Vpar.sh.template_0$i.job.sh; done


screen ~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 223926 rna-fold-window-40-0 1 >requeue.223926



----------------------------------------------------------------------------------------------------------------------------------
Olucimarinus

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Olucimarinus/Ostreococcus_lucimarinus.ASM9206v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Oluc.list --transl-table 1


redis 127.0.0.1:6379> set "species:taxid:436017:name" "Ostreococcus lucimarinus"
OK
redis 127.0.0.1:6379> set "species:name:Ostreococcus lucimarinus:taxid" "436017"
OK
redis 127.0.0.1:6379> set "species:taxid:436017:genomic-transl-table"  "1"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 436017 --input ./data/Ensembl/Olucimarinus/Ostreococcus_lucimarinus.ASM9206v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Oluc.list --output-fasta ./data/Ensembl/Olucimarinus/Ostreococcus_lucimarinus.ASM9206v1.cds.all.fa.gz.filtered.fna

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Oluc -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Oluc.sh; done

cat ./data/Ensembl/Olucimarinus/Ostreococcus_lucimarinus.ASM9206v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Oluc.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadOlu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Oluc.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadOlu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Oluc.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadOlu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Oluc.sh.template_0$i.job.sh; done




----------------------------------------------------------------------------------------------------------------------------------
Bacteroides nordii


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bnordii/Bacteroides_nordii_cl02t12c05.Bact_nord_CL02T12C05_V1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bnor.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:997884:name" "Bacteroides nordii"
OK
redis 127.0.0.1:6379> set "species:name:Bacteroides nordii:taxid" "997884"
OK
redis 127.0.0.1:6379> set "species:taxid:997884:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 997884 --input ./data/Ensembl/Bnordii/Bacteroides_nordii_cl02t12c05.Bact_nord_CL02T12C05_V1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Bnor.list --output-fasta ./data/Ensembl/Bnordii/Bacteroides_nordii_cl02t12c05.Bact_nord_CL02T12C05_V1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Bnor -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Bnor.sh; done

cat ./data/Ensembl/Bnordii/Bacteroides_nordii_cl02t12c05.Bact_nord_CL02T12C05_V1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Bnor.sh.template 


>>> Submit generated scripts
qsub -q tamirs -N loadBno00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bnor.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadBno0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bnor.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadBno$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bnor.sh.template_0$i.job.sh; done



----------------------------------------------------------------------------------------------------------------------------------
Nostoc punctiforme

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Npunctiforme/Nostoc_punctiforme_pcc_73102.ASM2002v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Npun.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:63737:name" "Nostoc punctiforme PCC 73102"
OK
redis 127.0.0.1:6379> set "species:name:Nostoc punctiforme PCC 73102:taxid" "63737"
OK
redis 127.0.0.1:6379> set "species:taxid:63737:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 63737 --input ./data/Ensembl/Npunctiforme/Nostoc_punctiforme_pcc_73102.ASM2002v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Npun.list --output-fasta ./data/Ensembl/Npunctiforme/Nostoc_punctiforme_pcc_73102.ASM2002v1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Npun -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Npun.sh; done

cat ./data/Ensembl/Npunctiforme/Nostoc_punctiforme_pcc_73102.ASM2002v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Npun.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadNpu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npun.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadNpu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npun.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadNpu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npun.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------

Wolbachia pipientis

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Wpipientis/Wolbachia_pipientis_walbb.ASM24241v3.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Wpip.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:1116230:name" "Wolbachia pipientis wAlbB"
OK
redis 127.0.0.1:6379> set "species:name:Wolbachia pipientis wAlbB:taxid" "1116230"
OK
redis 127.0.0.1:6379> set "species:taxid:1116230:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1116230 --input ./data/Ensembl/Wpipientis/Wolbachia_pipientis_walbb.ASM24241v3.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Wpip.list --output-fasta ./data/Ensembl/Wpipientis/Wolbachia_pipientis_walbb.ASM24241v3.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Wpip -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Wpip.sh; done

cat ./data/Ensembl/Wpipientis/Wolbachia_pipientis_walbb.ASM24241v3.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Wpip.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadWpi00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wpip.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadWpi0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wpip.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadWpi$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wpip.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------


T maritima

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tmar.list --transl-table 11

redis 127.0.0.1:6379> set "species:taxid:243274:name" "Thermotoga maritima MSB8"
OK
redis 127.0.0.1:6379> set "species:name:Thermotoga maritima MSB8:taxid" "243274"
OK
redis 127.0.0.1:6379> set "species:taxid:243274:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 243274  --input ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Tmar.list --output-fasta ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Tmar -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Tmar.sh; done

cat ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Tmar.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadTma00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tmar.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadTma0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tmar.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadTma$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tmar.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Flavobacterium psychrophilum


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tmar.list --transl-table 11

redis-cli -a rnafold set "species:taxid:402612:name" "Flavobacterium psychrophilum JIP02/86"

redis-cli -a rnafold set "species:name:Flavobacterium psychrophilum JIP02/86:taxid" "402612"

redis-cli -a rnafold set "species:taxid:402612:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 402612  --input ./data/Ensembl/Fpsychrophilum/Flavobacterium_psychrophilum_jip02_86.ASM6430v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Fpsy.list --output-fasta ./data/Ensembl/Fpsychrophilum/Flavobacterium_psychrophilum_jip02_86.ASM6430v2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Fpsy -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Fpsy.sh; done
 
cat ./data/Ensembl/Fpsychrophilum/Flavobacterium_psychrophilum_jip02_86.ASM6430v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list  | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Fpsy.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadFps00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Fpsy.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadFps0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Fpsy.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadFps$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Fpsy.sh.template_0$i.job.sh; done




----------------------------------------------------------------------------------------------------------------------------------
Saprolegnia parasitica

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tmaritima/Thermotoga_maritima_msb8.ASM854v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tmar.list --transl-table 1

redis-cli -a rnafold set "species:taxid:695850:name" "Saprolegnia parasitica CBS 223.65"

redis-cli -a rnafold set "species:name:Saprolegnia parasitica CBS 223.65:taxid" "695850"

redis-cli -a rnafold set "species:taxid:695850:genomic-transl-table"  "1"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 695850  --input ./data/Ensembl/Sparasitica/Saprolegnia_parasitica_cbs_223_65.ASM15154v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Spar.list --output-fasta ./data/Ensembl/Sparasitica/Saprolegnia_parasitica_cbs_223_65.ASM15154v2.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Spar -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_shuffle_fasta_Spar.sh; done

cat ./data/Ensembl/Sparasitica/Saprolegnia_parasitica_cbs_223_65.ASM15154v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Spar.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadSpa00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Spar.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSpa0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Spar.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadSpa$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Spar.sh.template_0$i.job.sh; done




----------------------------------------------------------------------------------------------------------------------------------
Methanosphaera stadtmanae


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mstadtmanae/Methanosphaera_stadtmanae_dsm_3091.ASM1254v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Msta.list --transl-table 11

redis-cli -a rnafold set "species:taxid:339860:name" "Methanosphaera stadtmanae DSM 3091"

redis-cli -a rnafold set "species:name:Methanosphaera stadtmanae DSM 3091:taxid" "339860"

redis-cli -a rnafold set "species:taxid:339860:genomic-transl-table"  "11"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 339860  --input ./data/Ensembl/Mstadtmanae/Methanosphaera_stadtmanae_dsm_3091.ASM1254v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Msta.list --output-fasta ./data/Ensembl/Mstadtmanae/Methanosphaera_stadtmanae_dsm_3091.ASM1254v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Msta -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Msta.sh; done

cat ./data/Ensembl/Mstadtmanae/Methanosphaera_stadtmanae_dsm_3091.ASM1254v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Msta.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadMst00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msta.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadMst0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msta.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadMst$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Msta.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
C crispus

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ccrispus/Chondrus_crispus.ASM35022v2.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ccri.list --transl-table 1

redis-cli -a rnafold set "species:taxid:2769:name" "Chondrus crispus (carragheen)"

redis-cli -a rnafold set "species:name:Chondrus crispus (carragheen):taxid" "2769"

redis-cli -a rnafold set "species:taxid:2769:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:2769:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 2769  --input ./data/Ensembl/Ccrispus/Chondrus_crispus.ASM35022v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Ccri.list --output-fasta ./data/Ensembl/Ccrispus/Chondrus_crispus.ASM35022v2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Ccri -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Ccri.sh; done

cat ./data/Ensembl/Ccrispus/Chondrus_crispus.ASM35022v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Ccri.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadCcr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ccri.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadCcr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ccri.sh.template_00$i.job.sh; done

for i in `seq 10 52`;   do qsub -q tamirs -N loadCcr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ccri.sh.template_0$i.job.sh; done





----------------------------------------------------------------------------------------------------------------------------------

Synechococcus elongatus PCC 6301


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Selongatus/Synechococcus_elongatus_pcc_6301.ASM1006v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Selo.list --transl-table 11

269084

redis-cli -a rnafold set "species:taxid:269084:name" "Synechococcus elongatus PCC 6301"

redis-cli -a rnafold set "species:name:Synechococcus elongatus PCC 6301:taxid" "269084"

redis-cli -a rnafold set "species:taxid:269084:genomic-transl-table"  "11"

redis-cli -a rnafold set "species:taxid:269084:tax-group" "Bacteria"

#redis-cli -a rnafold set "species:taxid:269084:mitochondrial-transl-table"  "???"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 269084  --input ./data/Ensembl/Selongatus/Synechococcus_elongatus_pcc_6301.ASM1006v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Selo.list --output-fasta ./data/Ensembl/Selongatus/Synechococcus_elongatus_pcc_6301.ASM1006v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Selo -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Selo.sh; done


cat ./data/Ensembl/Selongatus/Synechococcus_elongatus_pcc_6301.ASM1006v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Selo.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadSel00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Selo.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSel0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Selo.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs -N loadSel$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Selo.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Gloeobacter violaceus


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Gviolaceus/Gloeobacter_violaceus_pcc_7421.ASM1138v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Gvio.list --transl-table 11

redis-cli -a rnafold set "species:taxid:251221:name" "Gloeobacter violaceus PCC 7421"

redis-cli -a rnafold set "species:name:Gloeobacter violaceus PCC 7421:taxid" "251221"

redis-cli -a rnafold set "species:taxid:251221:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:251221:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:251221:mitochondrial-transl-table"  "???"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 251221  --input ./data/Ensembl/Gviolaceus/Gloeobacter_violaceus_pcc_7421.ASM1138v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Gvio.list --output-fasta ./data/Ensembl/Gviolaceus/Gloeobacter_violaceus_pcc_7421.ASM1138v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Gvio -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Gvio.sh; done

cat ./data/Ensembl/Gviolaceus/Gloeobacter_violaceus_pcc_7421.ASM1138v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Gvio.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadGvi00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gvio.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadGvi0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gvio.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadGvi$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gvio.sh.template_0$i.job.sh; done



----------------------------------------------------------------------------------------------------------------------------------

Brevundimonas subvibrioides


633149

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bsubvibrioides/Brevundimonas_subvibrioides_atcc_15264.ASM14460v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bsub.list --transl-table 11


redis-cli -a rnafold set "species:taxid:633149:name" "Brevundimonas subvibrioides ATCC 15264" 

redis-cli -a rnafold set "species:name:Brevundimonas subvibrioides ATCC 15264:taxid" "633149"

redis-cli -a rnafold set "species:taxid:633149:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:633149:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:633149:mitochondrial-transl-table"  "???"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 633149  --input ./data/Ensembl/Bsubvibrioides/Brevundimonas_subvibrioides_atcc_15264.ASM14460v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Bsub.list --output-fasta ./data/Ensembl/Bsubvibrioides/Brevundimonas_subvibrioides_atcc_15264.ASM14460v1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Bsub -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Bsub.sh; done


>>> Submit generated scripts
qsub -q tamirs -N loadBsu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsub.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadBsu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsub.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadBsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsub.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Thermococcus nautili

195522


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tnautili/Thermococcus_nautili.ASM58549v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tnau.list --transl-table 11


redis-cli -a rnafold set "species:taxid:195522:name" "Thermococcus nautili"

redis-cli -a rnafold set "species:name:Thermococcus nautili:taxid" "195522"

redis-cli -a rnafold set "species:taxid:195522:tax-group" "Archaea"

redis-cli -a rnafold set "species:taxid:195522:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:195522:mitochondrial-transl-table"  "???"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 195522  --input ./data/Ensembl/Tnautili/Thermococcus_nautili.ASM58549v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Tnau.list --output-fasta ./data/Ensembl/Tnautili/Thermococcus_nautili.ASM58549v1.cds.all.fa.gz.filtered.fna

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Tnau -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Tnau.sh; done

cat ./data/Ensembl/Tnautili/Thermococcus_nautili.ASM58549v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Tnau.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadTna00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tnau.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadTna0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tnau.sh.template_00$i.job.sh; done

for i in `seq 10 50`;   do qsub -q tamirs -N loadTna$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tnau.sh.template_0$i.job.sh; done




----------------------------------------------------------------------------------------------------------------------------------

Gloeobacter kilaueensis JS1

1183438

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Gkilaueensis/Gloeobacter_kilaueensis_js1.ASM48453v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Gkil.list --transl-table 11


redis-cli -a rnafold set "species:taxid:1183438:name" "Gloeobacter kilaueensis JS1"

redis-cli -a rnafold set "species:name:Gloeobacter kilaueensis JS1:taxid" "1183438"

redis-cli -a rnafold set "species:taxid:1183438:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:1183438:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:1183438:mitochondrial-transl-table"  "???"


~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1183438  --input ./data/Ensembl/Gkilaueensis/Gloeobacter_kilaueensis_js1.ASM48453v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Gkil.list --output-fasta ./data/Ensembl/Gkilaueensis/Gloeobacter_kilaueensis_js1.ASM48453v1.cds.all.fa.gz.filtered.fna

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Gkil -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Gkil.sh; done


cat ./data/Ensembl/Gkilaueensis//Gloeobacter_kilaueensis_js1.ASM48453v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Gkil.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadGki00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gkil.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadGki0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gkil.sh.template_00$i.job.sh; done

for i in `seq 10 50`;   do qsub -q tamirs -N loadGki$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gkil.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------

Diplodia seriata

420778

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Dseriata/Diplodia_seriata.UCDDS831v0.1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Dser.list --transl-table 1

redis-cli -a rnafold set "species:taxid:420778:name" "Diplodia seriata"

redis-cli -a rnafold set "species:name:Diplodia seriata:taxid" "420778"

redis-cli -a rnafold set "species:taxid:420778:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:420778:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:420778:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 420778  --input ./data/Ensembl/Dseriata/Diplodia_seriata.UCDDS831v0.1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Dser.list --output-fasta ./data/Ensembl/Dseriata/Diplodia_seriata.UCDDS831v0.1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 52`; do qsub -q tamirs -N shuf.Dser -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Dser.sh; done

cat ./data/Ensembl/Dseriata/Diplodia_seriata.UCDDS831v0.1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Dser.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadDse00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dser.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadDse0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dser.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadDse$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dser.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Neofusicoccum parvum UCRNP2

1287680

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Nparvum/Neofusicoccum_parvum_ucrnp2.UCRNP2V3.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Npar.list --transl-table 1

redis-cli -a rnafold set "species:taxid:1287680:name" "Neofusicoccum parvum UCRNP2" 

redis-cli -a rnafold set "species:name:Neofusicoccum parvum UCRNP2:taxid" "1287680"

redis-cli -a rnafold set "species:taxid:1287680:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:1287680:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:1287680:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1287680 --input ./data/Ensembl/Nparvum/Neofusicoccum_parvum_ucrnp2.UCRNP2V3.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Npar.list --output-fasta ./data/Ensembl/Nparvum/Neofusicoccum_parvum_ucrnp2.UCRNP2V3.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Npar -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Npar.sh; done

cat ./data/Ensembl/Nparvum/Neofusicoccum_parvum_ucrnp2.UCRNP2V3.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Npar.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadNpa00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npar.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadNpa0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npar.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadNpa$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Npar.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Flavobacterium limnosediminis

1341181

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Flimnosediminis/Flavobacterium_limnosediminis_jc2902.Flim1.0.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Flim.list --transl-table 11

redis-cli -a rnafold set "species:taxid:1341181:name" "Flavobacterium limnosediminis JC2902"

redis-cli -a rnafold set "species:name:Flavobacterium limnosediminis JC2902:taxid" "1341181"

redis-cli -a rnafold set "species:taxid:1341181:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:1341181:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:1341181:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1341181 --input ./data/Ensembl/Flimnosediminis/Flavobacterium_limnosediminis_jc2902.Flim1.0.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Flim.list --output-fasta ./data/Ensembl/Flimnosediminis/Flavobacterium_limnosediminis_jc2902.Flim1.0.cds.all.fa.gz.filtered.fna          

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Flim -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Flim.sh; done

cat ./data/Ensembl/Flimnosediminis/Flavobacterium_limnosediminis_jc2902.Flim1.0.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Flim.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadFli00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Flim.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadFli0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Flim.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadFli$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Flim.sh.template_0$i.job.sh; done



----------------------------------------------------------------------------------------------------------------------------------
Pseudomonas stutzeri

96563

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pstutzeri/Pseudomonas_stutzeri_atcc_17588_lmg_11199.ASM21960v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pstu.list --transl-table 11

redis-cli -a rnafold set "species:taxid:96563:name" "Pseudomonas stutzeri"

redis-cli -a rnafold set "species:name:Pseudomonas stutzeri:taxid" "96563"

redis-cli -a rnafold set "species:taxid:96563:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:96563:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:96563:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 96563 --input ./data/Ensembl/Pstutzeri/Pseudomonas_stutzeri_atcc_17588_lmg_11199.ASM21960v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Pstu.list --output-fasta ./data/Ensembl/Pstutzeri/Pseudomonas_stutzeri_atcc_17588_lmg_11199.ASM21960v1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Pstu -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Pstu.sh; done

cat ./data/Ensembl/Pstutzeri/Pseudomonas_stutzeri_atcc_17588_lmg_11199.ASM21960v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Pstu.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadPst00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pstu.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadPst0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pstu.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadPst$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pstu.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Candida albicans SC5314
237561

nice ~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Calbicans/Candida_albicans_sc5314.ASM18296v2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Calb.list --transl-table 1

redis-cli -a rnafold set "species:taxid:237561:name" "Candida albicans SC5314"

redis-cli -a rnafold set "species:name:Candida albicans SC5314:taxid" "237561"

redis-cli -a rnafold set "species:taxid:237561:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:237561:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:237561:mitochondrial-transl-table"  "4"

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 237561 --input ./data/Ensembl/Calbicans/Candida_albicans_sc5314.ASM18296v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Calb.list --output-fasta ./data/Ensembl/Calbicans/Candida_albicans_sc5314.ASM18296v2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Calb -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Calb.sh; done

cat ./data/Ensembl/Calbicans/Candida_albicans_sc5314.ASM18296v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Calb.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadCal00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Calb.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadCal0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Calb.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadCal$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Calb.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------

Thalassiosira pseudonana
296543


nice ~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Tpseudonana/Thalassiosira_pseudonana.ASM14940v2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Tpse.list --transl-table 1


redis-cli -a rnafold set "species:taxid:296543:name" "Thalassiosira pseudonana"

redis-cli -a rnafold set "species:name:Thalassiosira pseudonana:taxid" "296543"

redis-cli -a rnafold set "species:taxid:296543:tax-group" "Protists"

redis-cli -a rnafold set "species:taxid:296543:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:296543:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 296543 --input ./data/Ensembl/Tpseudonana/Thalassiosira_pseudonana.ASM14940v2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Tpse.list --output-fasta ./data/Ensembl/Tpseudonana/Thalassiosira_pseudonana.ASM14940v2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Tpse -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Tpse.sh; done

cat ./data/Ensembl/Tpseudonana/Thalassiosira_pseudonana.ASM14940v2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Tpse.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadTps00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadTps0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadTps$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_0$i.job.sh; done

for i in `seq 25 29`;   do qsub -q tamirs -N loadTps$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_0$i.job.sh; done

for i in `seq 30 34`;   do qsub -q tamirs -N loadTps$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_0$i.job.sh; done

for i in `seq 35 51`;   do qsub -q tamirs -N loadTps$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Tpse.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Plasmopara_halstedii
4781


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Phalstedii/Plasmopara_halstedii.Plasmopara_halstedii_genome.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Phal.list --transl-table 1


redis-cli -a rnafold set "species:taxid:4781:name" "Plasmopara halstedii"

redis-cli -a rnafold set "species:name:Plasmopara halstedii:taxid" "4781"

redis-cli -a rnafold set "species:taxid:4781:tax-group" "Protists"

redis-cli -a rnafold set "species:taxid:4781:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:4781:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 4781 --input ./data/Ensembl/Phals .cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Tpse.list --output-fasta ./data/Ensembl/Tpseudonana/Thalassiosira_pseudonana.ASM14940v2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Phal -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Phal.sh; done

cat ./data/Ensembl/Phalstedii/Plasmopara_halstedii.Plasmopara_halstedii_genome.cds.all.fa.gz.filtered.fna.shuffled.v2.list  | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Phal.sh.template



>>> Submit generated scripts
qsub -q tamirs -N loadPha00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadPha0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadPha$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_0$i.job.sh; done

for i in `seq 25 34`;   do qsub -q tamirs -N loadPha$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_0$i.job.sh; done

for i in `seq 35 44`;   do qsub -q tamirs -N loadPha$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_0$i.job.sh; done

for i in `seq 45 51`;   do qsub -q tamirs -N loadPha$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Phal.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Pythium vexans DAOM BR484
1223560

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pvexans/Pythium_vexans.GCA_000387545.2.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pvex.list --transl-table 1


redis-cli -a rnafold set "species:taxid:1223560:name" "Pythium vexans DAOM BR484" 

redis-cli -a rnafold set "species:name:Pythium vexans DAOM BR484:taxid" "1223560"

redis-cli -a rnafold set "species:taxid:1223560:tax-group" "Protists"

redis-cli -a rnafold set "species:taxid:1223560:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:1223560:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1223560 --input ./data/Ensembl/Pvexans/Pythium_vexans.GCA_000387545.2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Pvex.list --output-fasta ./data/Ensembl/Pvexans/Pythium_vexans.GCA_000387545.2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Pvex -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Pvex.sh; done

cat ./data/Ensembl/Pvexans/Pythium_vexans.GCA_000387545.2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Pvex.sh.template



>>> Submit generated scripts
qsub -q tamirs -N loadPve00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pvex.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadPve0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pvex.sh.template_00$i.job.sh; done

for i in `seq 10 51`;   do qsub -q tamirs -N loadPve$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pvex.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Pneumocystis murina b123
1069680

test_gff_extract_coding_genes.py --gff ./data/Ensembl/Pmurina/Pneumocystis_murina_b123.Pneumo_murina_B123_V4.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Pmur.list --transl-table 1


redis-cli -a rnafold set "species:taxid:1069680:name" "Pneumocystis murina b123" 

redis-cli -a rnafold set "species:name:Pneumocystis murina b123:taxid" "1069680"

redis-cli -a rnafold set "species:taxid:1069680:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:1069680:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:1069680:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1069680 --input ./data/Ensembl/Pmurina/Pneumocystis_murina_b123.Pneumo_murina_B123_V4.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Pmur.list --output-fasta ./data/Ensembl/Pmurina/Pneumocystis_murina_b123.Pneumo_murina_B123_V4.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Pmur -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Pmur.sh; done

cat ./data/Ensembl/Pmurina/Pneumocystis_murina_b123.Pneumo_murina_B123_V4.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Pmur.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadPmu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pmur.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadPmu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pmur.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadPmu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pmur.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadPmu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Pmur.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Wickerhamomyces ciferrii
1041607

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Wciferrii/Wickerhamomyces_ciferrii.ASM31348v1.32.gff3.gz --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Wcif.list --transl-table 1

redis-cli -a rnafold set "species:taxid:1041607:name" "Wickerhamomyces ciferrii" 

redis-cli -a rnafold set "species:name:Wickerhamomyces ciferrii:taxid" "1041607"

redis-cli -a rnafold set "species:taxid:1041607:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:1041607:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:1041607:mitochondrial-transl-table"  "3"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 1041607 --input ./data/Ensembl/Wciferrii/Wickerhamomyces_ciferrii.ASM31348v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Wcif.list --output-fasta ./data/Ensembl/Wciferrii/Wickerhamomyces_ciferrii.ASM31348v1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Wcif -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Wcif.sh; done

cat ./data/Ensembl/Wciferrii/Wickerhamomyces_ciferrii.ASM31348v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Wcif.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadWci00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wcif.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadWci0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wcif.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadWci$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wcif.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadWci$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Wcif.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Zymoseptoria tritici
336722

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ztritici/Zymoseptoria_tritici.MG2.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ztri.list --transl-table 1

redis-cli -a rnafold set "species:taxid:336722:name" "Zymoseptoria tritici" 

redis-cli -a rnafold set "species:name:Zymoseptoria tritici:taxid" "336722"

redis-cli -a rnafold set "species:taxid:336722:tax-group" "Fungi"

redis-cli -a rnafold set "species:taxid:336722:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:336722:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 336722 --input ./data/Ensembl/Ztritici/Zymoseptoria_tritici.MG2.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Ztri.list --output-fasta ./data/Ensembl/Ztritici/Zymoseptoria_tritici.MG2.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Ztri -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Ztri.sh; done

cat ./data/Ensembl/Ztritici/Zymoseptoria_tritici.MG2.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Ztri.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadZtr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ztri.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadZtr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ztri.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadZtr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ztri.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadZtr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Ztri.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Galdieria sulphuraria
130081

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Gsulphuraria/Galdieria_sulphuraria.ASM34128v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Gsul.list --transl-table 1


redis-cli -a rnafold set "species:taxid:130081:name" "Galdieria sulphuraria" 

redis-cli -a rnafold set "species:name:Galdieria sulphuraria:taxid" "130081"

redis-cli -a rnafold set "species:taxid:130081:tax-group" "Plants"

redis-cli -a rnafold set "species:taxid:130081:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:130081:mitochondrial-transl-table"  "1"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 130081 --input ./data/Ensembl/Gsulphuraria/Galdieria_sulphuraria.ASM34128v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Gsul.list --output-fasta ./data/Ensembl/Gsulphuraria/Galdieria_sulphuraria.ASM34128v1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Gsul -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Gsul.sh; done

cat ./data/Ensembl/Gsulphuraria/Galdieria_sulphuraria.ASM34128v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Gsul.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadGsu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadGsu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_00$i.job.sh; done

for i in `seq 10 14`;   do qsub -q tamirs -N loadGsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_0$i.job.sh; done

for i in `seq 15 24`;   do qsub -q tamirs -N loadGsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadGsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Cyanidioschyzon merolae
280699

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Cmerolae/Cyanidioschyzon_merolae.ASM9120v1.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Cmer.list --transl-table 1

redis-cli -a rnafold set "species:taxid:280699:name" "Cyanidioschyzon merolae"

redis-cli -a rnafold set "species:name:Cyanidioschyzon merolae:taxid" "280699"

redis-cli -a rnafold set "species:taxid:280699:tax-group" "Plants"

redis-cli -a rnafold set "species:taxid:280699:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:280699:mitochondrial-transl-table"  "1"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 280699 --input ./data/Ensembl/Cmerolae/Cyanidioschyzon_merolae.ASM9120v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Cmer.list --output-fasta ./data/Ensembl/Cmerolae/Cyanidioschyzon_merolae.ASM9120v1.cds.all.fa.gz.filtered.fna --dry-run 

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Cmer -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Cmer.sh; done

cat ./data/Ensembl/Cmerolae/Cyanidioschyzon_merolae.ASM9120v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Cmer.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadCme00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Cmer.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadCme0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Cmer.sh.template_00$i.job.sh; done

for i in `seq 10 14`;   do qsub -q tamirs -N loadCme$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Cmer.sh.template_0$i.job.sh; done

for i in `seq 15 24`;   do qsub -q tamirs -N loadCme$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Cmer.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadGsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Gsul.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Monosiga brevicollis MX1
431895

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Mbrevicollis/Monosiga_brevicollis_mx1.V1.0.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Mbre.list --transl-table 1


redis-cli -a rnafold set "species:taxid:431895:name" "Monosiga brevicollis MX1"

redis-cli -a rnafold set "species:name:Monosiga brevicollis MX1:taxid" "431895"

redis-cli -a rnafold set "species:taxid:431895:tax-group" "Opisthokonta"

redis-cli -a rnafold set "species:taxid:431895:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:431895:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 431895 --input ./data/Ensembl/Mbrevicollis/Monosiga_brevicollis_mx1.V1.0.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Mbre.list --output-fasta ./data/Ensembl/Mbrevicollis/Monosiga_brevicollis_mx1.V1.0.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Mbre -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Mbre.sh; done

cat ./data/Ensembl/Mbrevicollis/Monosiga_brevicollis_mx1.V1.0.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Mbre.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadMbr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Mbre.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadMbr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Mbre.sh.template_00$i.job.sh; done

for i in `seq 10 14`;   do qsub -q tamirs -N loadMbr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Mbre.sh.template_0$i.job.sh; done

for i in `seq 15 24`;   do qsub -q tamirs -N loadMbr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Mbre.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadMbr$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Mbre.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Salpingoeca rosetta
946362

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Srosetta/Salpingoeca_rosetta.Proterospongia_sp_ATCC50818.32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Sros.list --transl-table 1

redis-cli -a rnafold set "species:taxid:946362:name" "Salpingoeca rosetta"

redis-cli -a rnafold set "species:name:Salpingoeca rosetta:taxid" "946362"

redis-cli -a rnafold set "species:taxid:946362:tax-group" "Opisthokonta"

redis-cli -a rnafold set "species:taxid:946362:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:946362:mitochondrial-transl-table"  "1"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 946362 --input ./data/Ensembl/Srosetta/Salpingoeca_rosetta.Proterospongia_sp_ATCC50818.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Sroset.list --output-fasta ./data/Ensembl/Srosetta/Salpingoeca_rosetta.Proterospongia_sp_ATCC50818.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 52`; do qsub -q tamirs -N shuf.Sros -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Sros.sh; done

cat ./data/Ensembl/Srosetta/Salpingoeca_rosetta.Proterospongia_sp_ATCC50818.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Sroset.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadSro00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sroset.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadSro0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sroset.sh.template_00$i.job.sh; done

for i in `seq 10 24`;   do qsub -q tamirs -N loadSro$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sroset.sh.template_0$i.job.sh; done

for i in `seq 25 51`;   do qsub -q tamirs -N loadSro$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Sroset.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Physcomitrella patens
3218

~/anconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ppatens/Phy .32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ppat.list --transl-table 1


redis-cli -a rnafold set "species:taxid:3218:name" "Physcomitrella patens"

redis-cli -a rnafold set "species:name:Physcomitrella patens:taxid" "3218"

redis-cli -a rnafold set "species:taxid:3218:tax-group" "Plants"

redis-cli -a rnafold set "species:taxid:3218:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:3218:mitochondrial-transl-table"  "1"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 3218 --input ./data/Ensembl/Ppatens/Physcomitrella_patens.ASM242v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Ppat.list --output-fasta ./data/Ensembl/Ppatens/Physcomitrella_patens.ASM242v1.cds.all.fa.gz.filtered.fna --dry-run


----------------------------------------------------------------------------------------------------------------------------------
Amphimedon queenslandica
400682

x~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Aquee  .32.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Aque.list --transl-table 1


redis-cli -a rnafold set "species:taxid:400682:name" "Amphimedon queenslandica"

redis-cli -a rnafold set "species:name:Amphimedon queenslandica:taxid" "400682"

redis-cli -a rnafold set "species:taxid:400682:tax-group" "Metazoa"

redis-cli -a rnafold set "species:taxid:400682:genomic-transl-table"  "1"

redis-cli -a rnafold set "species:taxid:400682:mitochondrial-transl-table"  "4"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 400682 --input ./data/Ensembl/Aqueenslandica/Amphimedon_queenslandica.Aqu1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Aque.list --output-fasta ./data/Ensembl/Aqueenslandica/Amphimedon_queenslandica.Aqu1.cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 22`; do qsub -q tamirs -N shuf.Aque -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Aque.sh; done


cat ./data/Ensembl/Aqueenslandica/Amphimedon_queenslandica.Aqu1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Aque.sh.template


>>> Submit generated scripts
qsub -q tamirs -N loadAqu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aque.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadAqu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aque.sh.template_00$i.job.sh; done

for i in `seq 10 19`;   do qsub -q tamirs -N loadAqu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Aque.sh.template_0$i.job.sh; done


----------------------------------------------------------------------------------------------------------------------------------
Daphnia pulex
6669

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Dpulex/Daphnia_pulex.GCA_000187875.1.33.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Dpul.list --transl-table 1

redis-cli -a rnafold set "species:taxid:6669:name" "Daphnia pulex"

redis-cli -a rnafold set "species:name:Daphnia pulex:taxid" "6669"

redis-cli -a rnafold set "species:taxid:6669:tax-group" "Metazoa"

redis-cli -a rnafold set "species:taxid:6669:genomic-transl-table"  "1"
redis-cli -a rnafold set "species:taxid:6669:mitochondrial-transl-table"  "5"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 6669 --input ./data/Ensembl/Dpul .cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Dpul.list --output-fasta ./data/Ensembl/Dpule .cds.all.fa.gz.filtered.fna --dry-run

for i in `seq 1 22`; do qsub -q tamirs -N shuf.Dpul -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Dpul.sh; done

cat ./data/Ensembl/Dpulex/Daphnia_pulex.GCA_000187875.1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Dpul.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadDpu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dpul.sh.template_000.job.sh

for i in `seq 1 4`;   do qsub -q tamirs -N loadDpu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dpul.sh.template_00$i.job.sh; done

for i in `seq 5 9`;   do qsub -q tamirs -N loadDpu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dpul.sh.template_00$i.job.sh; done

for i in `seq 10 19`;   do qsub -q tamirs -N loadDpu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Dpul.sh.template_0$i.job.sh; done

----------------------------------------------------------------------------------------------------------------------------------
Yersinia Pestis CO92 (aka Colorado-92)
632

Oops - No gff3 in Ensembl directory!

xxxxx~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Ypestis gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Ypes.list --transl-table 11


xxxredis-cli -a rnafold set "species:taxid:6669:name" "Daphnia pulex"

xxxredis-cli -a rnafold set "species:name:Daphnia pulex:taxid" "6669"

xxxredis-cli -a rnafold set "species:taxid:6669:tax-group" "Metazoa"

xxxxredis-cli -a rnafold set "species:taxid:6669:genomic-transl-table"  "1"
xxxredis-cli -a rnafold set "species:taxid:6669:mitochondrial-transl-table"  "5"

xxxxnice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 6669 --input ./data/Ensembl/Dpul .cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Dpul.list --output-fasta ./data/Ensembl/Dpule .cds.all.fa.gz.filtered.fna --dry-run


----------------------------------------------------------------------------------------------------------------------------------
Bacillus subtilis subsp. subtilis str. 168
224308

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/Ensembl/Bsubtilis/Bacillus_subtilis_subsp_subtilis_str_168.ASM904v1.33.chromosome.Chromosome.gff3.gz  --variant Ensembl --output-gene-ids ./data/Ensembl/coding_genes_list.Bsubt.list --transl-table 11

redis-cli -a rnafold set "species:taxid:224308:name" "Bacillus subtilis subsp. subtilis str. 168"

redis-cli -a rnafold set "species:name:Bacillus subtilis subsp. subtilis str. 168:taxid" "224308"

redis-cli -a rnafold set "species:taxid:224308:tax-group" "Bacteria"

redis-cli -a rnafold set "species:taxid:224308:genomic-transl-table"  "11"
#redis-cli -a rnafold set "species:taxid:224308:mitochondrial-transl-table"  "5"

nice ~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 224308 --input ./data/Ensembl/Bsubtilis/Bacillus_subtilis_subsp_subtilis_str_168.ASM904v1.cds.all.fa.gz --variant Ensembl --type cds --gene-ids-file ./data/Ensembl/coding_genes_list.Bsubt.list --output-fasta ./data/Ensembl/Bsubtilis/Bacillus_subtilis_subsp_subtilis_str_168.ASM904v1.cds.all.fa.gz.filtered.fna --dry-run


for i in `seq 1 22`; do qsub -q tamirs -N shuf.Bsub -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_shuffle_fasta_Bsubt.sh; done

cat ./data/Ensembl/Bsubtilis/Bacillus_subtilis_subsp_subtilis_str_168.ASM904v1.cds.all.fa.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Bsubt.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadBsu00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsubt.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs -N loadBsu0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsubt.sh.template_00$i.job.sh; done

for i in `seq 10 19`;   do qsub -q tamirs -N loadBsu$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Bsubt.sh.template_0$i.job.sh; done



----------------------------------------------------------------------------------------------------------------------------------
Volvox carterii




----------------------------------------------------------------------------------------------------------------------------------

mich1@power5:~/rnafold$ date; qstat -u mich1 | grep mich1 | grep -c Q
Mon Sep 12 11:55:34 IDT 2016
40
mich1@power5:~/rnafold$ date; redis-cli -a rnafold get status:job:556484:progress
Mon Sep 12 11:55:40 IDT 2016
"14771"
mich1@power5:~/rnafold$ date; redis-cli -a rnafold llen "queue:tag:awaiting-rna-fold-window-40-0:members"
Mon Sep 12 11:55:45 IDT 2016
(integer) 29002




August

21

zcat Phaeodactylum_tricornutum.ASM15095v2.32.gff3.gz | grep "gene\s" | grep biotype=protein_coding | head




July

30

>>> Use GFF3 file to create list of coding yeast genes (not including pseudogenes, retrotransposon genes, mitochondrial and plasmid genes)
> test_gff_extract_coding_genes.py
> wc -l yeast_coding_genes.txt 
5797 yeast_coding_genes.txt

>>> Store all native yeast gene CDS sequences in the database

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 559292 --input data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta --variant yeastgenome --type cds >data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta_insert_to_db.log

redis 127.0.0.1:6379> scard species:taxid:559292:CDS
(integer) 5797

>>> I forgot to create the output file (which will be the basis for creating shuffled seqs...)
~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 559292 --input data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta --variant yeastgenome --type cds --dry-run --output-fasta data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta.filtered.fna

mich1@power5:~/rnafold$ grep -c "^>" data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta.filtered.fna
5797

>>> Start jobs to shuffle CDS seqs
for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Sce -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_shuffle_fasta_Scer.sh; done

>>> Bug in store_seqs_from_fasta.py caused the redis key species:...:CDS to be deleted; recreate it...

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 559292 --input data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta --variant yeastgenome --type fixCDSkey

redis 127.0.0.1:6379> scard species:taxid:559292:CDS
(integer) 5797
 
>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 559292 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 50`; do qsub -q tamirs1 -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_rnafold_sliding_window.sh; done


>>>>>>>>>>>>>>>>>>>>>>>..

>>> Template-gen scripts for 100 runs to load shuffled seqs (using the list of shuffled files created using ls)
cd data/....
ls orf_coding_all_R64-2-1_20150113.fasta.filtered.fna.shuffled.v2.compute-0-*.fna >orf_coding_all_R64-2-1_20150113.fasta.filtered.fna.shuffled.v2.list
cat ./data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta.filtered.fna.shuffled.v2.list |  ~/anaconda2_node/bin/python2 auto_qsub.py job_load_shuffled_seqs_Scer.sh.template

>>> Submit generated scripts
qsub -q tamirs1 -N loadSce00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Scer.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadSce0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Scer.sh.template_00$i.job.sh; done

for i in `seq 10 29`;   do qsub -q tamirs1 -N loadSce$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=4:00:00 job_load_shuffled_seqs_Scer.sh.template_0$i.job.sh; done

>>> Enqueue first 15 shuffled sets for processing
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 559292 rna-fold-window-40-0 1

redis 127.0.0.1:6379> llen queue:tag:awaiting-rna-fold-window-40-0:members
(integer) 86955

for i in `seq 1 20`; do qsub -q tamirs1 -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=03:59:00 job_rnafold_sliding_window.sh; done



>>> Enqueue first 15 shuffled sets for processing
(first edit file)
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 559292 rna-fold-window-40-0 1

redis 127.0.0.1:6379> llen queue:tag:awaiting-rna-fold-window-40-0:members
(integer) 191301

for i in `seq 1 20`; do qsub -q tamirs1 -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=03:59:00 job_rnafold_sliding_window.sh; done

>>> Load CDS seqs

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 559292 --input data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta --variant yeastgenome --type cds >data/yeastgenome.org/S288C_reference_genome_R64-2-1_20150113/orf_coding_all_R64-2-1_20150113.fasta_insert_to_db.log

redis 127.0.0.1:6379> scard species:taxid:559292:CDS
(integer) 5797




>>>>>>>>>>>>>>>>>>>>>>>> Ecoli

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Ecoli/GCF_000005845.2_ASM584v2_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Ecoli.list --transl-table 11

wc -l ./data/NCBI/coding_genes.Ecoli.list
4097 ./data/NCBI/coding_genes.Ecoli.list

>>> Create species entries


redis 127.0.0.1:6379> set "species:taxid:511145:name"  "Escherichia coli str. K-12 substr. MG1655"
OK
redis 127.0.0.1:6379> set "species:name:Escherichia coli str. K-12 substr. MG1655:taxid" "511145"
OK
redis 127.0.0.1:6379> set "species:taxid:511145:genomic-transl-table"  "11"
OK


>>> Load CDS seqs
~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 511145 --input ./data/NCBI/Ecoli/GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz --variant NCBI --type cds   --output-fasta  ./data/NCBI/Ecoli/GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Ecoli.list

scard "species:taxid:511145:CDS"
(integer) 4137

grep -c "^>" ./data/NCBI/Ecoli/GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz.filtered.fna
4137


>>> Start jobs to shuffle CDS seqs
for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Ecol -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:10:00 job_shuffle_fasta_Eco.sh; done


>>> Enqueue CDSs (without checking if anything has already been computed):
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 511145 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 20`; do qsub -q tamirs1 -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_rnafold_sliding_window.sh; done

ls GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.*.fna > GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz.filtered.fna.shuffled.list

cat ./data/NCBI/Ecoli/GCF_000005845.2_ASM584v2_cds_from_genomic.fna.gz.filtered.fna.shuffled.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Ecol.sh.template

>>> Submit generated scripts
qsub -q tamirs1 -N loadEco00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Ecol.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadEco0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Ecol.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs1 -N loadEco$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Ecol.sh.template_0$i.job.sh; done

>>> enqueue shuffled seqs for calculation
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 511145 rna-fold-window-40-0 1

llen queue:tag:awaiting-rna-fold-window-40-0:members
(integer) 200800


>>>>>>>>>>>>>>>>>>>>> Pseudomonas aeruginosa
redis 127.0.0.1:6379> set "species:taxid:208964:name" "Pseudomonas aeruginosa PAO1"
OK
redis 127.0.0.1:6379> set "species:name:Pseudomonas aeruginosa PAO1:taxid" "208964"
OK
redis 127.0.0.1:6379> set "species:taxid:208964:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Paeruginosa/GCF_000006765.1_ASM676v1_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Paeruginosa.list --transl-table 11

wc -l ./data/NCBI/coding_genes.Paeruginosa.list
5572 ./data/NCBI/coding_genes.Paeruginosa.list

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 208964 --input ./data/NCBI/Paeruginosa/GCF_000006765.1_ASM676v1_cds_from_genomic.fna.gz --variant NCBI --type cds   --output-fasta ./data/NCBI/Paeruginosa/GCF_000006765.1_ASM676v1_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Paeruginosa.list 

scard "species:taxid:208964:CDS"
(integer) 5571

for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Paer -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:10:00 job_shuffle_fasta_Paer.sh; done


>>> Enqueue native CDS sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 208964 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
for i in `seq 1 20`; do qsub -q tamirs1 -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=12:00:00 job_rnafold_sliding_window.sh; done


>>> Load shuffled seqs
ls GCF_000006765.1_ASM676v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.*.fna >GCF_000006765.1_ASM676v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.list
cat ./data/NCBI/Paeruginosa/GCF_000006765.1_ASM676v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Paer.sh.template


>>> Submit generated scripts
qsub -q tamirs1 -N loadPae00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Paer.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadPae0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Paer.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs1 -N loadPae$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=1:00:00 job_load_shuffled_seqs_Paer.sh.template_0$i.job.sh; done


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Acinetobacter baumannii ATCC 17978
redis 127.0.0.1:6379> set "species:taxid:400667:name" "Acinetobacter baumannii ATCC 17978"
OK
redis 127.0.0.1:6379> set "species:name:Acinetobacter baumannii ATCC 17978:taxid" "400667"
OK
redis 127.0.0.1:6379> set "species:taxid:400667:genomic-transl-table"  "11"
OK

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Abaumannii.list --transl-table 11  --alt-protein-ids=locus_tag

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Abaumannii.list2 --transl-table 11

wc -l ./data/NCBI/coding_genes.Abaumannii.list
3870 ./data/NCBI/coding_genes.Abaumannii.list

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 400667 --input ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz --variant NCBI --type cds   --output-fasta ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Abaumannii.list  --alt-protein-ids=locus_tag

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 400667 --input ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz --variant NCBI --type cds   --output-fasta ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Abaumannii.list2

scard "species:taxid:400667:CDS"
(integer) 4155


for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Abau -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:20:00 job_shuffle_fasta_Abau.sh; done


>>> Enqueue native CDS sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 400667 rna-fold-window-40-0 1


>>> Load shuffled seqs
ls ..........
cat ./data/NCBI/Abaumannii/GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Abau.sh.template
>>>>>>>>>>

>>> Submit generated scripts
qsub -q tamirs1 -N loadAba00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Abau.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadAba0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Abau.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs1 -N loadAba$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Abau.sh.template_0$i.job.sh; done


>>> Create a list of protein ids that are not used in multiple CDSs

grep "^>" GCF_000746645.1_ASM74664v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.compute-0-12.power5.26452.fna | perl -pe "s/.*_cds_//" | perl -pe "s/_\d+$//" | sort | uniq -c | sort -n | head -n 3780 | perl -pe "s/\s+1\s+//" >single_occuring_protein_ids.list

wc -l single_occuring_protein_ids.list
3780 single_occuring_protein_ids.list



>>>>>>>>>>>>>>>>>>>>> Eremothecium gossypii
redis 127.0.0.1:6379> set "species:taxid:284811:name" "Eremothecium gossypii ATCC 10895 (assembly ASM9102v4)"
OK
redis 127.0.0.1:6379> set "species:name:Eremothecium gossypii ATCC 10895 (assembly ASM9102v4):taxid" "284811"
OK
redis 127.0.0.1:6379> set "species:taxid:284811:genomic-transl-table"  "1"
OK

~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Egossypii/GCF_000091025.4_ASM9102v4_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Egossypii.list --transl-table 1

wc -l ./data/NCBI/coding_genes.Egossypii.list
4768 ./data/NCBI/coding_genes.Egossypii.list

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 284811 --input ./data/NCBI/Egossypii/GCF_000091025.4_ASM9102v4_cds_from_genomic.fna.gz --variant NCBI --type cds   --output-fasta ./data/NCBI/Egossypii/GCF_000091025.4_ASM9102v4_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Egossypii.list 

scard "species:taxid:284811:CDS"
(integer) 4768

for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Egos -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:20:00 job_shuffle_fasta_Egos.sh; done


>>> Enqueue native CDS sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 284811 rna-fold-window-40-0 1


>>> Load shuffled seqs
ls GCF_000091025.4_ASM9102v4_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.compute-0-* >GCF_000091025.4_ASM9102v4_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.list
cat ./data/NCBI/Egossypii/GCF_000091025.4_ASM9102v4_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.list | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Egos.sh.template


>>> Submit generated scripts
qsub -q tamirs1 -N loadEgo00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Egos.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadEgo0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Egos.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs1 -N loadEgo$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Egos.sh.template_0$i.job.sh; done


>>> 
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 284811 rna-fold-window-40-0 1





>>>>>>>>>>>>>>>>>>>>> Phaeodactylum tricornutum CCAP 1055/1


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Ptricornutum/GCF_000150955.2_ASM15095v2_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Ptricornutum.list --transl-table 1


wc -l ./data/NCBI/coding_genes.Ptricornutum.list 
10408 ./data/NCBI/coding_genes.Ptricornutum.list

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 556484 --input ./data/NCBI/Ptricornutum/GCF_000150955.2_ASM15095v2_cds_from_genomic.fna.gz --variant NCBI --type cds --output-fasta ./data/NCBI/Ptricornutum/GCF_000150955.2_ASM15095v2_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Ptricornutum.list

127.0.0.1:6379> scard "species:taxid:556484:CDS"
(integer) 10408

>>> Enqueue native CDS sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 556484 rna-fold-window-40-0 1

>>> Shuffle
for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Ptri -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:10:00 job_shuffle_fasta_Ptri.sh; done





>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Bacteroides fragilis YCH46

redis 127.0.0.1:6379> set "species:taxid:295405:name" "Bacteroides fragilis YCH46"
OK
redis 127.0.0.1:6379> set "species:name:Bacteroides fragilis YCH46:taxid" "295405"
OK
redis 127.0.0.1:6379> set "species:taxid:295405:genomic-transl-table"  "11"
OK


~/anaconda2/bin/python2 test_gff_extract_coding_genes.py --gff ./data/NCBI/Bfragilis/GCF_000009925.1_ASM992v1_genomic.gff.gz --variant NCBI --output-gene-ids ./data/NCBI/coding_genes.Bfragilis.list --transl-table 11


wc -l ./data/NCBI/coding_genes.Bfragilis.list
4625 ./data/NCBI/coding_genes.Bfragilis.list

~/anaconda2/bin/python2 store_seqs_from_fasta.py --taxid 295405 --input ./data/NCBI/Bfragilis/GCF_000009925.1_ASM992v1_cds_from_genomic.fna.gz --variant NCBI --type cds --output-fasta ./data/NCBI/Bfragilis/GCF_000009925.1_ASM992v1_cds_from_genomic.fna.gz.filtered.fna --gene-ids-file ./data/NCBI/coding_genes.Bfragilis.list

scard "species:taxid:295405:CDS"
(integer) 4625

for i in `seq 1 50`; do qsub -q tamirs1 -N shuf.Bfra -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=0:20:00 job_shuffle_fasta_Bfra.sh; done



>>> Load shuffled seqs
ls GCF_000009925.1_ASM992v1_cds_from_genomic.fna.gz.filtered.fna.shuffled.v2.-* >GCF_000009925.1_ASM992v1_cds_from_genomic.fna.gz.filtered.fna.list
cat ./data/NCBI/Bfragilis/GCF_000009925.1_ASM992v1_cds_from_genomic.fna.gz.filtered.fna.list  | ~/anaconda2/bin/python2 auto_qsub.py job_load_shuffled_seqs_Bfra.sh.template

>>> Submit generated scripts
qsub -q tamirs1 -N loadBfr00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Bfra.sh.template_000.job.sh

for i in `seq 1 9`;   do qsub -q tamirs1 -N loadBfr0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Bfra.sh.template_00$i.job.sh; done

for i in `seq 10 49`;   do qsub -q tamirs1 -N loadBfe$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb,cput=2:00:00 job_load_shuffled_seqs_Bfra.sh.template_0$i.job.sh; done


>>> Enqueue native CDS sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 295405  rna-fold-window-40-0 1







26

redis 127.0.0.1:6379> set "species:taxid:1234:name" "Test species"
OK
redis 127.0.0.1:6379> set "species:name:Test species:taxid" "1234"
OK


09

>>> Prepare to import yeast sequences into the database

redis 127.0.0.1:6379> set "species:taxid:559292:name" "Saccharomyces cerevisiae S288c"
OK
redis 127.0.0.1:6379> set "species:name:Saccharomyces cerevisiae S288c:taxid" "559292"
OK




04

>>> Requeue sequences missing from already-computed groups (by surveying existing results):
~/anaconda2_node/bin/python2 requeue_shuffled_sequences_missing_energies_for_sliding_window2.py 3055

>>> Enqueue new groups (30-50), without checking if anything has already been computed:
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 3055 rna-fold-window-40-0 1

>>> Running MFE sliding-window workers
qsub -q tamirs -N worker -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_rnafold_sliding_window.sh 


03

>>> Queue for a test-run: 1/500 of the sequences
~/anaconda2/bin/python2 requeue_sequences_missing_energies_for_sliding_window.py 3055 rna-fold-window-40-0 500



>>> Template-gen scripts for 100 runs to load shuffled seqs (using the list of shuffled files created using ls)
cat ./data/JGI/PhytozomeV11/Creinhardtii/annotation/Creinhardtii_281_v5.5.cds_primaryTranscriptOnly.fa.shuffled.v2.list.txt |  ~/anaconda2_node/bin/python2 auto_qsub.py job_load_shuffled_seqs.sh.template

>>> Submit generated scripts
qsub -q tamirs -N loadCre00 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_load_shuffled_seqs.sh.template_000.job.sh
for i in `seq 1 9`;   do qsub -q tamirs -N loadCre0$i -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_load_shuffled_seqs.sh.template_00$i.job.sh; done
for i in `seq 10 19`; do qsub -q tamirs -N loadCre$i  -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_load_shuffled_seqs.sh.template_0$i.job.sh;  done
for i in `seq 20 39`; do qsub -q tamirs -N loadCre$i  -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_load_shuffled_seqs.sh.template_0$i.job.sh;  done
for i in `seq 40 99`; do qsub -q tamirs -N loadCre$i  -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_load_shuffled_seqs.sh.template_0$i.job.sh;  done

Missing sequences (because some jobs couldn't start due to too many DB connections):

Shuffle-group   count
--------------------
55-59           5
64-72           9
74              1
78-81           4
83              1
85-86           2
88-92           5
94              1
96-97           2
99              1
-------------------
total           31

>>> Test shuffled seqs
~/anaconda2_node/bin/python2 test_data_helpers.py

>>>






June 


30



29

>>> Import CDS sequences
~/bin/python2 store_seqs_from_fasta.py 3055 ./data/JGI/PhytozomeV11/Creinhardtii/annotation/Creinhardtii_281_v5.5.cds_primaryTranscriptOnly.fa cds


>>> Import shuffled sequences
~/bin/python2 store_seqs_from_fasta.py 3055 ./data/JGI/PhytozomeV11/Creinhardtii/annotation/Creinhardtii_281_v5.5.cds_primaryTranscriptOnly.fa.shuffled.v2.compute-0-101.power5.35140.fna shuffled





28
>>> Starting an interactive job

qsub -q tamirs -N test2 -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb -I


>>> Submitting GFF processing job (CDS splicing)
qsub -q tamirs -N gff.Crei -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_extract_cds_creinhardtii.sh

>>> Submitting CDS shuffling job (x20)
qsub -q tamirs -N shuf.Cre -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_shuffle_fasta_Crein_cds.sh

for i in `seq 1 30`; do qsub -q tamirs -N shuf.Cre -l mem=1800mb,pmem=1800mb,vmem=3000mb,pvmem=3000mb job_shuffle_fasta_Crein_cds.sh; done



27

>>> Test cluster job submission
qsub -q tamirs1 -N test1 test.sh

>>> Test s3 transfer (using s3cmd, after copying up ~/.s3config)
s3cmd ls s3://30lark/
s3cmd get --force s3://30lark/code_snapshot.tar.gz


>>> Connect to mysql server on aws

mysql -u rnafold -p -A rnafold -h ec2-52-87-192-33.compute-1.amazonaws.com

>>> Display disk usage by table

SELECT table_name, data_length, index_length, (data_length+index_length)/power(1024,2) as tablesize_mb
FROM information_schema.tables
WHERE table_schema='rnafold';



26

>>> Lookup public ip address used by power5 to determine which address to permit access for mysql port

# The following results may also be obtained via:
# https://whois.arin.net/rest/nets;q=132.66.32.249?showDetails=true&showARIN=false&showNonArinTopLevelNet=false&ext=netref2
#

NetRange:       132.64.0.0 - 132.78.255.255
CIDR:           132.64.0.0/13, 132.72.0.0/14, 132.78.0.0/16, 132.76.0.0/15

>>> Set mysql rnafold password.
>>> Set root password
mysql root password:
select CURRENT_USER();
+----------------+
| CURRENT_USER() |
+----------------+
| root@localhost |
+----------------+
1 row in set (0.00 sec)

mysql> set password for 'root'@'localhost' = PASSWORD('akChut9oltoiHemUrjEg9');
mysql> set password for 'root'@'localhost' = PASSWORD('akChut9oltoiHemUrjEg9');
Query OK, 0 rows affected (0.00 sec)

# NOTE: This SQL syntax has been deprecated in more recent versions of mysql (I'm using the slightly old version in Ubuntu).


>>> Connecting to mysql, hosted on AWS
#        <user>     <server public IP>                        <ask for pass>   <database>
mysql -u rnafold -h ec2-54-172-27-228.compute-1.amazonaws.com -p               rnafold



23

- Creating a python virtualenv in my home-dir (without root priviledges):
virtualenv .
./bin/pip install <package>

./bin/python2 .....


git clone git@github.com:michaelpeeri/rnafold.git rnafold



15

- Continuing to test the existing data

- Import yeast genome (process gff to create .json)
% (in matlab:)
extract_cds_from_gff(1, 7058)

- Compare extracted and spliced CDS sequences to the reference:
python2 compare_fasta_files_by_checksums.py data/Saccharomyces_cerevisiae.R64-1-1.31.cds.all.fa results_1_7058.cds_only.fna 
Identical: 5809  Different: 2  Not found: 1

- Compare the translations of all shuffled sequences already in the DB (to make sure the shuffling maintains the translation)
python2 annotate_sequences_with_checksums.py 3055
Done - processed 9559 sequences; 9559 identical

python2 annotate_sequences_with_checksums.py 556484
Done - processed 8752 sequences; 8752 identical


14

Processing Yeast (S. cer) genome

CDS sequences retrieved from:
ftp://ftp.ensemblgenomes.org/pub/fungi/release-31/fasta/saccharomyces_cerevisiae

- renamed process.m to extract_cds_from_gff.m


09 - 

# Scan the database (for specified species); add queue entries for CDS records missing sliding-window values for shuffled seqs
python2 requeue_shuffled_sequences_missing_energies_for_sliding_window.py 556484,3055 rna-fold-window-40-0 1

# Monitor queue 
date; redis-cli llen "queue:tag:awaiting-rna-fold-window-40-0:members"

# Worker thread command-line
nohup python2 rnafold_sliding_window.py rna-fold-window-40-0

# Extract data from DB to CSV for plotting
python2 convert_data_for_plotting.py >window200.csv

#
select count(distinct sequence_id), count(*), taxid from sequence_series, sequences where sequence_series.sequence_id=sequences.id and sequence_series.source=102 group by taxid;
+-----------------------------+-----------+--------+
| count(distinct sequence_id) | count(*)  | taxid  |
+-----------------------------+-----------+--------+
|                      105107 | 147433290 |   3055 |
|                       96272 | 139027779 | 556484 |
+-----------------------------+-----------+--------+




08 - Migrating sliding window data to mysql
TODO: Check the following warning (emitted by migrate_sliding_windows_redis_to_mysql.py):
Warning: skipping sequence (taxid=3055, prot-id=XP_001696516.1) because it has the wrong number of elements (1583, expected 1584)

-After migration, made changes to db sequence_series (removed taxid, added ext_index). Afterwards, status is:

mysql> select taxid, sequence_series.`source`, count(distinct sequence_id), count(*), from sequence_series, sequences where sequence_series.sequence_id=sequences.id group by taxid, sequence_series.`source`;
+--------+--------+-----------------------------+----------+
| taxid  | source | count(distinct sequence_id) | count(*) |
+--------+--------+-----------------------------+----------+
|   3055 |    102 |                        9557 | 13406730 |
| 556484 |    102 |                        8752 | 12638889 |
+--------+--------+-----------------------------+----------+
2 rows in set (1 min 12.29 sec)


(26M entries total.)



07 - 
TODO - remove shuffled-seq-id entries (from redis) for partial sequences. There should be 591 such entries (created by mistake) and their respective entires (containing null sequences) were already removed from mysql.

TODO - import shuffled (v2) sequences - 10 per CDS


06 - 
warning('off','Bioinfo:fastawrite:AppendToFile'); 
shuffle_fasta('/home/michael/rnafold/data/complete_cds_3055.fna', 1)



05 - Analyzing memory redis usage to optimize storage of sliding window energies.
  This can be done using the following command (https://github.com/sripathikrishnan/redis-rdb-tools):
rdb -c memory /var/lib/redis/temp-1008.rdb >memory.csv



May

26 - Re-organized scripts (added comments, clean-up).
   - Writing draft of methods section.
25 - Created github repository

